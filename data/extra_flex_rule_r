-?[0-9]+"."[0-9]* |
-?[0-9]+"."[0-9]*e-?\+?[0-9]+ |
-?[0-9]+e-?\+?[0-9]+ |
"."[0-9]*
-----
yylval->fval = atof(yytext);
return PREFIX_FLOATLITERAL;
+++++
-?[0-9]+[\+|\-][0-9]+i |
-?[0-9]+i |
-?[0-9]+"."[0-9]+i |
-?[0-9]+"."[0-9]+[\+|\-][0-9]*i |
-?[0-9]+[\+|\-][0-9]+"."[0-9]+i |
-?[0-9]+"."[0-9]+[\+|\-][0-9]+"."[0-9]+i |
-?[0-9]+e-?\+?[0-9]+i |
-?[0-9]+"."[0-9]+e-?\+?[0-9]+i
-----
yylval->fval = 1.0;
return PREFIX_FLOATLITERAL;
+++++
-?[0-9]+L?
-----
yylval->ival = atol(yytext);
return PREFIX_INTLITERAL;
+++++
\"[^\"\n]*\"
-----
std::string s(yytext);
yylval->sval = strdup(s.substr(1, s.size()-1).c_str());
return PREFIX_STRINGLITERAL;
+++++
[A-Za-z][A-Za-z0-9_\.]* 
-----
yylval->sval = strdup(yytext);
return PREFIX_IDENTIFIER;
+++++
\'
-----
BEGIN singlequotedstring; strbuf = std::stringstream{}; strbuf << '\'';
+++++
<singlequotedstring>\'\'
-----
strbuf << '\'';
+++++
<singlequotedstring>[^']*
-----
strbuf << yytext;
+++++
<singlequotedstring>\'
-----
BEGIN 0; 
strbuf << '\'';
yylval->sval = strdup(strbuf.str().c_str());
return PREFIX_STRINGLITERAL;
+++++
<singlequotedstring><<EOF>>
-----
return 0;
+++++
[ \t]+
-----
+++++
"#".*$
-----
+++++
.
-----
return 0;
