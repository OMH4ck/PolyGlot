';'  OP_SEMI
'='  OP_EQUAL
'.'  OP_DOT
','  OP_COMMA
'('  OP_LP
')'  OP_RP
'*'  OP_STAR
'+'  OP_ADD
'-'  OP_SUB
'%'  OP_MOD
'['  OP_LBRACKET
']'  OP_RBRACKET
':'  OP_COLON
'/'  OP_DIVIDE
'^'  OP_XOR
'<'  OP_LESSTHAN
'>'  OP_GTEATERTHAN
'{'  OP_LBRACE
'}'  OP_RBRACE
'?'  OP_QUESTION
'&'  OP_BITAND
'|'  OP_BITOR
'~'  OP_BITNOT
'!'  OP_NOT
'_'  OP_UNDERLINE
'>>>'  OP_TG
'#'  OP_WELL
':='  OP_COLON_EQUAL
'false'  FALSE 
'true'  TRUE
'null'  NULL
'auto'  AUTO
'break'  BREAK
'case'  CASE
'char'  CHAR
'const'  CONST
'continue'  CONTINUE
'default'  DEFAULT
'do'  DO
'double'  DOUBLE
'else'  ELSE
'enum'  ENUM
'extern'  EXTERN
'float'  FLOAT
'for'  FOR
'goto'  GOTO
'if'  IF
'int'  INT
'long'  LONG
'register'  REGISTER
'return'  RETURN
'short'  SHORT
'signed'  SIGNED
'sizeof'  SIZEOF
'static'  STATIC
'struct'  STRUCT
'switch'  SWITCH
'typedef'  TYPEDEF
'union'  UNION
'contract'  CONTRACT
'library'  LIBRARY
'is'  IS
'internal'  INTERNAL
'external'  EXTERNAL
'constant'  CONSTANT
'using'  USING
'modifier'  MODIFIER
'virtual'  VIRTUAL
'returns'  RETURNS
'constructor'  CONSTRUCTOR
'fallback'  FALLBACK
'receive'  RECEIVE
'override'  OVERRIDE
'event'  EVENT
'indexed'  INDEXED
'mapping'  MAPPING
'address'  ADDRESS
'payable'  PAYABLE
'memory'  MEMORY
'storage'  STORAGE
'calldata'  CALLDATA
'pure'  PURE
'view'  VIEW
'assembly'  ASSEMBLY
'emit'  EMIT
'wei'  WEI
'szabo'  SZABO
'finney'  FINNEY
'ether'  ETHER
'seconds'  SECONDS
'minutes'  MINUTES
'hours'  HOURS
'days'  DAYS
'weeks'  WEEKS
'years'  YEARS
'unsigned'  UNSIGNED
'abstract'  ABSTRACT
'bool'  BOOL
'string'  STRING
'void'  VOID
'pragma'  PRAGMA
'volatile'  VOLATILE
'while'  WHILE
'function'  FUNCTION
'instanceof'  INSTANCEOF
'typeof'  TYPEOF
'new'  NEW
'var'  VAR
'catch'  CATCH
'finally'  FINALLY
'debugger'  DEBUGGER
'this'  THIS
'hex'  HEX
'with'  WITH
'leave'  LEAVE
'throw'  THROW
'delete'  DELETE
'anonymous'  ANONYMOUS
'in'  IN
'try'  TRY
'class'  CLASS
'extends'  EXTENDS
'super'  SUPER
'export'  EXPORT
'import'  IMPORT
'implements'  IMPLEMENTS
'let'  LET
'private'  PRIVATE
'public'  PUBLIC
'interface'  INTERFACE
'package'  PACKAGE
'protected'  PROTECTED
'yield'  YIELD
'async'  ASYNC
'await'  AWAIT
'from'  FROM
'as'  AS
'get'  GET
'set'  SET
'...'  ELLIPSIS
'>>='  RIGHT_ASSIGN
'<<='  LEFT_ASSIGN
'+='  ADD_ASSIGN
'-='  SUB_ASSIGN
'*='  MUL_ASSIGN
'/='  DIV_ASSIGN
'%='  MOD_ASSIGN
'&='  AND_ASSIGN
'^='  XOR_ASSIGN
'|='  OR_ASSIGN
'>>'  RIGHT_OP
'<<'  LEFT_OP
'++'  INC_OP
'--'  DEC_OP
'->'  PTR_OP
'&&'  AND_OP
'||'  OR_OP
'<='  LE_OP
'>='  GE_OP
'=='  EQ_OP
'!='  NE_OP
'!=='  NEE_OP
'==='  EQQ_OP
'>>>='  GGGE_OP
'**='  POW_WITH_OP
'=>'  EG_OP
'**'  DOUBLE_STAR_OP
'??'  DOUBLE_QUEST_OP
'#include'  SHARP_AND_INCLUDE
'>\n'  OP_GREATERTHAN_NEWLINE
'int8' INT8
'int16' INT16
'int24' INT24
'int32' INT32
'int40' INT40
'int48' INT48
'int56' INT56
'int64' INT64
'int72' INT72
'int80' INT80
'int88' INT88
'int96' INT96
'int104' INT104
'int112' INT112
'int120' INT120
'int128' INT128
'int136' INT136
'int144' INT144
'int152' INT152
'int160' INT160
'int168' INT168
'int176' INT176
'int184' INT184
'int192' INT192
'int200' INT200
'int208' INT208
'int216' INT216
'int224' INT224
'int232' INT232
'int240' INT240
'int248' INT248
'int256' INT256
'uint' UINT
'uint8' UINT8
'uint16' UINT16
'uint24' UINT24
'uint32' UINT32
'uint40' UINT40
'uint48' UINT48
'uint56' UINT56
'uint64' UINT64
'uint72' UINT72
'uint80' UINT80
'uint88' UINT88
'uint96' UINT96
'uint104' UINT104
'uint112' UINT112
'uint120' UINT120
'uint128' UINT128
'uint136' UINT136
'uint144' UINT144
'uint152' UINT152
'uint160' UINT160
'uint168' UINT168
'uint176' UINT176
'uint184' UINT184
'uint192' UINT192
'uint200' UINT200
'uint208' UINT208
'uint216' UINT216
'uint224' UINT224
'uint232' UINT232
'uint240' UINT240
'uint248' UINT248
'uint256' UINT256
'byte' BYTE
'bytes' BYTES
'bytes1' BYTES1
'bytes2' BYTES2
'bytes3' BYTES3
'bytes4' BYTES4
'bytes5' BYTES5
'bytes6' BYTES6
'bytes7' BYTES7
'bytes8' BYTES8
'bytes9' BYTES9
'bytes10' BYTES10
'bytes11' BYTES11
'bytes12' BYTES12
'bytes13' BYTES13
'bytes14' BYTES14
'bytes15' BYTES15
'bytes16' BYTES16
'bytes17' BYTES17
'bytes18' BYTES18
'bytes19' BYTES19
'bytes20' BYTES20
'bytes21' BYTES21
'bytes22' BYTES22
'bytes23' BYTES23
'bytes24' BYTES24
'bytes25' BYTES25
'bytes26' BYTES26
'bytes27' BYTES27
'bytes28' BYTES28
'bytes29' BYTES29
'bytes30' BYTES30
'bytes31' BYTES31
'bytes32' BYTES32
'e' KEYWORD_E
'E' KEYWORD_UE