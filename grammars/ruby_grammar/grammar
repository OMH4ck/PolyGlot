program: 
compstmt
---
compstmt: 
stmt opt_term opt_term_expr_list
---
opt_term_expr_list:
term_expr_list

---
term_expr_list:
expr term
expr term term_expr_list
---
opt_term:
term

---
stmt: 
call 'do' opt_do_block_var compstmt 'end'
'undef' fname
'alias' fname fname
stmt 'if' expr
stmt 'while' expr
stmt 'unless' expr
stmt 'until' expr
'BEGIN' '{' compstmt '}'
'END' '{' compstmt '}'
lhs '=' command 'do' opt_do_block_var compstmt 'end'
lhs '=' command
expr
---
opt_do_block_var:
'|' opt_block_var '|'

---
opt_block_var:
block_var

---
expr: 
mlhs '=' mrhs
'return' call_args
'yield' call_args
expr 'and' expr
expr 'or' expr
'not' expr
command
'!' command
arg
---
call: 
function
command
---
command:
operation call_args
primary '.' operation call_args
primary '::' operation call_args
'super' call_args
---
function:
operation opt_function_call_args
primary '.' operation opt_function_call_args
primary '::' operation opt_function_call_args 
'super' opt_function_call_args
---
opt_function_call_args:
function_call_args
%prec KEYWORD_AND
---
function_call_args:
'(' opt_call_args ')'
---
opt_call_args:
call_args

---
arg: 
lhs '=' arg
arg '+=' arg
arg '-=' arg
arg '*=' arg
arg '/=' arg
arg '%=' arg
arg '**=' arg
arg '&=' arg
arg '|=' arg
arg '^=' arg
arg '<<=' arg
arg '>>=' arg
arg '&&=' arg
arg '||=' arg
arg '..' arg
arg '...' arg
arg '+' arg
arg '*' arg
arg '-' arg
arg '/' arg
arg '%' arg
arg '**' arg
'+' arg
'-' arg
arg '|' arg
arg '^' arg
arg '&' arg
arg '<=>' arg
arg '>' arg
arg '>=' arg
arg '<' arg
arg '<=' arg
arg '==' arg
arg '===' arg
arg '!=' arg
arg '=~' arg
arg '!~' arg
'!' arg
'~' arg
arg '<<' arg
arg '>>' arg
arg '&&' arg
arg '||' arg
'defined?' arg
primary
---
primary: 
'(' compstmt ')'
literal
variable 
primary '::' identifier
'::' identifier 
primary '[' opt_args ']'
'[]'
'[' opt_args_opt_comma ']'
'{' opt_args_opt_comma '}'
'{' assocs_opt_comma '}'
'return' opt_function_call_args
'yield' opt_function_call_args
'defined?' '(' arg ')'
function
function '{' opt_do_block_var compstmt '}'
'if' expr then compstmt opt_elsif_expr_then_comp_list opt_else_compstmt 'end'
'unless' expr then compstmt opt_else_compstmt 'end'
'while' expr do compstmt 'end'
'until' expr do compstmt 'end'
'case' compstmt when_args_then_compstmt_list opt_else_compstmt 'end'
'for' block_var 'in' expr do compstmt 'end'
'begin' compstmt opt_rescue_opt_args_do_compstmt_list opt_else_compstmt opt_ensure_compstmt 'end'
'class' identifier opt_less_identifier opt_term compstmt 'end'
'module' identifier opt_term compstmt 'end'
'def' fname argdecl compstmt 'end'
'def' singleton dot_or_dcolon fname argdecl compstmt 'end'
---
opt_less_identifier:
'<' identifier

---
dot_or_dcolon:
'.'
'::'
---
opt_ensure_compstmt:
'ensure' compstmt

---
opt_rescue_opt_args_do_compstmt_list:
rescue_opt_args_do_compstmt_list

---
rescue_opt_args_do_compstmt_list:
'rescue' opt_args do compstmt
'rescue' opt_args do compstmt rescue_opt_args_do_compstmt_list
---
when_args_then_compstmt_list:
'when' when_args then compstmt
'when' when_args then compstmt when_args_then_compstmt_list
---
opt_elsif_expr_then_comp_list:
elsif_expr_then_comp_list

---
elsif_expr_then_comp_list:
'elsif' expr then compstmt
'elsif' expr then compstmt elsif_expr_then_comp_list
---
opt_else_compstmt:
'else' opt_term compstmt

---
opt_args:
args

---
opt_args_opt_comma:
args_opt_comma

---
args_opt_comma:
args opt_comma
---
opt_comma:
','

---
assocs_opt_comma:
assocs opt_comma
---
when_args:
args opt_comma_star_arg
'*' arg
---
opt_comma_star_arg:
',' '*' arg

---
then:
term
'then'
term 'then'
---
do:
term
'do'
term 'do'
---
block_var:
lhs
mlhs
---
mlhs:
mlhs_item ',' opt_mlhs_item_comma_list opt_star_opt_lhs
'*' lhs
---
opt_mlhs_item_comma_list:
mlhs_item_comma_list

---
mlhs_item_comma_list:
mlhs_item
mlhs_item ',' mlhs_item_comma_list
---
opt_star_opt_lhs:
'*'
'*' lhs

---
mlhs_item:
lhs
'(' mlhs ')'
---
lhs:
variable
primary '[' opt_args ']'
primary '.' identifier
---
mrhs:
args opt_comma_star_arg
'*' arg
---
call_args:
args opt_comma_assocs opt_comma_star_arg opt_comma_bitand_arg
assocs opt_comma_star_arg opt_comma_bitand_arg
'*' arg opt_comma_bitand_arg
'&' arg
command
---
opt_comma_assocs:
',' assocs

---
opt_comma_bitand_arg:
',' '&' arg

---
args:
arg
arg ',' args
---
argdecl:
'(' arglist ')' opt_term
arglist term 
---
arglist:
identifier_list
'*' identifier opt_comma_bitand_identifier
opt_bitand_identifier
---
identifier_list:
identifier
identifier_list ',' opt_tamper_or_star identifier
---
opt_comma_star_opt_identifier:
',' '*' opt_identifier

---
opt_identifier:
identifier

---
opt_tamper_or_star:
'&'
'*'

---
opt_comma_bitand_identifier:
',' '&' identifier

---
opt_bitand_identifier:
'&' identifier

---
singleton:
variable
'(' expr ')'
---
assocs:
assoc
assoc ',' assocs
---
assoc:
arg '=>' arg
---
variable:
varname
'nil'
'self'
---
literal:
numeric
string
---
term:
newline_list
';'
---
newline_list:
'\n'
'\n' newline_list
---
fname:
identifier
'..'
'|'
'^'
'&'
'<=>'
'=='
'==='
'=~'
'>'
'>='
'<'
'<='
'+'
'-'
'*'
'/'
'%'
'**'
'<<'
'>>'
'~'
'+@'
'-@'
'[]'
'[]='
---
operation:
identifier 
identifier '!'
identifier '?'
---
varname:
rglobal
'@' identifier
identifier 
---
rglobal:
'$' identifier
'$' '-' identifier
---
string:
string_literal
---
numeric:
float_literal
int_literal
---
identifier:
IDENTIFIER
---
string_literal:
STRINGLITERAL
---
float_literal:
FLOATLITERAL
---
int_literal:
INTLITERAL
---
