stmtblock:
stmtmulti
---
stmtmulti:
stmtmulti SEMI stmt
stmt
---
stmt:
alter_event_trig_stmt
alter_collation_stmt
alter_database_stmt
alter_database_set_stmt
alter_default_privileges_stmt
alter_domain_stmt
alter_enum_stmt
alter_extension_stmt
alter_extension_contents_stmt
alter_fdw_stmt
alter_foreign_server_stmt
alter_foreign_table_stmt
alter_function_stmt
alter_group_stmt
alter_object_depends_stmt
alter_object_schema_stmt
alter_owner_stmt
alter_operator_stmt
alter_policy_stmt
alter_seq_stmt
alter_system_stmt
alter_table_stmt
alter_tbl_spc_stmt
alter_composite_type_stmt
alter_publication_stmt
alter_role_set_stmt
alter_role_stmt
alter_subscription_stmt
alter_stats_stmt
alter_tsconfiguration_stmt
alter_tsdictionary_stmt
alter_user_mapping_stmt
analyze_stmt
call_stmt
check_point_stmt
close_portal_stmt
cluster_stmt
comment_stmt
constraints_set_stmt
copy_stmt
create_am_stmt
create_as_stmt
create_assertion_stmt
create_cast_stmt
create_conversion_stmt
create_domain_stmt
create_extension_stmt
create_fdw_stmt
create_foreign_server_stmt
create_foreign_table_stmt
create_function_stmt
create_group_stmt
create_mat_view_stmt
create_op_class_stmt
create_op_family_stmt
create_publication_stmt
alter_op_family_stmt
create_policy_stmt
create_plang_stmt
create_schema_stmt
create_seq_stmt
create_stmt
create_subscription_stmt
create_stats_stmt
create_table_space_stmt
create_transform_stmt
create_trig_stmt
create_event_trig_stmt
create_role_stmt
create_user_stmt
create_user_mapping_stmt
createdb_stmt
deallocate_stmt
declare_cursor_stmt
define_stmt
delete_stmt
discard_stmt
do_stmt
drop_cast_stmt
drop_op_class_stmt
drop_op_family_stmt
drop_owned_stmt
drop_plang_stmt
drop_stmt
drop_subscription_stmt
drop_table_space_stmt
drop_transform_stmt
drop_role_stmt
drop_user_mapping_stmt
dropdb_stmt
execute_stmt
explain_stmt
fetch_stmt
grant_stmt
grant_role_stmt
import_foreign_schema_stmt
index_stmt
insert_stmt
listen_stmt
refresh_mat_view_stmt
load_stmt
lock_stmt
notify_stmt
prepare_stmt
reassign_owned_stmt
reindex_stmt
remove_aggr_stmt
remove_func_stmt
remove_oper_stmt
rename_stmt
revoke_stmt
revoke_role_stmt
rule_stmt
sec_label_stmt
select_stmt
transaction_stmt
truncate_stmt
unlisten_stmt
update_stmt
vacuum_stmt
variable_reset_stmt
variable_set_stmt
variable_show_stmt
view_stmt

---
call_stmt:
CALL func_application
---
create_role_stmt:
CREATE ROLE role_id opt_with opt_role_list
---
opt_with:
WITH
WITH_LA

---
opt_role_list:
opt_role_list create_opt_role_elem

---
alter_opt_role_list:
alter_opt_role_list alter_opt_role_elem

---
alter_opt_role_elem:
PASSWORD sconst
PASSWORD NULL
ENCRYPTED PASSWORD sconst
UNENCRYPTED PASSWORD sconst
INHERIT
CONNECTION LIMIT signed_iconst
VALID UNTIL sconst
USER role_list
identifier
---
create_opt_role_elem:
alter_opt_role_elem
SYSID iconst
ADMIN role_list
ROLE role_list
IN ROLE role_list
IN GROUP role_list
---
create_user_stmt:
CREATE USER role_id opt_with opt_role_list
---
alter_role_stmt:
ALTER ROLE role_spec opt_with alter_opt_role_list
ALTER USER role_spec opt_with alter_opt_role_list
---
opt_in_database:

IN DATABASE database_name
---
alter_role_set_stmt:
ALTER ROLE role_spec opt_in_database set_reset_clause
ALTER ROLE ALL opt_in_database set_reset_clause
ALTER USER role_spec opt_in_database set_reset_clause
ALTER USER ALL opt_in_database set_reset_clause
---
drop_role_stmt:
DROP ROLE role_list
DROP ROLE IF EXISTS role_list
DROP USER role_list
DROP USER IF EXISTS role_list
DROP GROUP role_list
DROP GROUP IF EXISTS role_list
---
create_group_stmt:
CREATE GROUP role_id opt_with opt_role_list
---
alter_group_stmt:
ALTER GROUP role_spec add_drop USER role_list
---
add_drop:
ADD
DROP
---
create_schema_stmt:
CREATE SCHEMA opt_schema_name AUTHORIZATION role_spec opt_schema_elt_list
CREATE SCHEMA col_id opt_schema_elt_list
CREATE SCHEMA IF NOT EXISTS opt_schema_name AUTHORIZATION role_spec opt_schema_elt_list
CREATE SCHEMA IF NOT EXISTS col_id opt_schema_elt_list
---
opt_schema_name:
col_id

---
opt_schema_elt_list:
opt_schema_elt_list schema_stmt

---
schema_stmt:
create_stmt
index_stmt
create_seq_stmt
create_trig_stmt
grant_stmt
view_stmt
---
variable_set_stmt:
SET set_rest
SET LOCAL set_rest
SET SESSION set_rest
---
set_rest:
TRANSACTION transaction_mode_list
SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list
set_rest_more
---
generic_set:
var_name TO var_list
var_name EQUAL var_list
var_name TO DEFAULT
var_name EQUAL DEFAULT
---
set_rest_more:
generic_set
var_name FROM CURRENT
TIME ZONE zone_value
CATALOG sconst
SCHEMA sconst
NAMES opt_encoding
ROLE non_reserved_word_or_sconst
SESSION AUTHORIZATION non_reserved_word_or_sconst
SESSION AUTHORIZATION DEFAULT
XML OPTION document_or_content
TRANSACTION SNAPSHOT sconst
---
var_name:
col_id
var_name DOT col_id
---
var_list:
var_value
var_list COMMA var_value
---
var_value:
opt_boolean_or_string
numeric_only
---
iso_level:
READ UNCOMMITTED
READ COMMITTED
REPEATABLE READ
SERIALIZABLE
---
opt_boolean_or_string:
TRUE
FALSE
ON
non_reserved_word_or_sconst
---
zone_value:
sconst
identifier
const_interval sconst opt_interval
const_interval LP iconst RP sconst
numeric_only
DEFAULT
LOCAL
---
opt_encoding:
sconst
DEFAULT

---
non_reserved_word_or_sconst:
non_reserved_word
sconst
---
variable_reset_stmt:
RESET reset_rest
---
reset_rest:
generic_reset
TIME ZONE
TRANSACTION ISOLATION LEVEL
SESSION AUTHORIZATION
---
generic_reset:
var_name
ALL
---
set_reset_clause:
SET set_rest
variable_reset_stmt
---
function_set_reset_clause:
SET set_rest_more
variable_reset_stmt
---
variable_show_stmt:
SHOW var_name
SHOW TIME ZONE
SHOW TRANSACTION ISOLATION LEVEL
SHOW SESSION AUTHORIZATION
SHOW ALL
---
constraints_set_stmt:
SET CONSTRAINTS constraints_set_list constraints_set_mode
---
constraints_set_list:
ALL
qualified_name_list
---
constraints_set_mode:
DEFERRED
IMMEDIATE
---
check_point_stmt:
CHECKPOINT
---
discard_stmt:
DISCARD ALL
DISCARD TEMP
DISCARD TEMPORARY
DISCARD PLANS
DISCARD SEQUENCES
---
alter_table_stmt:
ALTER TABLE relation_expr alter_table_cmds
ALTER TABLE IF EXISTS relation_expr alter_table_cmds
ALTER TABLE relation_expr partition_cmd
ALTER TABLE IF EXISTS relation_expr partition_cmd
ALTER TABLE ALL IN TABLESPACE name SET TABLESPACE name opt_nowait
ALTER TABLE ALL IN TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait
ALTER INDEX qualified_name alter_table_cmds
ALTER INDEX IF EXISTS qualified_name alter_table_cmds
ALTER INDEX qualified_name index_partition_cmd
ALTER INDEX ALL IN TABLESPACE name SET TABLESPACE name opt_nowait
ALTER INDEX ALL IN TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait
ALTER SEQUENCE qualified_name alter_table_cmds
ALTER SEQUENCE IF EXISTS qualified_name alter_table_cmds
ALTER VIEW qualified_name alter_table_cmds
ALTER VIEW IF EXISTS qualified_name alter_table_cmds
ALTER MATERIALIZED VIEW qualified_name alter_table_cmds
ALTER MATERIALIZED VIEW IF EXISTS qualified_name alter_table_cmds
ALTER MATERIALIZED VIEW ALL IN TABLESPACE name SET TABLESPACE name opt_nowait
ALTER MATERIALIZED VIEW ALL IN TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait
---
alter_table_cmds:
alter_table_cmd
alter_table_cmds COMMA alter_table_cmd
---
partition_cmd:
ATTACH PARTITION qualified_name partition_bound_spec
DETACH PARTITION qualified_name
---
index_partition_cmd:
ATTACH PARTITION qualified_name
---
alter_table_cmd:
ADD column_def
ADD IF NOT EXISTS column_def
ADD COLUMN column_def
ADD COLUMN IF NOT EXISTS column_def
ALTER opt_column col_id alter_column_default
ALTER opt_column col_id DROP NOT NULL
ALTER opt_column col_id SET NOT NULL
ALTER opt_column col_id SET STATISTICS signed_iconst
ALTER opt_column iconst SET STATISTICS signed_iconst
ALTER opt_column col_id SET reloptions
ALTER opt_column col_id RESET reloptions
ALTER opt_column col_id SET STORAGE col_id
ALTER opt_column col_id ADD GENERATED generated_when AS IDENTITY opt_parenthesized_seq_opt_list
ALTER opt_column col_id alter_identity_column_option_list
ALTER opt_column col_id DROP IDENTITY
ALTER opt_column col_id DROP IDENTITY IF EXISTS
DROP opt_column IF EXISTS col_id opt_drop_behavior
DROP opt_column col_id opt_drop_behavior
ALTER opt_column col_id opt_set_data TYPE typename opt_collate_clause alter_using
ALTER opt_column col_id alter_generic_options
ADD table_constraint
ALTER CONSTRAINT name constraint_attribute_spec
VALIDATE CONSTRAINT name
DROP CONSTRAINT IF EXISTS name opt_drop_behavior
DROP CONSTRAINT name opt_drop_behavior
SET WITHOUT OIDS
CLUSTER ON name
SET WITHOUT CLUSTER
SET LOGGED
SET UNLOGGED
ENABLE TRIGGER name
ENABLE ALWAYS TRIGGER name
ENABLE REPLICA TRIGGER name
ENABLE TRIGGER ALL
ENABLE TRIGGER USER
DISABLE TRIGGER name
DISABLE TRIGGER ALL
DISABLE TRIGGER USER
ENABLE RULE name
ENABLE ALWAYS RULE name
ENABLE REPLICA RULE name
DISABLE RULE name
INHERIT qualified_name
NO INHERIT qualified_name
OF any_name
NOT OF
OWNER TO role_spec
SET TABLESPACE name
SET reloptions
RESET reloptions
REPLICA IDENTITY replica_identity
ENABLE ROW LEVEL SECURITY
DISABLE ROW LEVEL SECURITY
FORCE ROW LEVEL SECURITY
NO FORCE ROW LEVEL SECURITY
alter_generic_options
---
alter_column_default:
SET DEFAULT a_expr
DROP DEFAULT
---
opt_drop_behavior:
CASCADE
RESTRICT

---
opt_collate_clause:
COLLATE any_name

---
alter_using:
USING a_expr

---
replica_identity:
NOTHING
FULL
DEFAULT
USING INDEX name
---
reloptions:
LP reloption_list RP
---
opt_reloptions:
WITH reloptions

---
reloption_list:
reloption_elem
reloption_list COMMA reloption_elem
---
reloption_elem:
col_label EQUAL def_arg
col_label
col_label DOT col_label EQUAL def_arg
col_label DOT col_label
---
alter_identity_column_option_list:
alter_identity_column_option
alter_identity_column_option_list alter_identity_column_option
---
alter_identity_column_option:
RESTART
RESTART opt_with numeric_only
SET seq_opt_elem
SET GENERATED generated_when
---
partition_bound_spec:
FOR VALUES WITH LP hash_partbound RP
FOR VALUES IN LP expr_list RP
FOR VALUES FROM LP expr_list RP TO LP expr_list RP
DEFAULT
---
hash_partbound_elem:
non_reserved_word iconst
---
hash_partbound:
hash_partbound_elem
hash_partbound COMMA hash_partbound_elem
---
alter_composite_type_stmt:
ALTER TYPE any_name alter_type_cmds
---
alter_type_cmds:
alter_type_cmd
alter_type_cmds COMMA alter_type_cmd
---
alter_type_cmd:
ADD ATTRIBUTE table_func_element opt_drop_behavior
DROP ATTRIBUTE IF EXISTS col_id opt_drop_behavior
DROP ATTRIBUTE col_id opt_drop_behavior
ALTER ATTRIBUTE col_id opt_set_data TYPE typename opt_collate_clause opt_drop_behavior
---
close_portal_stmt:
CLOSE cursor_name
CLOSE ALL
---
copy_stmt:
COPY opt_binary qualified_name opt_column_list copy_from opt_program copy_file_name copy_delimiter opt_with copy_options where_clause
COPY LP preparable_stmt RP TO opt_program copy_file_name opt_with copy_options
---
copy_from:
FROM
TO
---
opt_program:
PROGRAM

---
copy_file_name:
sconst
STDIN
STDOUT
---
copy_options:
copy_opt_list
LP copy_generic_opt_list RP
---
copy_opt_list:
copy_opt_list copy_opt_item

---
copy_opt_item:
BINARY
FREEZE
DELIMITER opt_as sconst
NULL opt_as sconst
CSV
HEADER
QUOTE opt_as sconst
ESCAPE opt_as sconst
FORCE QUOTE column_list
FORCE QUOTE STAR
FORCE NOT NULL column_list
FORCE NULL column_list
ENCODING sconst
---
opt_binary:
BINARY

---
copy_delimiter:
opt_using DELIMITERS sconst

---
opt_using:
USING

---
copy_generic_opt_list:
copy_generic_opt_elem
copy_generic_opt_list COMMA copy_generic_opt_elem
---
copy_generic_opt_elem:
col_label copy_generic_opt_arg
---
copy_generic_opt_arg:
opt_boolean_or_string
numeric_only
STAR
LP copy_generic_opt_arg_list RP

---
copy_generic_opt_arg_list:
copy_generic_opt_arg_list_item
copy_generic_opt_arg_list COMMA copy_generic_opt_arg_list_item
---
copy_generic_opt_arg_list_item:
opt_boolean_or_string
---
create_stmt:
CREATE opt_temp TABLE table_name LP opt_table_element_list RP opt_inherit opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->identifier=kDataColumnName:2:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp TABLE IF NOT EXISTS table_name LP opt_table_element_list RP opt_inherit opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->identifier=kDataColumnName:2:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp TABLE table_name OF any_name opt_typed_table_element_list opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp TABLE IF NOT EXISTS table_name OF any_name opt_typed_table_element_list opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp TABLE table_name PARTITION OF table_name opt_typed_table_element_list partition_bound_spec opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;table_name_2->identifier=kDataTableName:2:Use;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp TABLE IF NOT EXISTS table_name PARTITION OF table_name opt_typed_table_element_list partition_bound_spec opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **table_name_1->identifier=kDataTableName:1:Define;table_name_2->identifier=kDataTableName:1:Use;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->col_name_keyword=kDataColumnName:2:Define;**
---
opt_temp:
TEMPORARY
TEMP
LOCAL TEMPORARY
LOCAL TEMP
GLOBAL TEMPORARY
GLOBAL TEMP
UNLOGGED

---
opt_table_element_list:
table_element_list

---
opt_typed_table_element_list:
LP typed_table_element_list RP

---
table_element_list:
table_element
table_element_list COMMA table_element
---
typed_table_element_list:
typed_table_element
typed_table_element_list COMMA typed_table_element
---
table_element:
column_def
table_like_clause
table_constraint
---
typed_table_element:
column_options
table_constraint
---
column_def:
col_id typename create_generic_options col_qual_list
---
column_options:
col_id col_qual_list
col_id WITH OPTIONS col_qual_list
---
col_qual_list:
col_qual_list col_constraint

---
col_constraint:
CONSTRAINT name col_constraint_elem
col_constraint_elem
constraint_attr
COLLATE any_name
---
col_constraint_elem:
NOT NULL
NULL
UNIQUE opt_definition opt_cons_table_space
PRIMARY KEY opt_definition opt_cons_table_space
CHECK LP a_expr RP opt_no_inherit
DEFAULT b_expr
GENERATED generated_when AS IDENTITY opt_parenthesized_seq_opt_list
GENERATED generated_when AS LP a_expr RP STORED
REFERENCES table_name opt_column_list key_match key_actions
---
generated_when:
ALWAYS
BY DEFAULT
---
constraint_attr:
DEFERRABLE
NOT DEFERRABLE
INITIALLY DEFERRED
INITIALLY IMMEDIATE
---
table_like_clause:
LIKE table_name table_like_option_list
---
table_like_option_list:
table_like_option_list INCLUDING table_like_option
table_like_option_list EXCLUDING table_like_option

---
table_like_option:
COMMENTS
CONSTRAINTS
DEFAULTS
IDENTITY
GENERATED
INDEXES
STATISTICS
STORAGE
ALL
---
table_constraint:
CONSTRAINT name constraint_elem
constraint_elem
---
constraint_elem:
CHECK LP a_expr RP constraint_attribute_spec
UNIQUE LP column_list RP opt_c_include opt_definition opt_cons_table_space constraint_attribute_spec
UNIQUE existing_index constraint_attribute_spec
PRIMARY KEY LP column_list RP opt_c_include opt_definition opt_cons_table_space constraint_attribute_spec
PRIMARY KEY existing_index constraint_attribute_spec
EXCLUDE access_method_clause LP exclusion_constraint_list RP opt_c_include opt_definition opt_cons_table_space exclusion_where_clause constraint_attribute_spec
FOREIGN KEY LP column_list RP REFERENCES qualified_name opt_column_list key_match key_actions constraint_attribute_spec
---
opt_no_inherit:
NO INHERIT

---
opt_column_list:
LP column_list RP

---
column_list:
column_elem
column_list COMMA column_elem
---
column_elem:
col_id
---
opt_c_include:
INCLUDE LP column_list RP

---
key_match:
MATCH FULL
MATCH PARTIAL
MATCH SIMPLE

---
exclusion_constraint_list:
exclusion_constraint_elem
exclusion_constraint_list COMMA exclusion_constraint_elem
---
exclusion_constraint_elem:
index_elem WITH any_operator
index_elem WITH OPERATOR LP any_operator RP
---
exclusion_where_clause:
WHERE LP a_expr RP

---
key_actions:
key_update
key_delete
key_update key_delete
key_delete key_update

---
key_update:
ON UPDATE key_action
---
key_delete:
ON DELETE key_action
---
key_action:
NO ACTION
RESTRICT
CASCADE
SET NULL
SET DEFAULT
---
opt_inherit:
INHERITS LP qualified_name_list RP

---
opt_partition_spec:
partition_spec

---
partition_spec:
PARTITION BY part_strategy LP part_params RP
---
part_strategy:
identifier
unreserved_keyword
---
part_params:
part_elem
part_params COMMA part_elem
---
part_elem:
col_id opt_collate opt_class
func_expr_windowless opt_collate opt_class
LP a_expr RP opt_collate opt_class
---
table_access_method_clause:
USING access_method

---
opt_with_conflicta:
WITH reloptions
WITHOUT OIDS

---
on_commit_option:
ON COMMIT DROP
ON COMMIT DELETE ROWS
ON COMMIT PRESERVE ROWS

---
opt_table_space:
TABLESPACE name

---
opt_cons_table_space:
USING INDEX TABLESPACE name

---
existing_index:
USING INDEX index_name
---
create_stats_stmt:
CREATE STATISTICS any_name opt_name_list ON expr_list FROM from_list
CREATE STATISTICS IF NOT EXISTS any_name opt_name_list ON expr_list FROM from_list
---
alter_stats_stmt:
ALTER STATISTICS any_name SET STATISTICS signed_iconst 
ALTER STATISTICS IF EXISTS any_name SET STATISTICS signed_iconst
---
create_as_stmt:
CREATE opt_temp TABLE create_as_target AS select_stmt opt_with_data
CREATE opt_temp TABLE IF NOT EXISTS create_as_target AS select_stmt opt_with_data
---
create_as_target:
qualified_name opt_column_list table_access_method_clause opt_with_conflicta on_commit_option opt_table_space **qualified_name->col_id->identifier=kDataTableName:1:Define;qualified_name->col_id->unreserved_keyword=kDataTableName:1:Define;qualified_name->col_id->col_name_keyword=kDataTableName:1:Define;opt_column_list->column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define;**
---
opt_with_data:
WITH DATA
WITH NO DATA

---
create_mat_view_stmt:
CREATE opt_no_log MATERIALIZED VIEW create_mv_target AS select_stmt opt_with_data
CREATE opt_no_log MATERIALIZED VIEW IF NOT EXISTS create_mv_target AS select_stmt opt_with_data
---
create_mv_target:
qualified_name opt_column_list table_access_method_clause opt_reloptions opt_table_space **qualified_name->col_id->identifier=kDataViewName:1:Define;qualified_name->col_id->unreserved_keyword=kDataViewName:1:Define;qualified_name->col_id->col_name_keyword=kDataViewName:1:Define;opt_column_list->column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define;**
---
opt_no_log:
UNLOGGED

---
refresh_mat_view_stmt:
REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data **qualified_name->col_id->identifier=kDataViewName:1:Use;qualified_name->col_id->unreserved_keyword=kDataViewName:1:Use;qualified_name->col_id->col_name_keyword=kDataViewName:1:Use;**
---
create_seq_stmt:
CREATE opt_temp SEQUENCE qualified_name opt_seq_opt_list
CREATE opt_temp SEQUENCE IF NOT EXISTS qualified_name opt_seq_opt_list
---
alter_seq_stmt:
ALTER SEQUENCE qualified_name seq_opt_list
ALTER SEQUENCE IF EXISTS qualified_name seq_opt_list
---
opt_seq_opt_list:
seq_opt_list

---
opt_parenthesized_seq_opt_list:
LP seq_opt_list RP

---
seq_opt_list:
seq_opt_elem
seq_opt_list seq_opt_elem
---
seq_opt_elem:
AS simple_typename
CACHE numeric_only
CYCLE
NO CYCLE
INCREMENT opt_by numeric_only
MAXVALUE numeric_only
MINVALUE numeric_only
NO MAXVALUE
NO MINVALUE
OWNED BY any_name
SEQUENCE NAME any_name
START opt_with numeric_only
RESTART
RESTART opt_with numeric_only
---
opt_by:
BY

---
numeric_only:
fconst
ADD fconst
SUB fconst
signed_iconst
---
numeric_only_list:
numeric_only
numeric_only_list COMMA numeric_only
---
create_plang_stmt:
CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE non_reserved_word_or_sconst
CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE non_reserved_word_or_sconst HANDLER handler_name opt_inline_handler opt_validator
---
opt_trusted:
TRUSTED

---
handler_name:
name
name attrs
---
opt_inline_handler:
INLINE handler_name

---
validator_clause:
VALIDATOR handler_name
NO VALIDATOR
---
opt_validator:
validator_clause

---
drop_plang_stmt:
DROP opt_procedural LANGUAGE non_reserved_word_or_sconst opt_drop_behavior
DROP opt_procedural LANGUAGE IF EXISTS non_reserved_word_or_sconst opt_drop_behavior
---
opt_procedural:
PROCEDURAL

---
create_table_space_stmt:
CREATE TABLESPACE name opt_table_space_owner LOCATION sconst opt_reloptions
---
opt_table_space_owner:
OWNER role_spec

---
drop_table_space_stmt:
DROP TABLESPACE name
DROP TABLESPACE IF EXISTS name
---
create_extension_stmt:
CREATE EXTENSION name opt_with create_extension_opt_list
CREATE EXTENSION IF NOT EXISTS name opt_with create_extension_opt_list
---
create_extension_opt_list:
create_extension_opt_list create_extension_opt_item

---
create_extension_opt_item:
SCHEMA name
VERSION non_reserved_word_or_sconst
FROM non_reserved_word_or_sconst
CASCADE
---
alter_extension_stmt:
ALTER EXTENSION name UPDATE alter_extension_opt_list
---
alter_extension_opt_list:
alter_extension_opt_list alter_extension_opt_item

---
alter_extension_opt_item:
TO non_reserved_word_or_sconst
---
alter_extension_contents_stmt:
ALTER EXTENSION name add_drop ACCESS METHOD name
ALTER EXTENSION name add_drop AGGREGATE aggregate_with_argtypes
ALTER EXTENSION name add_drop CAST LP typename AS typename RP
ALTER EXTENSION name add_drop COLLATION any_name
ALTER EXTENSION name add_drop CONVERSION any_name
ALTER EXTENSION name add_drop DOMAIN typename
ALTER EXTENSION name add_drop FUNCTION function_with_argtypes
ALTER EXTENSION name add_drop opt_procedural LANGUAGE name
ALTER EXTENSION name add_drop OPERATOR operator_with_argtypes
ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING access_method
ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING access_method
ALTER EXTENSION name add_drop PROCEDURE function_with_argtypes
ALTER EXTENSION name add_drop ROUTINE function_with_argtypes
ALTER EXTENSION name add_drop SCHEMA name
ALTER EXTENSION name add_drop EVENT TRIGGER name
ALTER EXTENSION name add_drop TABLE any_name
ALTER EXTENSION name add_drop TEXT SEARCH PARSER any_name
ALTER EXTENSION name add_drop TEXT SEARCH DICTIONARY any_name
ALTER EXTENSION name add_drop TEXT SEARCH TEMPLATE any_name
ALTER EXTENSION name add_drop TEXT SEARCH CONFIGURATION any_name
ALTER EXTENSION name add_drop SEQUENCE any_name
ALTER EXTENSION name add_drop VIEW any_name
ALTER EXTENSION name add_drop MATERIALIZED VIEW any_name
ALTER EXTENSION name add_drop FOREIGN TABLE any_name
ALTER EXTENSION name add_drop FOREIGN DATA WRAPPER name
ALTER EXTENSION name add_drop SERVER name
ALTER EXTENSION name add_drop TRANSFORM FOR typename LANGUAGE name
ALTER EXTENSION name add_drop TYPE typename
---
create_fdw_stmt:
CREATE FOREIGN DATA WRAPPER name opt_fdw_options create_generic_options
---
fdw_option:
HANDLER handler_name
NO HANDLER
VALIDATOR handler_name
NO VALIDATOR
---
fdw_options:
fdw_option
fdw_options fdw_option
---
opt_fdw_options:
fdw_options

---
alter_fdw_stmt:
ALTER FOREIGN DATA WRAPPER name opt_fdw_options alter_generic_options
ALTER FOREIGN DATA WRAPPER name fdw_options
---
create_generic_options:
OPTIONS LP generic_option_list RP

---
generic_option_list:
generic_option_elem
generic_option_list COMMA generic_option_elem
---
alter_generic_options:
OPTIONS LP alter_generic_option_list RP
---
alter_generic_option_list:
alter_generic_option_elem
alter_generic_option_list COMMA alter_generic_option_elem
---
alter_generic_option_elem:
generic_option_elem
SET generic_option_elem
ADD generic_option_elem
DROP generic_option_name
---
generic_option_elem:
generic_option_name generic_option_arg
---
generic_option_name:
col_label
---
generic_option_arg:
sconst
---
create_foreign_server_stmt:
CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA WRAPPER name create_generic_options
CREATE SERVER IF NOT EXISTS name opt_type opt_foreign_server_version FOREIGN DATA WRAPPER name create_generic_options
---
opt_type:
TYPE sconst

---
foreign_server_version:
VERSION sconst
VERSION NULL
---
opt_foreign_server_version:
foreign_server_version

---
alter_foreign_server_stmt:
ALTER SERVER name foreign_server_version alter_generic_options
ALTER SERVER name foreign_server_version
ALTER SERVER name alter_generic_options
---
create_foreign_table_stmt:
CREATE FOREIGN TABLE table_name LP opt_table_element_list RP opt_inherit SERVER name create_generic_options **table_name->identifier=kDataTableName:1:Define;table_name->unreserved_keyword=kDataTableName:1:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->identifier=kDataColumnName:2:Define**
CREATE FOREIGN TABLE IF NOT EXISTS table_name LP opt_table_element_list RP opt_inherit SERVER name create_generic_options **qtable_name->identifier=kDataTableName:1:Define;opt_table_element_list->table_element_list->table_element->column_def->col_id->identifier=kDataColumnName:2:Define**
CREATE FOREIGN TABLE table_name PARTITION OF table_name opt_typed_table_element_list partition_bound_spec SERVER name create_generic_options **qualified_name_1->col_id->identifier=kDataTableName:1:Global;qualified_name_1->col_id->unreserved_keyword=kDataTableName:1:Global;qualified_name_1->col_id->col_name_keyword=kDataTableName:1:Global;qualified_name_2->col_id->identifier=kDataTableName:1:Global;qualified_name_2->col_id->col_name_keyword=kDataTableName:1:Global;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define**
CREATE FOREIGN TABLE IF NOT EXISTS table_name PARTITION OF table_name opt_typed_table_element_list partition_bound_spec SERVER name create_generic_options **qualified_name_1->col_id->identifier=kDataTableName:1:Global;qualified_name_1->col_id->unreserved_keyword=kDataTableName:1:Global;qualified_name_1->col_id->col_name_keyword=kDataTableName:1:Global;qualified_name_2->col_id->identifier=kDataTableName:1:Global;qualified_name_2->col_id->unreserved_keyword=kDataTableName:1:Global;qualified_name_2->col_id->col_name_keyword=kDataTableName:1:Global;opt_typed_table_element_list->typed_table_element_list->typed_table_element->column_options->col_id->identifier=kDataColumnName:2:Define**
---
alter_foreign_table_stmt:
ALTER FOREIGN TABLE relation_expr alter_table_cmds
ALTER FOREIGN TABLE IF EXISTS relation_expr alter_table_cmds
---
import_foreign_schema_stmt:
IMPORT FOREIGN SCHEMA name import_qualification FROM SERVER name INTO name create_generic_options
---
import_qualification_type:
LIMIT TO
EXCEPT
---
import_qualification:
import_qualification_type LP relation_expr_list RP

---
create_user_mapping_stmt:
CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options
CREATE USER MAPPING IF NOT EXISTS FOR auth_ident SERVER name create_generic_options
---
auth_ident:
role_spec
USER
---
drop_user_mapping_stmt:
DROP USER MAPPING FOR auth_ident SERVER name
DROP USER MAPPING IF EXISTS FOR auth_ident SERVER name
---
alter_user_mapping_stmt:
ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options
---
create_policy_stmt:
CREATE POLICY name ON qualified_name row_security_default_permissive row_security_default_for_cmd row_security_default_to_role row_security_optional_expr row_security_optional_with_check
---
alter_policy_stmt:
ALTER POLICY name ON qualified_name row_security_optional_to_role row_security_optional_expr row_security_optional_with_check
---
row_security_optional_expr:
USING LP a_expr RP

---
row_security_optional_with_check:
WITH CHECK LP a_expr RP

---
row_security_default_to_role:
TO role_list

---
row_security_optional_to_role:
TO role_list

---
row_security_default_permissive:
AS identifier

---
row_security_default_for_cmd:
FOR row_security_cmd

---
row_security_cmd:
ALL
SELECT
INSERT
UPDATE
DELETE
---
create_am_stmt:
CREATE ACCESS METHOD name TYPE am_type HANDLER handler_name
---
am_type:
INDEX
TABLE
---
create_trig_stmt:
CREATE TRIGGER name trigger_action_time trigger_events ON qualified_name trigger_referencing trigger_for_spec trigger_when EXECUTE function_or_procedure func_name LP trigger_func_args RP
CREATE CONSTRAINT TRIGGER name AFTER trigger_events ON qualified_name opt_constr_from_table constraint_attribute_spec FOR EACH ROW trigger_when EXECUTE function_or_procedure func_name LP trigger_func_args RP
---
trigger_action_time:
BEFORE
AFTER
INSTEAD OF
---
trigger_events:
trigger_one_event
trigger_events OR trigger_one_event
---
trigger_one_event:
INSERT
DELETE
UPDATE
UPDATE OF column_list
TRUNCATE
---
trigger_referencing:
REFERENCING trigger_transitions

---
trigger_transitions:
trigger_transition
trigger_transitions trigger_transition
---
trigger_transition:
transition_old_or_new transition_row_or_table opt_as transition_rel_name
---
transition_old_or_new:
NEW
OLD
---
transition_row_or_table:
TABLE
ROW
---
transition_rel_name:
col_id
---
trigger_for_spec:
FOR trigger_for_opt_each trigger_for_type

---
trigger_for_opt_each:
EACH

---
trigger_for_type:
ROW
STATEMENT
---
trigger_when:
WHEN LP a_expr RP

---
function_or_procedure:
FUNCTION
PROCEDURE
---
trigger_func_args:
trigger_func_arg
trigger_func_args COMMA trigger_func_arg

---
trigger_func_arg:
iconst
fconst
sconst
col_label
---
opt_constr_from_table:
FROM qualified_name

---
constraint_attribute_spec:

constraint_attribute_spec constraint_attribute_elem
---
constraint_attribute_elem:
NOT DEFERRABLE
DEFERRABLE
INITIALLY IMMEDIATE
INITIALLY DEFERRED
NOT VALID
NO INHERIT
---
create_event_trig_stmt:
CREATE EVENT TRIGGER name ON col_label EXECUTE function_or_procedure func_name LP RP
CREATE EVENT TRIGGER name ON col_label WHEN event_trigger_when_list EXECUTE function_or_procedure func_name LP RP
---
event_trigger_when_list:
event_trigger_when_item
event_trigger_when_list AND event_trigger_when_item
---
event_trigger_when_item:
col_id IN LP event_trigger_value_list RP
---
event_trigger_value_list:
sconst
event_trigger_value_list COMMA sconst
---
alter_event_trig_stmt:
ALTER EVENT TRIGGER name enable_trigger
---
enable_trigger:
ENABLE
ENABLE REPLICA
ENABLE ALWAYS
DISABLE
---
create_assertion_stmt:
CREATE ASSERTION any_name CHECK LP a_expr RP constraint_attribute_spec
---
define_stmt:
CREATE opt_or_replace AGGREGATE func_name aggr_args definition
CREATE opt_or_replace AGGREGATE func_name old_aggr_definition
CREATE OPERATOR any_operator definition
CREATE TYPE any_name definition
CREATE TYPE any_name
CREATE TYPE any_name AS LP opt_table_func_element_list RP
CREATE TYPE any_name AS ENUM LP opt_enum_val_list RP
CREATE TYPE any_name AS RANGE definition
CREATE TEXT SEARCH PARSER any_name definition
CREATE TEXT SEARCH DICTIONARY any_name definition
CREATE TEXT SEARCH TEMPLATE any_name definition
CREATE TEXT SEARCH CONFIGURATION any_name definition
CREATE COLLATION any_name definition
CREATE COLLATION IF NOT EXISTS any_name definition
CREATE COLLATION any_name FROM any_name
CREATE COLLATION IF NOT EXISTS any_name FROM any_name
---
definition:
LP def_list RP
---
def_list:
def_elem
def_list COMMA def_elem
---
def_elem:
col_label EQUAL def_arg
col_label
---
def_arg:
func_type
reserved_keyword
qual_all_op
numeric_only
sconst
NONE
---
old_aggr_definition:
LP old_aggr_list RP
---
old_aggr_list:
old_aggr_elem
old_aggr_list COMMA old_aggr_elem
---
old_aggr_elem:
identifier EQUAL def_arg
---
opt_enum_val_list:
enum_val_list

---
enum_val_list:
sconst
enum_val_list COMMA sconst
---
alter_enum_stmt:
ALTER TYPE any_name ADD VALUE opt_if_not_exists sconst
ALTER TYPE any_name ADD VALUE opt_if_not_exists sconst BEFORE sconst
ALTER TYPE any_name ADD VALUE opt_if_not_exists sconst AFTER sconst
ALTER TYPE any_name RENAME VALUE sconst TO sconst
---
opt_if_not_exists:
IF NOT EXISTS

---
create_op_class_stmt:
CREATE OPERATOR CLASS any_name opt_default FOR TYPE typename USING access_method opt_opfamily AS opclass_item_list
---
opclass_item_list:
opclass_item
opclass_item_list COMMA opclass_item
---
opclass_item:
OPERATOR iconst any_operator opclass_purpose opt_recheck
OPERATOR iconst operator_with_argtypes opclass_purpose opt_recheck
FUNCTION iconst function_with_argtypes
FUNCTION iconst LP type_list RP function_with_argtypes
STORAGE typename
---
opt_default:
DEFAULT

---
opt_opfamily:
FAMILY any_name

---
opclass_purpose:
FOR SEARCH
FOR ORDER BY any_name

---
opt_recheck:
RECHECK

---
create_op_family_stmt:
CREATE OPERATOR FAMILY any_name USING access_method
---
alter_op_family_stmt:
ALTER OPERATOR FAMILY any_name USING access_method ADD opclass_item_list
ALTER OPERATOR FAMILY any_name USING access_method DROP opclass_drop_list
---
opclass_drop_list:
opclass_drop
opclass_drop_list COMMA opclass_drop
---
opclass_drop:
OPERATOR iconst LP type_list RP
FUNCTION iconst LP type_list RP
---
drop_op_class_stmt:
DROP OPERATOR CLASS any_name USING access_method opt_drop_behavior
DROP OPERATOR CLASS IF EXISTS any_name USING access_method opt_drop_behavior
---
drop_op_family_stmt:
DROP OPERATOR FAMILY any_name USING access_method opt_drop_behavior
DROP OPERATOR FAMILY IF EXISTS any_name USING access_method opt_drop_behavior
---
drop_owned_stmt:
DROP OWNED BY role_list opt_drop_behavior
---
reassign_owned_stmt:
REASSIGN OWNED BY role_list TO role_spec
---
drop_stmt:
DROP drop_type_any_name IF EXISTS any_name_list opt_drop_behavior
DROP drop_type_any_name any_name_list opt_drop_behavior
DROP drop_type_name IF EXISTS name_list opt_drop_behavior
DROP drop_type_name name_list opt_drop_behavior
DROP drop_type_name_on_any_name name ON any_name opt_drop_behavior
DROP drop_type_name_on_any_name IF EXISTS name ON any_name opt_drop_behavior
DROP TYPE type_name_list opt_drop_behavior
DROP TYPE IF EXISTS type_name_list opt_drop_behavior
DROP DOMAIN type_name_list opt_drop_behavior
DROP DOMAIN IF EXISTS type_name_list opt_drop_behavior
DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior
DROP INDEX CONCURRENTLY IF EXISTS any_name_list opt_drop_behavior
---
drop_type_any_name:
TABLE
SEQUENCE
VIEW
MATERIALIZED VIEW
INDEX
FOREIGN TABLE
COLLATION
CONVERSION
STATISTICS
TEXT SEARCH PARSER
TEXT SEARCH DICTIONARY
TEXT SEARCH TEMPLATE
TEXT SEARCH CONFIGURATION
---
drop_type_name:
ACCESS METHOD
EVENT TRIGGER
EXTENSION
FOREIGN DATA WRAPPER
PUBLICATION
SCHEMA
SERVER
---
drop_type_name_on_any_name:
POLICY
RULE
TRIGGER
---
any_name_list:
any_name
any_name_list COMMA any_name
---
any_name:
col_id
col_id attrs
---
attrs:
DOT attr_name
attrs DOT attr_name
---
type_name_list:
typename
type_name_list COMMA typename
---
truncate_stmt:
TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior **relation_expr_list->relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;relation_expr_list->relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;relation_expr_list->relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use;**
---
opt_restart_seqs:
CONTINUE IDENTITY
RESTART IDENTITY

---
comment_stmt:
COMMENT ON comment_type_any_name any_name IS comment_text
COMMENT ON comment_type_name name IS comment_text
COMMENT ON TYPE typename IS comment_text
COMMENT ON DOMAIN typename IS comment_text
COMMENT ON AGGREGATE aggregate_with_argtypes IS comment_text
COMMENT ON FUNCTION function_with_argtypes IS comment_text
COMMENT ON OPERATOR operator_with_argtypes IS comment_text
COMMENT ON CONSTRAINT name ON any_name IS comment_text
COMMENT ON CONSTRAINT name ON DOMAIN any_name IS comment_text
COMMENT ON POLICY name ON any_name IS comment_text
COMMENT ON PROCEDURE function_with_argtypes IS comment_text
COMMENT ON ROUTINE function_with_argtypes IS comment_text
COMMENT ON RULE name ON any_name IS comment_text
COMMENT ON TRANSFORM FOR typename LANGUAGE name IS comment_text
COMMENT ON TRIGGER name ON any_name IS comment_text
COMMENT ON OPERATOR CLASS any_name USING access_method IS comment_text
COMMENT ON OPERATOR FAMILY any_name USING access_method IS comment_text
COMMENT ON LARGE OBJECT numeric_only IS comment_text
COMMENT ON CAST LP typename AS typename RP IS comment_text
---
comment_type_any_name:
COLUMN
INDEX
SEQUENCE
STATISTICS
TABLE
VIEW
MATERIALIZED VIEW
COLLATION
CONVERSION
FOREIGN TABLE
TEXT SEARCH CONFIGURATION
TEXT SEARCH DICTIONARY
TEXT SEARCH PARSER
TEXT SEARCH TEMPLATE
---
comment_type_name:
ACCESS METHOD
DATABASE
EVENT TRIGGER
EXTENSION
FOREIGN DATA WRAPPER
opt_procedural LANGUAGE
PUBLICATION
ROLE
SCHEMA
SERVER
SUBSCRIPTION
TABLESPACE
---
comment_text:
sconst
NULL
---
sec_label_stmt:
SECURITY LABEL opt_provider ON security_label_type_any_name any_name IS security_label
SECURITY LABEL opt_provider ON security_label_type_name name IS security_label
SECURITY LABEL opt_provider ON TYPE typename IS security_label
SECURITY LABEL opt_provider ON DOMAIN typename IS security_label
SECURITY LABEL opt_provider ON AGGREGATE aggregate_with_argtypes IS security_label
SECURITY LABEL opt_provider ON FUNCTION function_with_argtypes IS security_label
SECURITY LABEL opt_provider ON LARGE OBJECT numeric_only IS security_label
SECURITY LABEL opt_provider ON PROCEDURE function_with_argtypes IS security_label
SECURITY LABEL opt_provider ON ROUTINE function_with_argtypes IS security_label
---
opt_provider:
FOR non_reserved_word_or_sconst

---
security_label_type_any_name:
COLUMN
FOREIGN TABLE
SEQUENCE
TABLE
VIEW
MATERIALIZED VIEW
---
security_label_type_name:
DATABASE
EVENT TRIGGER
opt_procedural LANGUAGE
PUBLICATION
ROLE
SCHEMA
SUBSCRIPTION
TABLESPACE
---
security_label:
sconst
NULL
---
fetch_stmt:
FETCH fetch_args
MOVE fetch_args
---
fetch_args:
cursor_name
from_in cursor_name
NEXT opt_from_in cursor_name
PRIOR opt_from_in cursor_name
FIRST opt_from_in cursor_name
LAST opt_from_in cursor_name
ABSOLUTE signed_iconst opt_from_in cursor_name
RELATIVE signed_iconst opt_from_in cursor_name
signed_iconst opt_from_in cursor_name
ALL opt_from_in cursor_name
FORWARD opt_from_in cursor_name
FORWARD signed_iconst opt_from_in cursor_name
FORWARD ALL opt_from_in cursor_name
BACKWARD opt_from_in cursor_name
BACKWARD signed_iconst opt_from_in cursor_name
BACKWARD ALL opt_from_in cursor_name
---
from_in:
FROM
IN
---
opt_from_in:
from_in

---
grant_stmt:
GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option
---
revoke_stmt:
REVOKE privileges ON privilege_target FROM grantee_list opt_drop_behavior
REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_drop_behavior
---
privileges:
privilege_list
ALL
ALL PRIVILEGES
ALL LP column_list RP
ALL PRIVILEGES LP column_list RP
---
privilege_list:
privilege
privilege_list COMMA privilege
---
privilege:
SELECT opt_column_list
REFERENCES opt_column_list
CREATE opt_column_list
col_id opt_column_list
---
privilege_target:
qualified_name_list
TABLE qualified_name_list
SEQUENCE qualified_name_list
FOREIGN DATA WRAPPER name_list
FOREIGN SERVER name_list
FUNCTION function_with_argtypes_list
PROCEDURE function_with_argtypes_list
ROUTINE function_with_argtypes_list
DATABASE name_list
DOMAIN any_name_list
LANGUAGE name_list
LARGE OBJECT numeric_only_list
SCHEMA name_list
TABLESPACE name_list
TYPE any_name_list
ALL TABLES IN SCHEMA name_list
ALL SEQUENCES IN SCHEMA name_list
ALL FUNCTIONS IN SCHEMA name_list
ALL PROCEDURES IN SCHEMA name_list
ALL ROUTINES IN SCHEMA name_list
---
grantee_list:
grantee
grantee_list COMMA grantee
---
grantee:
role_spec
GROUP role_spec
---
opt_grant_grant_option:
WITH GRANT OPTION

---
grant_role_stmt:
GRANT privilege_list TO role_list opt_grant_admin_option opt_granted_by
---
revoke_role_stmt:
REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior
REVOKE ADMIN OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior
---
opt_grant_admin_option:
WITH ADMIN OPTION

---
opt_granted_by:
GRANTED BY role_spec

---
alter_default_privileges_stmt:
ALTER DEFAULT PRIVILEGES def_acloption_list def_aclaction
---
def_acloption_list:
def_acloption_list def_acloption

---
def_acloption:
IN SCHEMA name_list
FOR ROLE role_list
FOR USER role_list
---
def_aclaction:
GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option
REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior
REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior
---
defacl_privilege_target:
TABLES
FUNCTIONS
ROUTINES
SEQUENCES
TYPES
SCHEMAS
---
index_stmt:
CREATE opt_unique INDEX opt_concurrently opt_index_name ON relation_expr access_method_clause LP index_params RP opt_include opt_reloptions opt_table_space where_clause
CREATE opt_unique INDEX opt_concurrently IF NOT EXISTS index_name ON relation_expr access_method_clause LP index_params RP opt_include opt_reloptions opt_table_space where_clause
---
opt_unique:
UNIQUE

---
opt_concurrently:
CONCURRENTLY

---
opt_index_name:
index_name

---
access_method_clause:
USING access_method

---
index_params:
index_elem
index_params COMMA index_elem
---
index_elem:
col_id opt_collate opt_class opt_asc_desc opt_nulls_order
func_expr_windowless opt_collate opt_class opt_asc_desc opt_nulls_order
LP a_expr RP opt_collate opt_class opt_asc_desc opt_nulls_order
---
opt_include:
INCLUDE LP index_including_params RP

---
index_including_params:
index_elem
index_including_params COMMA index_elem
---
opt_collate:
COLLATE any_name

---
opt_class:
any_name

---
opt_asc_desc:
ASC
DESC

---
opt_nulls_order:
NULLS_LA FIRST
NULLS_LA LAST

---
create_function_stmt:
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return createfunc_opt_list **func_name->type_function_name->identifier=kDataFunctionName:1:Define;func_name->type_function_name->unreserved_keyword=kDataFunctionName:1:Define;func_name->type_function_name->type_func_name_keyword=kDataFunctionName:1:Define;func_name->col_id->identifier:kDataFunctionName:1:Define;func_name->col_id->unreserved_keyword:kDataFunctionName:1:Define;func_name->col_id->col_name_keyword:kDataFunctionName:1:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->unreserved_keyword=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=type_func_name_keyword:2:Define**
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE LP table_func_column_list RP createfunc_opt_list **func_name->type_function_name->identifier=kDataFunctionName:1:Define;func_name->type_function_name->unreserved_keyword=kDataFunctionName:1:Define;func_name->type_function_name->type_func_name_keyword=kDataFunctionName:1:Define;func_name->col_id->identifier:kDataFunctionName:1:Define;func_name->col_id->unreserved_keyword:kDataFunctionName:1:Define;func_name->col_id->col_name_keyword:kDataFunctionName:1:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->unreserved_keyword=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=type_func_name_keyword:2:Define**
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults createfunc_opt_list **func_name->type_function_name->identifier=kDataFunctionName:1:Define;func_name->type_function_name->unreserved_keyword=kDataFunctionName:1:Define;func_name->type_function_name->type_func_name_keyword=kDataFunctionName:1:Define;func_name->col_id->identifier:kDataFunctionName:1:Define;func_name->col_id->unreserved_keyword:kDataFunctionName:1:Define;func_name->col_id->col_name_keyword:kDataFunctionName:1:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->unreserved_keyword=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=type_func_name_keyword:2:Define**
CREATE opt_or_replace PROCEDURE func_name func_args_with_defaults createfunc_opt_list **func_name->type_function_name->identifier=kDataFunctionName:1:Define;func_name->type_function_name->unreserved_keyword=kDataFunctionName:1:Define;func_name->type_function_name->type_func_name_keyword=kDataFunctionName:1:Define;func_name->col_id->identifier:kDataFunctionName:1:Define;func_name->col_id->unreserved_keyword:kDataFunctionName:1:Define;func_name->col_id->col_name_keyword:kDataFunctionName:1:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->unreserved_keyword=kDataPragmaKey:2:Define;func_args_with_defaults->func_args_with_defaults_list->func_arg_with_default->func_arg->param_name->type_function_name->identifier=type_func_name_keyword:2:Define**
---
opt_or_replace:
OR REPLACE

---
func_args:
LP func_args_list RP
LP RP
---
func_args_list:
func_arg
func_args_list COMMA func_arg
---
function_with_argtypes_list:
function_with_argtypes
function_with_argtypes_list COMMA function_with_argtypes
---
function_with_argtypes:
func_name func_args
type_func_name_keyword
col_id
col_id indirection
---
func_args_with_defaults:
LP func_args_with_defaults_list RP
LP RP
---
func_args_with_defaults_list:
func_arg_with_default
func_args_with_defaults_list COMMA func_arg_with_default
---
func_arg:
arg_class param_name func_type
param_name arg_class func_type
param_name func_type
arg_class func_type
func_type
---
arg_class:
IN
OUT
INOUT
IN OUT
VARIADIC
---
param_name:
type_function_name
---
func_return:
func_type
---
func_type:
typename
type_function_name attrs MOD TYPE
SETOF type_function_name attrs MOD TYPE
---
func_arg_with_default:
func_arg
func_arg DEFAULT a_expr
func_arg EQUAL a_expr
---
aggr_arg:
func_arg
---
aggr_args:
LP STAR RP
LP aggr_args_list RP
LP ORDER BY aggr_args_list RP
LP aggr_args_list ORDER BY aggr_args_list RP
---
aggr_args_list:
aggr_arg
aggr_args_list COMMA aggr_arg
---
aggregate_with_argtypes:
func_name aggr_args
---
aggregate_with_argtypes_list:
aggregate_with_argtypes
aggregate_with_argtypes_list COMMA aggregate_with_argtypes
---
createfunc_opt_list:
createfunc_opt_item
createfunc_opt_list createfunc_opt_item
---
common_func_opt_item:
CALLED ON NULL INPUT
RETURNS NULL ON NULL INPUT
STRICT
IMMUTABLE
STABLE
VOLATILE
EXTERNAL SECURITY DEFINER
EXTERNAL SECURITY INVOKER
SECURITY DEFINER
SECURITY INVOKER
LEAKPROOF
NOT LEAKPROOF
COST numeric_only
ROWS numeric_only
SUPPORT any_name
function_set_reset_clause
PARALLEL col_id
---
createfunc_opt_item:
AS func_as
LANGUAGE non_reserved_word_or_sconst
TRANSFORM transform_type_list
WINDOW
common_func_opt_item
---
func_as:
sconst
sconst COMMA sconst
---
transform_type_list:
FOR TYPE typename
transform_type_list COMMA FOR TYPE typename
---
opt_definition:
WITH definition

---
table_func_column:
param_name func_type
---
table_func_column_list:
table_func_column
table_func_column_list COMMA table_func_column
---
alter_function_stmt:
ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict
ALTER PROCEDURE function_with_argtypes alterfunc_opt_list opt_restrict
ALTER ROUTINE function_with_argtypes alterfunc_opt_list opt_restrict
---
alterfunc_opt_list:
common_func_opt_item
alterfunc_opt_list common_func_opt_item
---
opt_restrict:
RESTRICT

---
remove_func_stmt:
DROP FUNCTION function_with_argtypes_list opt_drop_behavior
DROP FUNCTION IF EXISTS function_with_argtypes_list opt_drop_behavior
DROP PROCEDURE function_with_argtypes_list opt_drop_behavior
DROP PROCEDURE IF EXISTS function_with_argtypes_list opt_drop_behavior
DROP ROUTINE function_with_argtypes_list opt_drop_behavior
DROP ROUTINE IF EXISTS function_with_argtypes_list opt_drop_behavior
---
remove_aggr_stmt:
DROP AGGREGATE aggregate_with_argtypes_list opt_drop_behavior
DROP AGGREGATE IF EXISTS aggregate_with_argtypes_list opt_drop_behavior
---
remove_oper_stmt:
DROP OPERATOR operator_with_argtypes_list opt_drop_behavior
DROP OPERATOR IF EXISTS operator_with_argtypes_list opt_drop_behavior
---
oper_argtypes:
LP typename RP
LP typename COMMA typename RP
LP NONE COMMA typename RP
LP typename COMMA NONE RP
---
any_operator:
all_op
col_id DOT any_operator
---
operator_with_argtypes_list:
operator_with_argtypes
operator_with_argtypes_list COMMA operator_with_argtypes
---
operator_with_argtypes:
any_operator oper_argtypes
---
do_stmt:
DO dostmt_opt_list
---
dostmt_opt_list:
dostmt_opt_item
dostmt_opt_list dostmt_opt_item
---
dostmt_opt_item:
sconst
LANGUAGE non_reserved_word_or_sconst
---
create_cast_stmt:
CREATE CAST LP typename AS typename RP WITH FUNCTION function_with_argtypes cast_context
CREATE CAST LP typename AS typename RP WITHOUT FUNCTION cast_context
CREATE CAST LP typename AS typename RP WITH INOUT cast_context
---
cast_context:
AS IMPLICIT
AS ASSIGNMENT

---
drop_cast_stmt:
DROP CAST opt_if_exists LP typename AS typename RP opt_drop_behavior
---
opt_if_exists:
IF EXISTS

---
create_transform_stmt:
CREATE opt_or_replace TRANSFORM FOR typename LANGUAGE name LP transform_element_list RP
---
transform_element_list:
FROM SQL WITH FUNCTION function_with_argtypes COMMA TO SQL WITH FUNCTION function_with_argtypes
TO SQL WITH FUNCTION function_with_argtypes COMMA FROM SQL WITH FUNCTION function_with_argtypes
FROM SQL WITH FUNCTION function_with_argtypes
TO SQL WITH FUNCTION function_with_argtypes
---
drop_transform_stmt:
DROP TRANSFORM opt_if_exists FOR typename LANGUAGE name opt_drop_behavior
---
reindex_stmt:
REINDEX reindex_target_type opt_concurrently qualified_name
REINDEX reindex_target_multitable opt_concurrently name
REINDEX LP reindex_option_list RP reindex_target_type opt_concurrently qualified_name
REINDEX LP reindex_option_list RP reindex_target_multitable opt_concurrently name
---
reindex_target_type:
INDEX
TABLE
---
reindex_target_multitable:
SCHEMA
SYSTEM
DATABASE
---
reindex_option_list:
reindex_option_elem
reindex_option_list COMMA reindex_option_elem
---
reindex_option_elem:
VERBOSE
---
alter_tbl_spc_stmt:
ALTER TABLESPACE name SET reloptions
ALTER TABLESPACE name RESET reloptions
---
rename_stmt:
ALTER AGGREGATE aggregate_with_argtypes RENAME TO name
ALTER COLLATION any_name RENAME TO name
ALTER CONVERSION any_name RENAME TO name
ALTER DATABASE database_name RENAME TO database_name
ALTER DOMAIN any_name RENAME TO name
ALTER DOMAIN any_name RENAME CONSTRAINT name TO name
ALTER FOREIGN DATA WRAPPER name RENAME TO name
ALTER FUNCTION function_with_argtypes RENAME TO name
ALTER GROUP role_id RENAME TO role_id
ALTER opt_procedural LANGUAGE name RENAME TO name
ALTER OPERATOR CLASS any_name USING access_method RENAME TO name
ALTER OPERATOR FAMILY any_name USING access_method RENAME TO name
ALTER POLICY name ON qualified_name RENAME TO name
ALTER POLICY IF EXISTS name ON qualified_name RENAME TO name
ALTER PROCEDURE function_with_argtypes RENAME TO name
ALTER PUBLICATION name RENAME TO name
ALTER ROUTINE function_with_argtypes RENAME TO name
ALTER SCHEMA name RENAME TO name
ALTER SERVER name RENAME TO name
ALTER SUBSCRIPTION name RENAME TO name
ALTER TABLE relation_expr RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use**
ALTER TABLE IF EXISTS relation_expr RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use**
ALTER SEQUENCE qualified_name RENAME TO name
ALTER SEQUENCE IF EXISTS qualified_name RENAME TO name
ALTER VIEW qualified_name RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataViewName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataViewName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataViewName:1:Use**
ALTER VIEW IF EXISTS qualified_name RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataViewName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataViewName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataViewName:1:Use**
ALTER MATERIALIZED VIEW qualified_name RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataViewName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataViewName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataViewName:1:Use**
ALTER MATERIALIZED VIEW IF EXISTS qualified_name RENAME TO name **relation_expr->qualified_name->col_id->identifier=kDataViewName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataViewName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataViewName:1:Use**
ALTER INDEX qualified_name RENAME TO name
ALTER INDEX IF EXISTS qualified_name RENAME TO name
ALTER FOREIGN TABLE relation_expr RENAME TO name
ALTER FOREIGN TABLE IF EXISTS relation_expr RENAME TO name
ALTER TABLE relation_expr RENAME opt_column name TO name
ALTER TABLE IF EXISTS relation_expr RENAME opt_column name TO name
ALTER VIEW qualified_name RENAME opt_column name TO name
ALTER VIEW IF EXISTS qualified_name RENAME opt_column name TO name
ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name
ALTER MATERIALIZED VIEW IF EXISTS qualified_name RENAME opt_column name TO name
ALTER TABLE relation_expr RENAME CONSTRAINT name TO name
ALTER TABLE IF EXISTS relation_expr RENAME CONSTRAINT name TO name
ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name
ALTER FOREIGN TABLE IF EXISTS relation_expr RENAME opt_column name TO name
ALTER RULE name ON qualified_name RENAME TO name
ALTER TRIGGER name ON qualified_name RENAME TO name
ALTER EVENT TRIGGER name RENAME TO name
ALTER ROLE role_id RENAME TO role_id
ALTER USER role_id RENAME TO role_id
ALTER TABLESPACE name RENAME TO name
ALTER STATISTICS any_name RENAME TO name
ALTER TEXT SEARCH PARSER any_name RENAME TO name
ALTER TEXT SEARCH DICTIONARY any_name RENAME TO name
ALTER TEXT SEARCH TEMPLATE any_name RENAME TO name
ALTER TEXT SEARCH CONFIGURATION any_name RENAME TO name
ALTER TYPE any_name RENAME TO name
ALTER TYPE any_name RENAME ATTRIBUTE name TO name opt_drop_behavior
---
opt_column:
COLUMN

---
opt_set_data:
SET DATA

---
alter_object_depends_stmt:
ALTER FUNCTION function_with_argtypes DEPENDS ON EXTENSION name
ALTER PROCEDURE function_with_argtypes DEPENDS ON EXTENSION name
ALTER ROUTINE function_with_argtypes DEPENDS ON EXTENSION name
ALTER TRIGGER name ON qualified_name DEPENDS ON EXTENSION name
ALTER MATERIALIZED VIEW qualified_name DEPENDS ON EXTENSION name
ALTER INDEX qualified_name DEPENDS ON EXTENSION name
---
alter_object_schema_stmt:
ALTER AGGREGATE aggregate_with_argtypes SET SCHEMA name
ALTER COLLATION any_name SET SCHEMA name
ALTER CONVERSION any_name SET SCHEMA name
ALTER DOMAIN any_name SET SCHEMA name
ALTER EXTENSION name SET SCHEMA name
ALTER FUNCTION function_with_argtypes SET SCHEMA name
ALTER OPERATOR operator_with_argtypes SET SCHEMA name
ALTER OPERATOR CLASS any_name USING access_method SET SCHEMA name
ALTER OPERATOR FAMILY any_name USING access_method SET SCHEMA name
ALTER PROCEDURE function_with_argtypes SET SCHEMA name
ALTER ROUTINE function_with_argtypes SET SCHEMA name
ALTER TABLE relation_expr SET SCHEMA name
ALTER TABLE IF EXISTS relation_expr SET SCHEMA name
ALTER STATISTICS any_name SET SCHEMA name
ALTER TEXT SEARCH PARSER any_name SET SCHEMA name
ALTER TEXT SEARCH DICTIONARY any_name SET SCHEMA name
ALTER TEXT SEARCH TEMPLATE any_name SET SCHEMA name
ALTER TEXT SEARCH CONFIGURATION any_name SET SCHEMA name
ALTER SEQUENCE qualified_name SET SCHEMA name
ALTER SEQUENCE IF EXISTS qualified_name SET SCHEMA name
ALTER VIEW qualified_name SET SCHEMA name
ALTER VIEW IF EXISTS qualified_name SET SCHEMA name
ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name
ALTER MATERIALIZED VIEW IF EXISTS qualified_name SET SCHEMA name
ALTER FOREIGN TABLE relation_expr SET SCHEMA name
ALTER FOREIGN TABLE IF EXISTS relation_expr SET SCHEMA name
ALTER TYPE any_name SET SCHEMA name
---
alter_operator_stmt:
ALTER OPERATOR operator_with_argtypes SET LP operator_def_list RP
---
operator_def_list:
operator_def_elem
operator_def_list COMMA operator_def_elem
---
operator_def_elem:
col_label EQUAL NONE
col_label EQUAL operator_def_arg
---
operator_def_arg:
func_type
reserved_keyword
qual_all_op
numeric_only
sconst
---
alter_owner_stmt:
ALTER AGGREGATE aggregate_with_argtypes OWNER TO role_spec
ALTER COLLATION any_name OWNER TO role_spec
ALTER CONVERSION any_name OWNER TO role_spec
ALTER DATABASE database_name OWNER TO role_spec
ALTER DOMAIN any_name OWNER TO role_spec
ALTER FUNCTION function_with_argtypes OWNER TO role_spec
ALTER opt_procedural LANGUAGE name OWNER TO role_spec
ALTER LARGE OBJECT numeric_only OWNER TO role_spec
ALTER OPERATOR operator_with_argtypes OWNER TO role_spec
ALTER OPERATOR CLASS any_name USING access_method OWNER TO role_spec
ALTER OPERATOR FAMILY any_name USING access_method OWNER TO role_spec
ALTER PROCEDURE function_with_argtypes OWNER TO role_spec
ALTER ROUTINE function_with_argtypes OWNER TO role_spec
ALTER SCHEMA name OWNER TO role_spec
ALTER TYPE any_name OWNER TO role_spec
ALTER TABLESPACE name OWNER TO role_spec
ALTER STATISTICS any_name OWNER TO role_spec
ALTER TEXT SEARCH DICTIONARY any_name OWNER TO role_spec
ALTER TEXT SEARCH CONFIGURATION any_name OWNER TO role_spec
ALTER FOREIGN DATA WRAPPER name OWNER TO role_spec
ALTER SERVER name OWNER TO role_spec
ALTER EVENT TRIGGER name OWNER TO role_spec
ALTER PUBLICATION name OWNER TO role_spec
ALTER SUBSCRIPTION name OWNER TO role_spec
---
create_publication_stmt:
CREATE PUBLICATION name opt_publication_for_tables opt_definition
---
opt_publication_for_tables:
publication_for_tables

---
publication_for_tables:
FOR TABLE relation_expr_list
FOR ALL TABLES
---
alter_publication_stmt:
ALTER PUBLICATION name SET definition
ALTER PUBLICATION name ADD TABLE relation_expr_list
ALTER PUBLICATION name SET TABLE relation_expr_list
ALTER PUBLICATION name DROP TABLE relation_expr_list
---
create_subscription_stmt:
CREATE SUBSCRIPTION name CONNECTION sconst PUBLICATION publication_name_list opt_definition
---
publication_name_list:
publication_name_item
publication_name_list COMMA publication_name_item
---
publication_name_item:
col_label
---
alter_subscription_stmt:
ALTER SUBSCRIPTION name SET definition
ALTER SUBSCRIPTION name CONNECTION sconst
ALTER SUBSCRIPTION name REFRESH PUBLICATION opt_definition
ALTER SUBSCRIPTION name SET PUBLICATION publication_name_list opt_definition
ALTER SUBSCRIPTION name ENABLE
ALTER SUBSCRIPTION name DISABLE
---
drop_subscription_stmt:
DROP SUBSCRIPTION name opt_drop_behavior
DROP SUBSCRIPTION IF EXISTS name opt_drop_behavior
---
rule_stmt:
CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead rule_action_list
---
rule_action_list:
NOTHING
rule_action_stmt
LP rule_action_multi RP
---
rule_action_multi:
rule_action_multi SEMI rule_action_stmt_or_empty
rule_action_stmt_or_empty
---
rule_action_stmt:
select_stmt
insert_stmt
update_stmt
delete_stmt
notify_stmt
---
rule_action_stmt_or_empty:
rule_action_stmt

---
event:
SELECT
UPDATE
DELETE
INSERT
---
opt_instead:
INSTEAD
ALSO

---
notify_stmt:
NOTIFY col_id notify_payload
---
notify_payload:
COMMA sconst

---
listen_stmt:
LISTEN col_id
---
unlisten_stmt:
UNLISTEN col_id
UNLISTEN STAR
---
transaction_stmt:
ABORT opt_transaction opt_transaction_chain
BEGIN opt_transaction transaction_mode_list_or_empty
START TRANSACTION transaction_mode_list_or_empty
COMMIT opt_transaction opt_transaction_chain
END opt_transaction opt_transaction_chain
ROLLBACK opt_transaction opt_transaction_chain
SAVEPOINT col_id
RELEASE SAVEPOINT col_id
RELEASE col_id
ROLLBACK opt_transaction TO SAVEPOINT col_id
ROLLBACK opt_transaction TO col_id
PREPARE TRANSACTION sconst
COMMIT PREPARED sconst
ROLLBACK PREPARED sconst
---
opt_transaction:
WORK
TRANSACTION

---
transaction_mode_item:
ISOLATION LEVEL iso_level
READ ONLY
READ WRITE
DEFERRABLE
NOT DEFERRABLE
---
transaction_mode_list:
transaction_mode_item
transaction_mode_list COMMA transaction_mode_item
transaction_mode_list transaction_mode_item
---
transaction_mode_list_or_empty:
transaction_mode_list

---
opt_transaction_chain:
AND CHAIN
AND NO CHAIN

---
view_stmt:
CREATE opt_temp VIEW qualified_name opt_column_list opt_reloptions AS select_stmt opt_check_option **qualified_name->col_id->identifier:kDataViewName:1:Define;qualified_name->col_id->unreserved_keyword:kDataViewName:1:Define;qualified_name->col_id->col_name_keyword:kDataViewName:1:Define;opt_column_list->column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE OR REPLACE opt_temp VIEW qualified_name opt_column_list opt_reloptions AS select_stmt opt_check_option **qualified_name->col_id->identifier:kDataViewName:1:Define;qualified_name->col_id->unreserved_keyword:kDataViewName:1:Define;qualified_name->col_id->col_name_keyword:kDataViewName:1:Define;opt_column_list->column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;opt_column_list->column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define;**
CREATE opt_temp RECURSIVE VIEW qualified_name LP column_list RP opt_reloptions AS select_stmt opt_check_option **qualified_name->col_id->identifier:kDataViewName:1:Define;qualified_name->col_id->unreserved_keyword:kDataViewName:1:Define;qualified_name->col_id->col_name_keyword:kDataViewName:1:Define;column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define**
CREATE OR REPLACE opt_temp RECURSIVE VIEW qualified_name LP column_list RP opt_reloptions AS select_stmt opt_check_option **qualified_name->col_id->identifier:kDataViewName:1:Define;qualified_name->col_id->unreserved_keyword:kDataViewName:1:Define;qualified_name->col_id->col_name_keyword:kDataViewName:1:Define;column_list->column_elem->col_id->identifier=kDataColumnName:2:Define;column_list->column_elem->col_id->unreserved_keyword=kDataColumnName:2:Define;column_list->column_elem->col_id->col_name_keyword=kDataColumnName:2:Define;**
---
opt_check_option:
WITH CHECK OPTION
WITH CASCADED CHECK OPTION
WITH LOCAL CHECK OPTION

---
load_stmt:
LOAD file_name
---
createdb_stmt:
CREATE DATABASE database_name opt_with createdb_opt_list
---
createdb_opt_list:
createdb_opt_items

---
createdb_opt_items:
createdb_opt_item
createdb_opt_items createdb_opt_item
---
createdb_opt_item:
createdb_opt_name opt_equal signed_iconst
createdb_opt_name opt_equal opt_boolean_or_string
createdb_opt_name opt_equal DEFAULT
---
createdb_opt_name:
identifier
CONNECTION LIMIT
ENCODING
LOCATION
OWNER
TABLESPACE
TEMPLATE
---
opt_equal:
EQUAL

---
alter_database_stmt:
ALTER DATABASE database_name WITH createdb_opt_list
ALTER DATABASE database_name createdb_opt_list
ALTER DATABASE database_name SET TABLESPACE name
---
alter_database_set_stmt:
ALTER DATABASE database_name set_reset_clause
---
dropdb_stmt:
DROP DATABASE database_name
DROP DATABASE IF EXISTS database_name
DROP DATABASE database_name opt_with LP drop_option_list RP
DROP DATABASE IF EXISTS database_name opt_with LP drop_option_list RP
---
drop_option_list:
drop_option
drop_option_list COMMA drop_option
---
drop_option:
FORCE
---
alter_collation_stmt:
ALTER COLLATION any_name REFRESH VERSION
---
alter_system_stmt:
ALTER SYSTEM SET generic_set
ALTER SYSTEM RESET generic_reset
---
create_domain_stmt:
CREATE DOMAIN any_name opt_as typename col_qual_list
---
alter_domain_stmt:
ALTER DOMAIN any_name alter_column_default
ALTER DOMAIN any_name DROP NOT NULL
ALTER DOMAIN any_name SET NOT NULL
ALTER DOMAIN any_name ADD table_constraint
ALTER DOMAIN any_name DROP CONSTRAINT name opt_drop_behavior
ALTER DOMAIN any_name DROP CONSTRAINT IF EXISTS name opt_drop_behavior
ALTER DOMAIN any_name VALIDATE CONSTRAINT name
---
opt_as:
AS

---
alter_tsdictionary_stmt:
ALTER TEXT SEARCH DICTIONARY any_name definition
---
alter_tsconfiguration_stmt:
ALTER TEXT SEARCH CONFIGURATION any_name ADD MAPPING FOR name_list any_with any_name_list
ALTER TEXT SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list any_with any_name_list
ALTER TEXT SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name any_with any_name
ALTER TEXT SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name any_with any_name
ALTER TEXT SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list
ALTER TEXT SEARCH CONFIGURATION any_name DROP MAPPING IF EXISTS FOR name_list
---
any_with:
WITH
WITH_LA
---
create_conversion_stmt:
CREATE opt_default CONVERSION any_name FOR sconst TO sconst FROM any_name
---
cluster_stmt:
CLUSTER opt_verbose qualified_name cluster_index_specification
CLUSTER opt_verbose
CLUSTER opt_verbose index_name ON qualified_name
---
cluster_index_specification:
USING index_name

---
vacuum_stmt:
VACUUM opt_full opt_freeze opt_verbose opt_analyze opt_vacuum_relation_list
VACUUM LP vac_analyze_option_list RP opt_vacuum_relation_list
---
analyze_stmt:
analyze_keyword opt_verbose opt_vacuum_relation_list
analyze_keyword LP vac_analyze_option_list RP opt_vacuum_relation_list
---
vac_analyze_option_list:
vac_analyze_option_elem
vac_analyze_option_list COMMA vac_analyze_option_elem
---
analyze_keyword:
ANALYZE
ANALYSE
---
vac_analyze_option_elem:
vac_analyze_option_name vac_analyze_option_arg
---
vac_analyze_option_name:
non_reserved_word
analyze_keyword
---
vac_analyze_option_arg:
opt_boolean_or_string
numeric_only

---
opt_analyze:
analyze_keyword

---
opt_verbose:
VERBOSE

---
opt_full:
FULL

---
opt_freeze:
FREEZE

---
opt_name_list:
LP name_list RP

---
vacuum_relation:
qualified_name opt_name_list
---
vacuum_relation_list:
vacuum_relation
vacuum_relation_list COMMA vacuum_relation
---
opt_vacuum_relation_list:
vacuum_relation_list

---
explain_stmt:
EXPLAIN explainable_stmt
EXPLAIN analyze_keyword opt_verbose explainable_stmt
EXPLAIN VERBOSE explainable_stmt
EXPLAIN LP explain_option_list RP explainable_stmt
---
explainable_stmt:
select_stmt
insert_stmt
update_stmt
delete_stmt
declare_cursor_stmt
create_as_stmt
create_mat_view_stmt
refresh_mat_view_stmt
execute_stmt
---
explain_option_list:
explain_option_elem
explain_option_list COMMA explain_option_elem
---
explain_option_elem:
explain_option_name explain_option_arg
---
explain_option_name:
non_reserved_word
analyze_keyword
---
explain_option_arg:
opt_boolean_or_string
numeric_only

---
prepare_stmt:
PREPARE name prep_type_clause AS preparable_stmt
---
prep_type_clause:
LP type_list RP

---
preparable_stmt:
select_stmt
insert_stmt
update_stmt
delete_stmt
---
execute_stmt:
EXECUTE name execute_param_clause
CREATE opt_temp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data
CREATE opt_temp TABLE IF NOT EXISTS create_as_target AS EXECUTE name execute_param_clause opt_with_data
---
execute_param_clause:
LP expr_list RP

---
deallocate_stmt:
DEALLOCATE name
DEALLOCATE PREPARE name
DEALLOCATE ALL
DEALLOCATE PREPARE ALL
---
insert_stmt:
opt_with_clause INSERT INTO insert_target insert_rest opt_on_conflict returning_clause **insert_target->qualified_name->col_id->identifier:kDataTableName:1:Use;insert_target->qualified_name->col_id->unreserved_keyword:kDataTableName:1:Use;insert_target->qualified_name->col_id->col_name_keyword:kDataTableName:1:Use;insert_rest->insert_column_list->insert_column_item->col_id->identifier=kDataColumnName:2:Use;insert_rest->insert_column_list->insert_column_item->col_id->unreserved_keyword=kDataColumnName:2:Use;insert_rest->insert_column_list->insert_column_item->col_id->col_name_keyword=kDataColumnName:2:Use;**
---
insert_target:
qualified_name
qualified_name AS col_id
---
insert_rest:
select_stmt
OVERRIDING override_kind VALUE select_stmt
LP insert_column_list RP select_stmt
LP insert_column_list RP OVERRIDING override_kind VALUE select_stmt
DEFAULT VALUES
---
override_kind:
USER
SYSTEM
---
insert_column_list:
insert_column_item
insert_column_list COMMA insert_column_item
---
insert_column_item:
col_id opt_indirection
---
opt_on_conflict:
ON CONFLICT opt_conf_expr DO UPDATE SET set_clause_list where_clause
ON CONFLICT opt_conf_expr DO NOTHING

---
opt_conf_expr:
LP index_params RP where_clause
ON CONSTRAINT name

---
returning_clause:
RETURNING target_list

---
delete_stmt:
opt_with_clause DELETE FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause
---
using_clause:
USING from_list

---
lock_stmt:
LOCK opt_table relation_expr_list opt_lock opt_nowait **relation_expr_list->relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;relation_expr_list->relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;relation_expr_list->relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use;**
---
opt_lock:
IN lock_type MODE

---
lock_type:
ACCESS SHARE
ROW SHARE
ROW EXCLUSIVE
SHARE UPDATE EXCLUSIVE
SHARE
SHARE ROW EXCLUSIVE
EXCLUSIVE
ACCESS EXCLUSIVE
---
opt_nowait:
NOWAIT

---
opt_nowait_or_skip:
NOWAIT
SKIP LOCKED

---
update_stmt:
opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause
---
set_clause_list:
set_clause
set_clause_list COMMA set_clause
---
set_clause:
set_target EQUAL a_expr
LP set_target_list RP EQUAL a_expr
---
set_target:
col_id opt_indirection
---
set_target_list:
set_target
set_target_list COMMA set_target
---
declare_cursor_stmt:
DECLARE cursor_name cursor_options CURSOR opt_hold FOR select_stmt
---
cursor_name:
name
---
cursor_options:

cursor_options NO SCROLL
cursor_options SCROLL
cursor_options BINARY
cursor_options INSENSITIVE
---
opt_hold:

WITH HOLD
WITHOUT HOLD
---
select_stmt:
select_no_parens
select_with_parens
---
select_with_parens:
LP select_no_parens RP
LP select_with_parens RP
---
select_no_parens:
simple_select
select_clause sort_clause
select_clause opt_sort_clause for_locking_clause opt_select_limit
select_clause opt_sort_clause select_limit opt_for_locking_clause
with_clause select_clause
with_clause select_clause sort_clause
with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit
with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause
---
select_clause:
simple_select
select_with_parens
---
simple_select:
SELECT opt_all_clause opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause **opt_target_list->target_list->target_el->identifier=kDataColumnName:2:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use;**
SELECT distinct_clause target_list into_clause from_clause where_clause group_clause having_clause window_clause **target_list->target_el->identifier=kDataColumnName:2:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;from_clause->from_list->table_ref->relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use;**
values_clause
TABLE relation_expr **relation_expr->qualified_name->col_id->identifier=kDataTableName:1:Use;relation_expr->qualified_name->col_id->unreserved_keyword=kDataTableName:1:Use;relation_expr->qualified_name->col_id->col_name_keyword=kDataTableName:1:Use;**
select_clause UNION all_or_distinct select_clause
select_clause INTERSECT all_or_distinct select_clause
select_clause EXCEPT all_or_distinct select_clause
---
with_clause:
WITH cte_list
WITH_LA cte_list
WITH RECURSIVE cte_list
---
cte_list:
common_table_expr
cte_list COMMA common_table_expr
---
common_table_expr:
name opt_name_list AS opt_materialized LP preparable_stmt RP
---
opt_materialized:
MATERIALIZED
NOT MATERIALIZED

---
opt_with_clause:
with_clause

---
into_clause:
INTO opt_temp_table_name

---
opt_temp_table_name:
TEMPORARY opt_table qualified_name
TEMP opt_table qualified_name
LOCAL TEMPORARY opt_table qualified_name
LOCAL TEMP opt_table qualified_name
GLOBAL TEMPORARY opt_table qualified_name
GLOBAL TEMP opt_table qualified_name
UNLOGGED opt_table qualified_name
TABLE qualified_name
qualified_name
---
opt_table:
TABLE

---
all_or_distinct:
ALL
DISTINCT

---
distinct_clause:
DISTINCT
DISTINCT ON LP expr_list RP
---
opt_all_clause:
ALL

---
opt_sort_clause:
sort_clause

---
sort_clause:
ORDER BY sortby_list
---
sortby_list:
sortby
sortby_list COMMA sortby
---
sortby:
a_expr USING qual_all_op opt_nulls_order
a_expr opt_asc_desc opt_nulls_order
---
select_limit:
limit_clause offset_clause
offset_clause limit_clause
limit_clause
offset_clause
---
opt_select_limit:
select_limit

---
limit_clause:
LIMIT select_limit_value
LIMIT select_limit_value COMMA select_offset_value
FETCH first_or_next select_fetch_first_value row_or_rows ONLY
FETCH first_or_next row_or_rows ONLY
---
offset_clause:
OFFSET select_offset_value
OFFSET select_fetch_first_value row_or_rows
---
select_limit_value:
a_expr
ALL
---
select_offset_value:
a_expr
---
select_fetch_first_value:
c_expr
ADD i_or_f_const
SUB i_or_f_const
---
i_or_f_const:
iconst
fconst
---
row_or_rows:
ROW
ROWS
---
first_or_next:
FIRST
NEXT
---
group_clause:
GROUP BY group_by_list

---
group_by_list:
group_by_item
group_by_list COMMA group_by_item
---
group_by_item:
a_expr
empty_grouping_set
cube_clause
rollup_clause
grouping_sets_clause
---
empty_grouping_set:
LP RP
---
rollup_clause:
ROLLUP LP expr_list RP
---
cube_clause:
CUBE LP expr_list RP
---
grouping_sets_clause:
GROUPING SETS LP group_by_list RP
---
having_clause:
HAVING a_expr

---
for_locking_clause:
for_locking_items
FOR READ ONLY
---
opt_for_locking_clause:
for_locking_clause

---
for_locking_items:
for_locking_item
for_locking_items for_locking_item
---
for_locking_item:
for_locking_strength locked_rels_list opt_nowait_or_skip
---
for_locking_strength:
FOR UPDATE
FOR NO KEY UPDATE
FOR SHARE
FOR KEY SHARE
---
locked_rels_list:
OF qualified_name_list

---
values_clause:
VALUES LP expr_list RP
values_clause COMMA LP expr_list RP
---
from_clause:
FROM from_list

---
from_list:
table_ref
from_list COMMA table_ref
---
table_ref:
relation_expr opt_alias_clause
relation_expr opt_alias_clause tablesample_clause
func_table func_alias_clause
LATERAL func_table func_alias_clause
xmltable opt_alias_clause
LATERAL xmltable opt_alias_clause
select_with_parens opt_alias_clause
LATERAL select_with_parens opt_alias_clause
joined_table
LP joined_table RP alias_clause
---
joined_table:
LP joined_table RP
table_ref CROSS JOIN table_ref
table_ref join_type JOIN table_ref join_qual
table_ref JOIN table_ref join_qual
table_ref NATURAL join_type JOIN table_ref
table_ref NATURAL JOIN table_ref
---
alias_clause:
AS col_id LP name_list RP
AS col_id
col_id LP name_list RP
col_id
---
opt_alias_clause:
alias_clause

---
func_alias_clause:
alias_clause
AS LP table_func_element_list RP
AS col_id LP table_func_element_list RP
col_id LP table_func_element_list RP

---
join_type:
FULL join_outer
LEFT join_outer
RIGHT join_outer
INNER
---
join_outer:
OUTER

---
join_qual:
USING LP name_list RP
ON a_expr
---
relation_expr:
qualified_name
qualified_name STAR
ONLY qualified_name
ONLY LP qualified_name RP
---
relation_expr_list:
relation_expr
relation_expr_list COMMA relation_expr
---
relation_expr_opt_alias:
relation_expr
relation_expr col_id
relation_expr AS col_id
---
tablesample_clause:
TABLESAMPLE func_name LP expr_list RP opt_repeatable_clause
---
opt_repeatable_clause:
REPEATABLE LP a_expr RP

---
func_table:
func_expr_windowless opt_ordinality
ROWS FROM LP rowsfrom_list RP opt_ordinality
---
rowsfrom_item:
func_expr_windowless opt_col_def_list
---
rowsfrom_list:
rowsfrom_item
rowsfrom_list COMMA rowsfrom_item
---
opt_col_def_list:
AS LP table_func_element_list RP

---
opt_ordinality:
WITH_LA ORDINALITY

---
where_clause:
WHERE a_expr

---
where_or_current_clause:
WHERE a_expr
WHERE CURRENT OF cursor_name

---
opt_table_func_element_list:
table_func_element_list

---
table_func_element_list:
table_func_element
table_func_element_list COMMA table_func_element
---
table_func_element:
col_id typename opt_collate_clause
---
xmltable:
XMLTABLE LP c_expr xmlexists_argument COLUMNS xmltable_column_list RP
XMLTABLE LP XMLNAMESPACES LP xml_namespace_list RP COMMA c_expr xmlexists_argument COLUMNS xmltable_column_list RP
---
xmltable_column_list:
xmltable_column_el
xmltable_column_list COMMA xmltable_column_el
---
xmltable_column_el:
col_id typename
col_id typename xmltable_column_option_list
col_id FOR ORDINALITY
---
xmltable_column_option_list:
xmltable_column_option_el
xmltable_column_option_list xmltable_column_option_el
---
xmltable_column_option_el:
identifier b_expr
DEFAULT b_expr
NOT NULL
NULL
---
xml_namespace_list:
xml_namespace_el
xml_namespace_list COMMA xml_namespace_el
---
xml_namespace_el:
b_expr AS col_label
DEFAULT b_expr
---
typename:
simple_typename opt_array_bounds
SETOF simple_typename opt_array_bounds
simple_typename ARRAY LBRACKET iconst RBRACKET
SETOF simple_typename ARRAY LBRACKET iconst RBRACKET
simple_typename ARRAY
SETOF simple_typename ARRAY
---
opt_array_bounds:
opt_array_bounds LBRACKET RBRACKET
opt_array_bounds LBRACKET iconst RBRACKET

---
simple_typename:
generic_type
numeric
bit
character
const_datetime
const_interval opt_interval
const_interval LP iconst RP
---
const_typename:
numeric
const_bit
const_character
const_datetime
---
generic_type:
type_function_name opt_type_modifiers
type_function_name attrs opt_type_modifiers
---
opt_type_modifiers:
LP expr_list RP

---
numeric:
INT
INTEGER
SMALLINT
BIGINT
REAL
FLOAT opt_float
DOUBLE PRECISION
DECIMAL opt_type_modifiers
DEC opt_type_modifiers
NUMERIC opt_type_modifiers
BOOLEAN
---
opt_float:
LP iconst RP

---
bit:
bit_with_length
bit_without_length
---
const_bit:
bit_with_length
bit_without_length
---
bit_with_length:
BIT opt_varying LP expr_list RP
---
bit_without_length:
BIT opt_varying
---
character:
character_with_length
character_without_length
---
const_character:
character_with_length
character_without_length
---
character_with_length:
character_conflicta LP iconst RP
---
character_without_length:
character_conflicta
---
character_conflicta:
CHARACTER opt_varying
CHAR opt_varying
VARCHAR
NATIONAL CHARACTER opt_varying
NATIONAL CHAR opt_varying
NCHAR opt_varying
---
opt_varying:
VARYING

---
const_datetime:
TIMESTAMP LP iconst RP opt_timezone
TIMESTAMP opt_timezone
TIME LP iconst RP opt_timezone
TIME opt_timezone
---
const_interval:
INTERVAL
---
opt_timezone:
WITH_LA TIME ZONE
WITHOUT TIME ZONE

---
opt_interval:
YEAR
MONTH
DAY
HOUR
MINUTE
interval_second
YEAR TO MONTH
DAY TO HOUR
DAY TO MINUTE
DAY TO interval_second
HOUR TO MINUTE
HOUR TO interval_second
MINUTE TO interval_second

---
interval_second:
SECOND
SECOND LP iconst RP
---
a_expr:
c_expr
a_expr TYPECAST typename
a_expr COLLATE any_name
a_expr AT TIME ZONE a_expr
ADD a_expr
SUB a_expr
a_expr ADD a_expr
a_expr SUB a_expr
a_expr STAR a_expr
a_expr DIVIDE a_expr
a_expr MOD a_expr
a_expr XOR a_expr
a_expr LESSTHAN a_expr
a_expr GTEATERTHAN a_expr
a_expr EQUAL a_expr
a_expr LESS_EQUALS a_expr
a_expr GREATER_EQUALS a_expr
a_expr NOT_EQUALS a_expr
a_expr qual_op a_expr
qual_op a_expr
a_expr qual_op
a_expr AND a_expr
a_expr OR a_expr
NOT a_expr
NOT_LA a_expr
a_expr LIKE a_expr
a_expr LIKE a_expr ESCAPE a_expr
a_expr NOT_LA LIKE a_expr
a_expr NOT_LA LIKE a_expr ESCAPE a_expr
a_expr ILIKE a_expr
a_expr ILIKE a_expr ESCAPE a_expr
a_expr NOT_LA ILIKE a_expr
a_expr NOT_LA ILIKE a_expr ESCAPE a_expr
a_expr SIMILAR TO a_expr
a_expr SIMILAR TO a_expr ESCAPE a_expr
a_expr NOT_LA SIMILAR TO a_expr
a_expr NOT_LA SIMILAR TO a_expr ESCAPE a_expr
a_expr IS NULL
a_expr ISNULL
a_expr IS NOT NULL
a_expr NOTNULL
row OVERLAPS row
a_expr IS TRUE
a_expr IS NOT TRUE
a_expr IS FALSE
a_expr IS NOT FALSE
a_expr IS UNKNOWN
a_expr IS NOT UNKNOWN
a_expr IS DISTINCT FROM a_expr
a_expr IS NOT DISTINCT FROM a_expr
a_expr IS OF LP type_list RP
a_expr IS NOT OF LP type_list RP
a_expr BETWEEN opt_asymmetric b_expr AND a_expr
a_expr NOT_LA BETWEEN opt_asymmetric b_expr AND a_expr
a_expr BETWEEN SYMMETRIC b_expr AND a_expr
a_expr NOT_LA BETWEEN SYMMETRIC b_expr AND a_expr
a_expr IN in_expr
a_expr NOT_LA IN in_expr
a_expr subquery_op sub_type select_with_parens
a_expr subquery_op sub_type LP a_expr RP
UNIQUE select_with_parens
a_expr IS DOCUMENT
a_expr IS NOT DOCUMENT
DEFAULT
---
b_expr:
c_expr
b_expr TYPECAST typename
ADD b_expr
SUB b_expr
b_expr ADD b_expr
b_expr SUB b_expr
b_expr STAR b_expr
b_expr DIVIDE b_expr
b_expr MOD b_expr
b_expr XOR b_expr
b_expr LESSTHAN b_expr
b_expr GTEATERTHAN b_expr
b_expr EQUAL b_expr
b_expr LESS_EQUALS b_expr
b_expr GREATER_EQUALS b_expr
b_expr NOT_EQUALS b_expr
b_expr qual_op b_expr
qual_op b_expr
b_expr qual_op
b_expr IS DISTINCT FROM b_expr
b_expr IS NOT DISTINCT FROM b_expr
b_expr IS OF LP type_list RP
b_expr IS NOT OF LP type_list RP
b_expr IS DOCUMENT
b_expr IS NOT DOCUMENT
---
c_expr:
columnref
aexpr_const
PARAM opt_indirection
LP a_expr RP opt_indirection
case_expr
func_expr
select_with_parens
select_with_parens indirection
EXISTS select_with_parens
ARRAY select_with_parens
ARRAY array_expr
explicit_row
implicit_row
GROUPING LP expr_list RP
---
func_application:
func_name LP RP
func_name LP func_arg_list opt_sort_clause RP
func_name LP VARIADIC func_arg_expr opt_sort_clause RP
func_name LP func_arg_list COMMA VARIADIC func_arg_expr opt_sort_clause RP
func_name LP ALL func_arg_list opt_sort_clause RP
func_name LP DISTINCT func_arg_list opt_sort_clause RP
func_name LP STAR RP
---
func_expr:
func_application within_group_clause filter_clause over_clause
func_expr_common_subexpr
---
func_expr_windowless:
func_application
func_expr_common_subexpr
---
func_expr_common_subexpr:
COLLATION FOR LP a_expr RP
CURRENT_DATE
CURRENT_TIME
CURRENT_TIME LP iconst RP
CURRENT_TIMESTAMP
CURRENT_TIMESTAMP LP iconst RP
LOCALTIME
LOCALTIME LP iconst RP
LOCALTIMESTAMP
LOCALTIMESTAMP LP iconst RP
CURRENT_ROLE
CURRENT_USER
SESSION_USER
USER
CURRENT_CATALOG
CURRENT_SCHEMA
CAST LP a_expr AS typename RP
EXTRACT LP extract_list RP
OVERLAY LP overlay_list RP
POSITION LP position_list RP
SUBSTRING LP substr_list RP
TREAT LP a_expr AS typename RP
TRIM LP BOTH trim_list RP
TRIM LP LEADING trim_list RP
TRIM LP TRAILING trim_list RP
TRIM LP trim_list RP
NULLIF LP a_expr COMMA a_expr RP
COALESCE LP expr_list RP
GREATEST LP expr_list RP
LEAST LP expr_list RP
XMLCONCAT LP expr_list RP
XMLELEMENT LP NAME col_label RP
XMLELEMENT LP NAME col_label COMMA xml_attributes RP
XMLELEMENT LP NAME col_label COMMA expr_list RP
XMLELEMENT LP NAME col_label COMMA xml_attributes COMMA expr_list RP
XMLEXISTS LP c_expr xmlexists_argument RP
XMLFOREST LP xml_attribute_list RP
XMLPARSE LP document_or_content a_expr xml_whitespace_option RP
XMLPI LP NAME col_label RP
XMLPI LP NAME col_label COMMA a_expr RP
XMLROOT LP a_expr COMMA xml_root_version opt_xml_root_standalone RP
XMLSERIALIZE LP document_or_content a_expr AS simple_typename RP
---
xml_root_version:
VERSION a_expr
VERSION NO VALUE
---
opt_xml_root_standalone:
COMMA STANDALONE YES
COMMA STANDALONE NO
COMMA STANDALONE NO VALUE

---
xml_attributes:
XMLATTRIBUTES LP xml_attribute_list RP
---
xml_attribute_list:
xml_attribute_el
xml_attribute_list COMMA xml_attribute_el
---
xml_attribute_el:
a_expr AS col_label
a_expr
---
document_or_content:
DOCUMENT
CONTENT
---
xml_whitespace_option:
PRESERVE WHITESPACE
STRIP WHITESPACE

---
xmlexists_argument:
PASSING c_expr
PASSING c_expr xml_passing_mech
PASSING xml_passing_mech c_expr
PASSING xml_passing_mech c_expr xml_passing_mech
---
xml_passing_mech:
BY REF
BY VALUE
---
within_group_clause:
WITHIN GROUP LP sort_clause RP

---
filter_clause:
FILTER LP WHERE a_expr RP

---
window_clause:
WINDOW window_definition_list

---
window_definition_list:
window_definition
window_definition_list COMMA window_definition
---
window_definition:
col_id AS window_specification
---
over_clause:
OVER window_specification
OVER col_id

---
window_specification:
LP opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause RP
---
opt_existing_window_name:
col_id

---
opt_partition_clause:
PARTITION BY expr_list

---
opt_frame_clause:
RANGE frame_extent opt_window_exclusion_clause
ROWS frame_extent opt_window_exclusion_clause
GROUPS frame_extent opt_window_exclusion_clause

---
frame_extent:
frame_bound
BETWEEN frame_bound AND frame_bound
---
frame_bound:
UNBOUNDED PRECEDING
UNBOUNDED FOLLOWING
CURRENT ROW
a_expr PRECEDING
a_expr FOLLOWING
---
opt_window_exclusion_clause:
EXCLUDE CURRENT ROW
EXCLUDE GROUP
EXCLUDE TIES
EXCLUDE NO OTHERS

---
row:
ROW LP expr_list RP
ROW LP RP
LP expr_list COMMA a_expr RP
---
explicit_row:
ROW LP expr_list RP
ROW LP RP
---
implicit_row:
LP expr_list COMMA a_expr RP
---
sub_type:
ANY
SOME
ALL
---
all_op:
op
math_op
---
math_op:
ADD
SUB
STAR
DIVIDE
MOD
XOR
LESSTHAN
GTEATERTHAN
EQUAL
LESS_EQUALS
GREATER_EQUALS
NOT_EQUALS
---
qual_op:
op
OPERATOR LP any_operator RP
---
qual_all_op:
all_op
OPERATOR LP any_operator RP
---
subquery_op:
all_op
OPERATOR LP any_operator RP
LIKE
NOT_LA LIKE
ILIKE
NOT_LA ILIKE
---
expr_list:
a_expr
expr_list COMMA a_expr
---
func_arg_list:
func_arg_expr
func_arg_list COMMA func_arg_expr
---
func_arg_expr:
a_expr
param_name COLON_EQUALS a_expr
param_name EQUALS_GREATER a_expr
---
type_list:
typename
type_list COMMA typename
---
array_expr:
LBRACKET expr_list RBRACKET
LBRACKET array_expr_list RBRACKET
LBRACKET RBRACKET
---
array_expr_list:
array_expr
array_expr_list COMMA array_expr
---
extract_list:
extract_arg FROM a_expr

---
extract_arg:
identifier
YEAR
MONTH
DAY
HOUR
MINUTE
SECOND
sconst
---
overlay_list:
a_expr overlay_placing substr_from substr_for
a_expr overlay_placing substr_from
---
overlay_placing:
PLACING a_expr
---
position_list:
b_expr IN b_expr

---
substr_list:
a_expr substr_from substr_for
a_expr substr_for substr_from
a_expr substr_from
a_expr substr_for
expr_list

---
substr_from:
FROM a_expr
---
substr_for:
FOR a_expr
---
trim_list:
a_expr FROM expr_list
FROM expr_list
expr_list
---
in_expr:
select_with_parens
LP expr_list RP
---
case_expr:
CASE case_arg when_clause_list case_default END
---
when_clause_list:
when_clause
when_clause_list when_clause
---
when_clause:
WHEN a_expr THEN a_expr
---
case_default:
ELSE a_expr

---
case_arg:
a_expr

---
columnref:
col_id
col_id indirection
---
indirection_el:
DOT attr_name
DOT STAR
LBRACKET a_expr RBRACKET
LBRACKET opt_slice_bound COLON opt_slice_bound RBRACKET
---
opt_slice_bound:
a_expr

---
indirection:
indirection_el
indirection indirection_el
---
opt_indirection:

opt_indirection indirection_el
---
opt_asymmetric:
ASYMMETRIC

---
opt_target_list:
target_list

---
target_list:
target_el
target_list COMMA target_el
---
target_el:
a_expr AS col_label
a_expr identifier
a_expr
STAR
---
qualified_name_list:
qualified_name
qualified_name_list COMMA qualified_name
---
qualified_name:
col_id
col_id indirection
---
name_list:
name
name_list COMMA name
---
name:
col_id
---
database_name:
col_id
---
access_method:
col_id
---
attr_name:
col_label
---
index_name:
col_id
---
file_name:
sconst
---
func_name:
type_function_name
col_id indirection
---
aexpr_const:
iconst
fconst
sconst
BCONST
XCONST
func_name sconst
func_name LP func_arg_list opt_sort_clause RP sconst
const_typename sconst
const_interval sconst opt_interval
const_interval LP iconst RP sconst
TRUE
FALSE
NULL
---
iconst:
INTLITERAL
---
sconst:
STRINGLITERAL
---
signed_iconst:
INTLITERAL
ADD iconst
SUB iconst
---
role_id:
role_spec
---
role_spec:
non_reserved_word
CURRENT_USER
SESSION_USER
---
role_list:
role_spec
role_list COMMA role_spec
---
col_id:
identifier
unreserved_keyword
col_name_keyword
---
type_function_name:
identifier
unreserved_keyword
type_func_name_keyword
---
non_reserved_word:
identifier
unreserved_keyword
col_name_keyword
type_func_name_keyword
---
col_label:
identifier
unreserved_keyword
col_name_keyword
type_func_name_keyword
reserved_keyword
---
unreserved_keyword:
ABORT
ABSOLUTE
ACCESS
ACTION
ADD
ADMIN
AFTER
AGGREGATE
ALSO
ALTER
ALWAYS
ASSERTION
ASSIGNMENT
AT
ATTACH
ATTRIBUTE
BACKWARD
BEFORE
BEGIN
BY
CACHE
CALL
CALLED
CASCADE
CASCADED
CATALOG
CHAIN
CHARACTERISTICS
CHECKPOINT
CLASS
CLOSE
CLUSTER
COLUMNS
COMMENT
COMMENTS
COMMIT
COMMITTED
CONFIGURATION
CONFLICT
CONNECTION
CONSTRAINTS
CONTENT
CONTINUE
CONVERSION
COPY
COST
CSV
CUBE
CURRENT
CURSOR
CYCLE
DATA
DATABASE
DAY
DEALLOCATE
DECLARE
DEFAULTS
DEFERRED
DEFINER
DELETE
DELIMITER
DELIMITERS
DEPENDS
DETACH
DICTIONARY
DISABLE
DISCARD
DOCUMENT
DOMAIN
DOUBLE
DROP
EACH
ENABLE
ENCODING
ENCRYPTED
ENUM
ESCAPE
EVENT
EXCLUDE
EXCLUDING
EXCLUSIVE
EXECUTE
EXPLAIN
EXTENSION
EXTERNAL
FAMILY
FILTER
FIRST
FOLLOWING
FORCE
FORWARD
FUNCTION
FUNCTIONS
GENERATED
GLOBAL
GRANTED
GROUPS
HANDLER
HEADER
HOLD
HOUR
IDENTITY
IF
IMMEDIATE
IMMUTABLE
IMPLICIT
IMPORT
INCLUDE
INCLUDING
INCREMENT
INDEX
INDEXES
INHERIT
INHERITS
INLINE
INPUT
INSENSITIVE
INSERT
INSTEAD
INVOKER
ISOLATION
KEY
LABEL
LANGUAGE
LARGE
LAST
LEAKPROOF
LEVEL
LISTEN
LOAD
LOCAL
LOCATION
LOCK
LOCKED
LOGGED
MAPPING
MATCH
MATERIALIZED
MAXVALUE
METHOD
MINUTE
MINVALUE
MODE
MONTH
MOVE
NAME
NAMES
NEW
NEXT
NO
NOTHING
NOTIFY
NOWAIT
NULLS
OBJECT
OF
OFF
OIDS
OLD
OPERATOR
OPTION
OPTIONS
ORDINALITY
OTHERS
OVER
OVERRIDING
OWNED
OWNER
PARALLEL
PARSER
PARTIAL
PARTITION
PASSING
PASSWORD
PLANS
POLICY
PRECEDING
PREPARE
PREPARED
PRESERVE
PRIOR
PRIVILEGES
PROCEDURAL
PROCEDURE
PROCEDURES
PROGRAM
PUBLICATION
QUOTE
RANGE
READ
REASSIGN
RECHECK
RECURSIVE
REF
REFERENCING
REFRESH
REINDEX
RELATIVE
RELEASE
RENAME
REPEATABLE
REPLACE
REPLICA
RESET
RESTART
RESTRICT
RETURNS
REVOKE
ROLE
ROLLBACK
ROLLUP
ROUTINE
ROUTINES
ROWS
RULE
SAVEPOINT
SCHEMA
SCHEMAS
SCROLL
SEARCH
SECOND
SECURITY
SEQUENCE
SEQUENCES
SERIALIZABLE
SERVER
SESSION
SET
SETS
SHARE
SHOW
SIMPLE
SKIP
SNAPSHOT
SQL
STABLE
STANDALONE
START
STATEMENT
STATISTICS
STDIN
STDOUT
STORAGE
STORED
STRICT
STRIP
SUBSCRIPTION
SUPPORT
SYSID
SYSTEM
TABLES
TABLESPACE
TEMP
TEMPLATE
TEMPORARY
TEXT
TIES
TRANSACTION
TRANSFORM
TRIGGER
TRUNCATE
TRUSTED
TYPE
TYPES
UNBOUNDED
UNCOMMITTED
UNENCRYPTED
UNKNOWN
UNLISTEN
UNLOGGED
UNTIL
UPDATE
VACUUM
VALID
VALIDATE
VALIDATOR
VALUE
VARYING
VERSION
VIEW
VIEWS
VOLATILE
WHITESPACE
WITHIN
WITHOUT
WORK
WRAPPER
WRITE
XML
YEAR
YES
ZONE
---
col_name_keyword:
BETWEEN
BIGINT
BIT
BOOLEAN
CHAR
CHARACTER
COALESCE
DEC
DECIMAL
EXISTS
EXTRACT
FLOAT
GREATEST
GROUPING
INOUT
INT
INTEGER
INTERVAL
LEAST
NATIONAL
NCHAR
NONE
NULLIF
NUMERIC
OUT
OVERLAY
POSITION
PRECISION
REAL
ROW
SETOF
SMALLINT
SUBSTRING
TIME
TIMESTAMP
TREAT
TRIM
VALUES
VARCHAR
XMLATTRIBUTES
XMLCONCAT
XMLELEMENT
XMLEXISTS
XMLFOREST
XMLNAMESPACES
XMLPARSE
XMLPI
XMLROOT
XMLSERIALIZE
XMLTABLE
---
type_func_name_keyword:
AUTHORIZATION
BINARY
COLLATION
CONCURRENTLY
CROSS
CURRENT_SCHEMA
FREEZE
FULL
ILIKE
INNER
IS
ISNULL
JOIN
LEFT
LIKE
NATURAL
NOTNULL
OUTER
OVERLAPS
RIGHT
SIMILAR
TABLESAMPLE
VERBOSE
---
reserved_keyword:
ALL
ANALYSE
ANALYZE
AND
ANY
ARRAY
AS
ASC
ASYMMETRIC
BOTH
CASE
CAST
CHECK
COLLATE
COLUMN
CONSTRAINT
CREATE
CURRENT_CATALOG
CURRENT_DATE
CURRENT_ROLE
CURRENT_TIME
CURRENT_TIMESTAMP
CURRENT_USER
DEFAULT
DEFERRABLE
DESC
DISTINCT
DO
ELSE
END
EXCEPT
FALSE
FETCH
FOR
FOREIGN
FROM
GRANT
GROUP
HAVING
IN
INITIALLY
INTERSECT
INTO
LATERAL
LEADING
LIMIT
LOCALTIME
LOCALTIMESTAMP
NOT
NULL
OFFSET
ON
ONLY
OR
ORDER
PLACING
PRIMARY
REFERENCES
RETURNING
SELECT
SESSION_USER
SOME
SYMMETRIC
TABLE
THEN
TO
TRAILING
TRUE
UNION
UNIQUE
USER
USING
VARIADIC
WHEN
WHERE
WINDOW
WITH
---
identifier:
IDENTIFIER
---
fconst:
FLOATLITERAL
---
table_name:
identifier
---