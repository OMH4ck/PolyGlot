program: 
stmtmulti 
--- 
stmtmulti: 
stmtmulti ';' stmt 
stmt 
--- 
stmt: 
alter_event_trig_stmt 
alter_collation_stmt 
alter_database_stmt 
alter_database_set_stmt 
alter_default_privileges_stmt 
alter_domain_stmt 
alter_enum_stmt 
alter_extension_stmt 
alter_extension_contents_stmt 
alter_fdw_stmt 
alter_foreign_server_stmt 
alter_foreign_table_stmt 
alter_function_stmt 
alter_group_stmt 
alter_object_depends_stmt 
alter_object_schema_stmt 
alter_owner_stmt 
alter_operator_stmt 
alter_policy_stmt 
alter_seq_stmt 
alter_system_stmt 
alter_table_stmt 
alter_tbl_spc_stmt 
alter_composite_type_stmt 
alter_publication_stmt 
alter_role_set_stmt 
alter_role_stmt 
alter_subscription_stmt 
alter_stats_stmt 
alter_ts_configuration_stmt 
alter_ts_dictionary_stmt 
alter_user_mapping_stmt 
analyze_stmt 
call_stmt 
check_point_stmt 
close_portal_stmt 
cluster_stmt 
comment_stmt 
constraints_set_stmt 
copy_stmt 
create_am_stmt 
create_as_stmt 
create_assertion_stmt 
create_cast_stmt 
create_conversion_stmt 
create_domain_stmt 
create_extension_stmt 
create_fdw_stmt 
create_foreign_server_stmt 
create_foreign_table_stmt 
create_function_stmt 
create_group_stmt 
create_mat_view_stmt 
create_op_class_stmt 
create_op_family_stmt 
create_publication_stmt 
alter_op_family_stmt 
create_policy_stmt 
create_plang_stmt 
create_schema_stmt 
create_seq_stmt 
create_stmt 
create_subscription_stmt 
create_stats_stmt 
create_table_space_stmt 
create_transform_stmt 
create_trig_stmt 
create_event_trig_stmt 
create_role_stmt 
create_user_stmt 
create_user_mapping_stmt 
createdb_stmt 
deallocate_stmt 
declare_cursor_stmt 
define_stmt 
delete_stmt 
discard_stmt 
do_stmt 
drop_cast_stmt 
drop_op_class_stmt 
drop_op_family_stmt 
drop_owned_stmt 
drop_plang_stmt 
drop_stmt 
drop_subscription_stmt 
drop_table_space_stmt 
drop_transform_stmt 
drop_role_stmt 
drop_user_mapping_stmt 
dropdb_stmt 
execute_stmt 
explain_stmt 
fetch_stmt 
grant_stmt 
grant_role_stmt 
import_foreign_schema_stmt 
index_stmt 
insert_stmt 
listen_stmt 
refresh_mat_view_stmt 
load_stmt 
lock_stmt 
notify_stmt 
prepare_stmt 
reassign_owned_stmt 
reindex_stmt 
remove_aggr_stmt 
remove_func_stmt 
remove_oper_stmt 
rename_stmt 
revoke_stmt 
revoke_role_stmt 
rule_stmt 
sec_label_stmt 
select_stmt 
transaction_stmt 
truncate_stmt 
unlisten_stmt 
update_stmt 
vacuum_stmt 
variable_reset_stmt 
variable_set_stmt 
variable_show_stmt 
view_stmt 

--- 
call_stmt: 
CALL func_application 
--- 
create_role_stmt: 
CREATE ROLE role_id opt_with opt_role_list 
--- 
opt_with: 
WITH 

--- 
opt_role_list: 
opt_role_list create_opt_role_elem 

--- 
alter_opt_role_list: 
alter_opt_role_list alter_opt_role_elem 

--- 
alter_opt_role_elem: 
PASSWORD sconst 
PASSWORD NULL_P 
ENCRYPTED PASSWORD sconst 
UNENCRYPTED PASSWORD sconst 
INHERIT 
CONNECTION LIMIT signed_iconst 
VALID UNTIL sconst 
USER role_list 
identifier 
--- 
create_opt_role_elem: 
alter_opt_role_elem 
SYSID iconst 
ADMIN role_list 
ROLE role_list 
IN_P ROLE role_list 
IN_P GROUP_P role_list 
--- 
create_user_stmt: 
CREATE USER role_id opt_with opt_role_list 
--- 
alter_role_stmt: 
ALTER ROLE role_spec opt_with alter_opt_role_list 
ALTER USER role_spec opt_with alter_opt_role_list 
--- 
opt_in_database: 

IN_P DATABASE database_name 
--- 
alter_role_set_stmt: 
ALTER ROLE role_spec opt_in_database set_reset_clause 
ALTER ROLE ALL opt_in_database set_reset_clause 
ALTER USER role_spec opt_in_database set_reset_clause 
ALTER USER ALL opt_in_database set_reset_clause 
--- 
drop_role_stmt: 
DROP ROLE role_list 
DROP ROLE IF_P EXISTS role_list 
DROP USER role_list 
DROP USER IF_P EXISTS role_list 
DROP GROUP_P role_list 
DROP GROUP_P IF_P EXISTS role_list 
--- 
create_group_stmt: 
CREATE GROUP_P role_id opt_with opt_role_list 
--- 
alter_group_stmt: 
ALTER GROUP_P role_spec add_drop USER role_list 
--- 
add_drop: 
ADD_P 
DROP 
--- 
create_schema_stmt: 
CREATE SCHEMA opt_schema_name AUTHORIZATION role_spec opt_schema_elt_list 
CREATE SCHEMA col_id opt_schema_elt_list 
CREATE SCHEMA IF_P NOT EXISTS opt_schema_name AUTHORIZATION role_spec opt_schema_elt_list 
CREATE SCHEMA IF_P NOT EXISTS col_id opt_schema_elt_list 
--- 
opt_schema_name: 
col_id 

--- 
opt_schema_elt_list: 
opt_schema_elt_list schema_stmt 

--- 
schema_stmt: 
create_stmt 
index_stmt 
create_seq_stmt 
create_trig_stmt 
grant_stmt 
view_stmt 
--- 
variable_set_stmt: 
SET set_rest 
SET LOCAL set_rest 
SET SESSION set_rest 
--- 
set_rest: 
TRANSACTION transaction_mode_list 
SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list 
set_rest_more 
--- 
generic_set: 
var_name TO var_list 
var_name '=' var_list 
var_name TO DEFAULT 
var_name '=' DEFAULT 
--- 
set_rest_more: 
generic_set 
var_name FROM CURRENT_P 
TIME ZONE zone_value 
CATALOG_P sconst 
SCHEMA sconst 
NAMES opt_encoding 
ROLE non_reserved_word_or_sconst 
SESSION AUTHORIZATION non_reserved_word_or_sconst 
SESSION AUTHORIZATION DEFAULT 
XML_P OPTION document_or_content 
TRANSACTION SNAPSHOT sconst 
--- 
var_name: 
col_id 
var_name '.' col_id 
--- 
var_list: 
var_value 
var_list ',' var_value 
--- 
var_value: 
opt_boolean_or_string 
numeric_only 
--- 
iso_level: 
READ UNCOMMITTED 
READ COMMITTED 
REPEATABLE READ 
SERIALIZABLE 
--- 
opt_boolean_or_string: 
TRUE_P 
FALSE_P 
ON 
non_reserved_word_or_sconst 
--- 
zone_value: 
sconst 
identifier 
const_interval sconst opt_interval 
const_interval '(' iconst ')' sconst 
numeric_only 
DEFAULT 
LOCAL 
--- 
opt_encoding: 
sconst 
DEFAULT 

--- 
non_reserved_word_or_sconst: 
non_reserved_word 
sconst 
--- 
variable_reset_stmt: 
RESET reset_rest 
--- 
reset_rest: 
generic_reset 
TIME ZONE 
TRANSACTION ISOLATION LEVEL 
SESSION AUTHORIZATION 
--- 
generic_reset: 
var_name 
ALL 
--- 
set_reset_clause: 
SET set_rest 
variable_reset_stmt 
--- 
function_set_reset_clause: 
SET set_rest_more 
variable_reset_stmt 
--- 
variable_show_stmt: 
SHOW var_name 
SHOW TIME ZONE 
SHOW TRANSACTION ISOLATION LEVEL 
SHOW SESSION AUTHORIZATION 
SHOW ALL 
--- 
constraints_set_stmt: 
SET CONSTRAINTS constraints_set_list constraints_set_mode 
--- 
constraints_set_list: 
ALL 
qualified_name_list 
--- 
constraints_set_mode: 
DEFERRED 
IMMEDIATE 
--- 
check_point_stmt: 
CHECKPOINT 
--- 
discard_stmt: 
DISCARD ALL 
DISCARD TEMP 
DISCARD TEMPORARY 
DISCARD PLANS 
DISCARD SEQUENCES 
--- 
alter_table_stmt: 
ALTER TABLE relation_expr alter_table_cmds 
ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds 
ALTER TABLE relation_expr partition_cmd 
ALTER TABLE IF_P EXISTS relation_expr partition_cmd 
ALTER TABLE ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait 
ALTER TABLE ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait 
ALTER INDEX qualified_name alter_table_cmds 
ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds 
ALTER INDEX qualified_name index_partition_cmd 
ALTER INDEX ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait 
ALTER INDEX ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait 
ALTER SEQUENCE qualified_name alter_table_cmds 
ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds 
ALTER VIEW qualified_name alter_table_cmds 
ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds 
ALTER MATERIALIZED VIEW qualified_name alter_table_cmds 
ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name alter_table_cmds 
ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait 
ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait 
--- 
alter_table_cmds: 
alter_table_cmd 
alter_table_cmds ',' alter_table_cmd 
--- 
partition_cmd: 
ATTACH PARTITION qualified_name partition_bound_spec 
DETACH PARTITION qualified_name 
--- 
index_partition_cmd: 
ATTACH PARTITION qualified_name 
--- 
alter_table_cmd: 
ADD_P column_def 
ADD_P IF_P NOT EXISTS column_def 
ADD_P COLUMN column_def 
ADD_P COLUMN IF_P NOT EXISTS column_def 
ALTER opt_column col_id alter_column_default 
ALTER opt_column col_id DROP NOT NULL_P 
ALTER opt_column col_id SET NOT NULL_P 
ALTER opt_column col_id SET STATISTICS signed_iconst 
ALTER opt_column iconst SET STATISTICS signed_iconst 
ALTER opt_column col_id SET reloptions 
ALTER opt_column col_id RESET reloptions 
ALTER opt_column col_id SET STORAGE col_id 
ALTER opt_column col_id ADD_P GENERATED generated_when AS IDENTITY_P opt_parenthesized_seq_opt_list 
ALTER opt_column col_id alter_identity_column_option_list 
ALTER opt_column col_id DROP IDENTITY_P 
ALTER opt_column col_id DROP IDENTITY_P IF_P EXISTS 
DROP opt_column IF_P EXISTS col_id opt_drop_behavior 
DROP opt_column col_id opt_drop_behavior 
ALTER opt_column col_id opt_set_data TYPE_P typename opt_collate_clause alter_using 
ALTER opt_column col_id alter_generic_options 
ADD_P table_constraint 
ALTER CONSTRAINT name constraint_attribute_spec 
VALIDATE CONSTRAINT name 
DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior 
DROP CONSTRAINT name opt_drop_behavior 
SET WITHOUT OIDS 
CLUSTER ON name 
SET WITHOUT CLUSTER 
SET LOGGED 
SET UNLOGGED 
ENABLE_P TRIGGER name 
ENABLE_P ALWAYS TRIGGER name 
ENABLE_P REPLICA TRIGGER name 
ENABLE_P TRIGGER ALL 
ENABLE_P TRIGGER USER 
DISABLE_P TRIGGER name 
DISABLE_P TRIGGER ALL 
DISABLE_P TRIGGER USER 
ENABLE_P RULE name 
ENABLE_P ALWAYS RULE name 
ENABLE_P REPLICA RULE name 
DISABLE_P RULE name 
INHERIT qualified_name 
NO INHERIT qualified_name 
OF any_name 
NOT OF 
OWNER TO role_spec 
SET TABLESPACE name 
SET reloptions 
RESET reloptions 
REPLICA IDENTITY_P replica_identity 
ENABLE_P ROW LEVEL SECURITY 
DISABLE_P ROW LEVEL SECURITY 
FORCE ROW LEVEL SECURITY 
NO FORCE ROW LEVEL SECURITY 
alter_generic_options 
--- 
alter_column_default: 
SET DEFAULT a_expr 
DROP DEFAULT 
--- 
opt_drop_behavior: 
CASCADE 
RESTRICT 

--- 
opt_collate_clause: 
COLLATE any_name 

--- 
alter_using: 
USING a_expr 

--- 
replica_identity: 
NOTHING 
FULL 
DEFAULT 
USING INDEX name 
--- 
reloptions: 
'(' reloption_list ')' 
--- 
opt_reloptions: 
WITH reloptions 

--- 
reloption_list: 
reloption_elem 
reloption_list ',' reloption_elem 
--- 
reloption_elem: 
col_label '=' def_arg 
col_label 
col_label '.' col_label '=' def_arg 
col_label '.' col_label 
--- 
alter_identity_column_option_list: 
alter_identity_column_option 
alter_identity_column_option_list alter_identity_column_option 
--- 
alter_identity_column_option: 
RESTART 
RESTART opt_with numeric_only 
SET seq_opt_elem 
SET GENERATED generated_when 
--- 
partition_bound_spec: 
FOR VALUES WITH '(' hash_partbound ')' 
FOR VALUES IN_P '(' expr_list ')' 
FOR VALUES FROM '(' expr_list ')' TO '(' expr_list ')' 
DEFAULT 
--- 
hash_partbound_elem: 
non_reserved_word iconst 
--- 
hash_partbound: 
hash_partbound_elem 
hash_partbound ',' hash_partbound_elem 
--- 
alter_composite_type_stmt: 
ALTER TYPE_P any_name alter_type_cmds 
--- 
alter_type_cmds: 
alter_type_cmd 
alter_type_cmds ',' alter_type_cmd 
--- 
alter_type_cmd: 
ADD_P ATTRIBUTE table_func_element opt_drop_behavior 
DROP ATTRIBUTE IF_P EXISTS col_id opt_drop_behavior 
DROP ATTRIBUTE col_id opt_drop_behavior 
ALTER ATTRIBUTE col_id opt_set_data TYPE_P typename opt_collate_clause opt_drop_behavior 
--- 
close_portal_stmt: 
CLOSE cursor_name 
CLOSE ALL 
--- 
copy_stmt: 
COPY opt_binary qualified_name opt_column_list copy_from opt_program copy_file_name copy_delimiter opt_with copy_options where_clause 
COPY '(' preparable_stmt ')' TO opt_program copy_file_name opt_with copy_options 
--- 
copy_from: 
FROM 
TO 
--- 
opt_program: 
PROGRAM 

--- 
copy_file_name: 
sconst 
STDIN 
STDOUT 
--- 
copy_options: 
copy_opt_list 
'(' copy_generic_opt_list ')' 
--- 
copy_opt_list: 
copy_opt_list copy_opt_item 

--- 
copy_opt_item: 
BINARY 
FREEZE 
DELIMITER opt_as sconst 
NULL_P opt_as sconst 
CSV 
HEADER_P 
QUOTE opt_as sconst 
ESCAPE opt_as sconst 
FORCE QUOTE column_list 
FORCE QUOTE '*' 
FORCE NOT NULL_P column_list 
FORCE NULL_P column_list 
ENCODING sconst 
--- 
opt_binary: 
BINARY 

--- 
copy_delimiter: 
opt_using DELIMITERS sconst 

--- 
opt_using: 
USING 

--- 
copy_generic_opt_list: 
copy_generic_opt_elem 
copy_generic_opt_list ',' copy_generic_opt_elem 
--- 
copy_generic_opt_elem: 
col_label copy_generic_opt_arg 
--- 
copy_generic_opt_arg: 
opt_boolean_or_string 
numeric_only 
'*' 
'(' copy_generic_opt_arg_list ')' 

--- 
copy_generic_opt_arg_list: 
copy_generic_opt_arg_list_item 
copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item 
--- 
copy_generic_opt_arg_list_item: 
opt_boolean_or_string 
--- 
create_stmt: 
CREATE opt_temp TABLE qualified_name '(' opt_table_element_list ')' opt_inherit opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
CREATE opt_temp TABLE IF_P NOT EXISTS qualified_name '(' opt_table_element_list ')' opt_inherit opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
CREATE opt_temp TABLE qualified_name OF any_name opt_typed_table_element_list opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
CREATE opt_temp TABLE IF_P NOT EXISTS qualified_name OF any_name opt_typed_table_element_list opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
CREATE opt_temp TABLE qualified_name PARTITION OF qualified_name opt_typed_table_element_list partition_bound_spec opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
CREATE opt_temp TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name opt_typed_table_element_list partition_bound_spec opt_partition_spec table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
--- 
opt_temp: 
TEMPORARY 
TEMP 
LOCAL TEMPORARY 
LOCAL TEMP 
GLOBAL TEMPORARY 
GLOBAL TEMP 
UNLOGGED 

--- 
opt_table_element_list: 
table_element_list 

--- 
opt_typed_table_element_list: 
'(' typed_table_element_list ')' 

--- 
table_element_list: 
table_element 
table_element_list ',' table_element 
--- 
typed_table_element_list: 
typed_table_element 
typed_table_element_list ',' typed_table_element 
--- 
table_element: 
column_def 
table_like_clause 
table_constraint 
--- 
typed_table_element: 
column_options 
table_constraint 
--- 
column_def: 
col_id typename create_generic_options col_qual_list 
--- 
column_options: 
col_id col_qual_list 
col_id WITH OPTIONS col_qual_list 
--- 
col_qual_list: 
col_qual_list col_constraint 

--- 
col_constraint: 
CONSTRAINT name col_constraint_elem 
col_constraint_elem 
constraint_attr 
COLLATE any_name 
--- 
col_constraint_elem: 
NOT NULL_P 
NULL_P 
UNIQUE opt_definition opt_cons_table_space 
PRIMARY KEY opt_definition opt_cons_table_space 
CHECK '(' a_expr ')' opt_no_inherit 
DEFAULT b_expr 
GENERATED generated_when AS IDENTITY_P opt_parenthesized_seq_opt_list 
GENERATED generated_when AS '(' a_expr ')' STORED 
REFERENCES qualified_name opt_column_list key_match key_actions 
--- 
generated_when: 
ALWAYS 
BY DEFAULT 
--- 
constraint_attr: 
DEFERRABLE 
NOT DEFERRABLE 
INITIALLY DEFERRED 
INITIALLY IMMEDIATE 
--- 
table_like_clause: 
LIKE qualified_name table_like_option_list 
--- 
table_like_option_list: 
table_like_option_list INCLUDING table_like_option 
table_like_option_list EXCLUDING table_like_option 

--- 
table_like_option: 
COMMENTS 
CONSTRAINTS 
DEFAULTS 
IDENTITY_P 
GENERATED 
INDEXES 
STATISTICS 
STORAGE 
ALL 
--- 
table_constraint: 
CONSTRAINT name constraint_elem 
constraint_elem 
--- 
constraint_elem: 
CHECK '(' a_expr ')' constraint_attribute_spec 
UNIQUE '(' column_list ')' opt_c_include opt_definition opt_cons_table_space constraint_attribute_spec 
UNIQUE existing_index constraint_attribute_spec 
PRIMARY KEY '(' column_list ')' opt_c_include opt_definition opt_cons_table_space constraint_attribute_spec 
PRIMARY KEY existing_index constraint_attribute_spec 
EXCLUDE access_method_clause '(' exclusion_constraint_list ')' opt_c_include opt_definition opt_cons_table_space exclusion_where_clause constraint_attribute_spec 
FOREIGN KEY '(' column_list ')' REFERENCES qualified_name opt_column_list key_match key_actions constraint_attribute_spec 
--- 
opt_no_inherit: 
NO INHERIT 

--- 
opt_column_list: 
'(' column_list ')' 

--- 
column_list: 
column_elem 
column_list ',' column_elem 
--- 
column_elem: 
col_id 
--- 
opt_c_include: 
INCLUDE '(' column_list ')' 

--- 
key_match: 
MATCH FULL 
MATCH PARTIAL 
MATCH SIMPLE 

--- 
exclusion_constraint_list: 
exclusion_constraint_elem 
exclusion_constraint_list ',' exclusion_constraint_elem 
--- 
exclusion_constraint_elem: 
index_elem WITH any_operator 
index_elem WITH OPERATOR '(' any_operator ')' 
--- 
exclusion_where_clause: 
WHERE '(' a_expr ')' 

--- 
key_actions: 
key_update 
key_delete 
key_update key_delete 
key_delete key_update 

--- 
key_update: 
ON UPDATE key_action 
--- 
key_delete: 
ON DELETE_P key_action 
--- 
key_action: 
NO ACTION 
RESTRICT 
CASCADE 
SET NULL_P 
SET DEFAULT 
--- 
opt_inherit: 
INHERITS '(' qualified_name_list ')' 

--- 
opt_partition_spec: 
partition_spec 

--- 
partition_spec: 
PARTITION BY part_strategy '(' part_params ')' 
--- 
part_strategy: 
identifier 
--- 
part_params: 
part_elem 
part_params ',' part_elem 
--- 
part_elem: 
col_id opt_collate opt_class 
func_expr_windowless opt_collate opt_class 
'(' a_expr ')' opt_collate opt_class 
--- 
table_access_method_clause: 
USING access_method 

--- 
opt_with_conflicta: 
WITH reloptions 
WITHOUT OIDS 

--- 
on_commit_option: 
ON COMMIT DROP 
ON COMMIT DELETE_P ROWS 
ON COMMIT PRESERVE ROWS 

--- 
opt_table_space: 
TABLESPACE name 

--- 
opt_cons_table_space: 
USING INDEX TABLESPACE name 

--- 
existing_index: 
USING INDEX index_name 
--- 
create_stats_stmt: 
CREATE STATISTICS any_name opt_name_list ON expr_list FROM from_list 
CREATE STATISTICS IF_P NOT EXISTS any_name opt_name_list ON expr_list FROM from_list 
--- 
alter_stats_stmt: 
ALTER STATISTICS any_name SET STATISTICS signed_iconst 
ALTER STATISTICS IF_P EXISTS any_name SET STATISTICS signed_iconst 
--- 
create_as_stmt: 
CREATE opt_temp TABLE create_as_target AS select_stmt opt_with_data 
CREATE opt_temp TABLE IF_P NOT EXISTS create_as_target AS select_stmt opt_with_data 
--- 
create_as_target: 
qualified_name opt_column_list table_access_method_clause opt_with_conflicta on_commit_option opt_table_space 
--- 
opt_with_data: 
WITH DATA_P 
WITH NO DATA_P 

--- 
create_mat_view_stmt: 
CREATE opt_no_log MATERIALIZED VIEW create_mv_target AS select_stmt opt_with_data 
CREATE opt_no_log MATERIALIZED VIEW IF_P NOT EXISTS create_mv_target AS select_stmt opt_with_data 
--- 
create_mv_target: 
qualified_name opt_column_list table_access_method_clause opt_reloptions opt_table_space 
--- 
opt_no_log: 
UNLOGGED 

--- 
refresh_mat_view_stmt: 
REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data 
--- 
create_seq_stmt: 
CREATE opt_temp SEQUENCE qualified_name opt_seq_opt_list 
CREATE opt_temp SEQUENCE IF_P NOT EXISTS qualified_name opt_seq_opt_list 
--- 
alter_seq_stmt: 
ALTER SEQUENCE qualified_name seq_opt_list 
ALTER SEQUENCE IF_P EXISTS qualified_name seq_opt_list 
--- 
opt_seq_opt_list: 
seq_opt_list 

--- 
opt_parenthesized_seq_opt_list: 
'(' seq_opt_list ')' 

--- 
seq_opt_list: 
seq_opt_elem 
seq_opt_list seq_opt_elem 
--- 
seq_opt_elem: 
AS simple_typename 
CACHE numeric_only 
CYCLE 
NO CYCLE 
INCREMENT opt_by numeric_only 
MAXVALUE numeric_only 
MINVALUE numeric_only 
NO MAXVALUE 
NO MINVALUE 
OWNED BY any_name 
SEQUENCE NAME_P any_name 
START opt_with numeric_only 
RESTART 
RESTART opt_with numeric_only 
--- 
opt_by: 
BY 

--- 
numeric_only: 
fconst 
UMINUS fconst 
UPLUS fconst 
signed_iconst 
--- 
numeric_only_list: 
numeric_only 
numeric_only_list ',' numeric_only 
--- 
create_plang_stmt: 
CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE non_reserved_word_or_sconst 
CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE non_reserved_word_or_sconst HANDLER handler_name opt_inline_handler opt_validator 
--- 
opt_trusted: 
TRUSTED 

--- 
handler_name: 
name 
name attrs 
--- 
opt_inline_handler: 
INLINE_P handler_name 

--- 
validator_clause: 
VALIDATOR handler_name 
NO VALIDATOR 
--- 
opt_validator: 
validator_clause 

--- 
drop_plang_stmt: 
DROP opt_procedural LANGUAGE non_reserved_word_or_sconst opt_drop_behavior 
DROP opt_procedural LANGUAGE IF_P EXISTS non_reserved_word_or_sconst opt_drop_behavior 
--- 
opt_procedural: 
PROCEDURAL 

--- 
create_table_space_stmt: 
CREATE TABLESPACE name opt_table_space_owner LOCATION sconst opt_reloptions 
--- 
opt_table_space_owner: 
OWNER role_spec 

--- 
drop_table_space_stmt: 
DROP TABLESPACE name 
DROP TABLESPACE IF_P EXISTS name 
--- 
create_extension_stmt: 
CREATE EXTENSION name opt_with create_extension_opt_list 
CREATE EXTENSION IF_P NOT EXISTS name opt_with create_extension_opt_list 
--- 
create_extension_opt_list: 
create_extension_opt_list create_extension_opt_item 

--- 
create_extension_opt_item: 
SCHEMA name 
VERSION_P non_reserved_word_or_sconst 
FROM non_reserved_word_or_sconst 
CASCADE 
--- 
alter_extension_stmt: 
ALTER EXTENSION name UPDATE alter_extension_opt_list 
--- 
alter_extension_opt_list: 
alter_extension_opt_list alter_extension_opt_item 

--- 
alter_extension_opt_item: 
TO non_reserved_word_or_sconst 
--- 
alter_extension_contents_stmt: 
ALTER EXTENSION name add_drop ACCESS METHOD name 
ALTER EXTENSION name add_drop AGGREGATE aggregate_with_argtypes 
ALTER EXTENSION name add_drop CAST '(' typename AS typename ')' 
ALTER EXTENSION name add_drop COLLATION any_name 
ALTER EXTENSION name add_drop CONVERSION_P any_name 
ALTER EXTENSION name add_drop DOMAIN_P typename 
ALTER EXTENSION name add_drop FUNCTION function_with_argtypes 
ALTER EXTENSION name add_drop opt_procedural LANGUAGE name 
ALTER EXTENSION name add_drop OPERATOR operator_with_argtypes 
ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING access_method 
ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING access_method 
ALTER EXTENSION name add_drop PROCEDURE function_with_argtypes 
ALTER EXTENSION name add_drop ROUTINE function_with_argtypes 
ALTER EXTENSION name add_drop SCHEMA name 
ALTER EXTENSION name add_drop EVENT TRIGGER name 
ALTER EXTENSION name add_drop TABLE any_name 
ALTER EXTENSION name add_drop TEXT_P SEARCH PARSER any_name 
ALTER EXTENSION name add_drop TEXT_P SEARCH DICTIONARY any_name 
ALTER EXTENSION name add_drop TEXT_P SEARCH TEMPLATE any_name 
ALTER EXTENSION name add_drop TEXT_P SEARCH CONFIGURATION any_name 
ALTER EXTENSION name add_drop SEQUENCE any_name 
ALTER EXTENSION name add_drop VIEW any_name 
ALTER EXTENSION name add_drop MATERIALIZED VIEW any_name 
ALTER EXTENSION name add_drop FOREIGN TABLE any_name 
ALTER EXTENSION name add_drop FOREIGN DATA_P WRAPPER name 
ALTER EXTENSION name add_drop SERVER name 
ALTER EXTENSION name add_drop TRANSFORM FOR typename LANGUAGE name 
ALTER EXTENSION name add_drop TYPE_P typename 
--- 
create_fdw_stmt: 
CREATE FOREIGN DATA_P WRAPPER name opt_fdw_options create_generic_options 
--- 
fdw_option: 
HANDLER handler_name 
NO HANDLER 
VALIDATOR handler_name 
NO VALIDATOR 
--- 
fdw_options: 
fdw_option 
fdw_options fdw_option 
--- 
opt_fdw_options: 
fdw_options 

--- 
alter_fdw_stmt: 
ALTER FOREIGN DATA_P WRAPPER name opt_fdw_options alter_generic_options 
ALTER FOREIGN DATA_P WRAPPER name fdw_options 
--- 
create_generic_options: 
OPTIONS '(' generic_option_list ')' 

--- 
generic_option_list: 
generic_option_elem 
generic_option_list ',' generic_option_elem 
--- 
alter_generic_options: 
OPTIONS '(' alter_generic_option_list ')' 
--- 
alter_generic_option_list: 
alter_generic_option_elem 
alter_generic_option_list ',' alter_generic_option_elem 
--- 
alter_generic_option_elem: 
generic_option_elem 
SET generic_option_elem 
ADD_P generic_option_elem 
DROP generic_option_name 
--- 
generic_option_elem: 
generic_option_name generic_option_arg 
--- 
generic_option_name: 
col_label 
--- 
generic_option_arg: 
sconst 
--- 
create_foreign_server_stmt: 
CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options 
CREATE SERVER IF_P NOT EXISTS name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options 
--- 
opt_type: 
TYPE_P sconst 

--- 
foreign_server_version: 
VERSION_P sconst 
VERSION_P NULL_P 
--- 
opt_foreign_server_version: 
foreign_server_version 

--- 
alter_foreign_server_stmt: 
ALTER SERVER name foreign_server_version alter_generic_options 
ALTER SERVER name foreign_server_version 
ALTER SERVER name alter_generic_options 
--- 
create_foreign_table_stmt: 
CREATE FOREIGN TABLE qualified_name '(' opt_table_element_list ')' opt_inherit SERVER name create_generic_options 
CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name '(' opt_table_element_list ')' opt_inherit SERVER name create_generic_options 
CREATE FOREIGN TABLE qualified_name PARTITION OF qualified_name opt_typed_table_element_list partition_bound_spec SERVER name create_generic_options 
CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name opt_typed_table_element_list partition_bound_spec SERVER name create_generic_options 
--- 
alter_foreign_table_stmt: 
ALTER FOREIGN TABLE relation_expr alter_table_cmds 
ALTER FOREIGN TABLE IF_P EXISTS relation_expr alter_table_cmds 
--- 
import_foreign_schema_stmt: 
IMPORT_P FOREIGN SCHEMA name import_qualification FROM SERVER name INTO name create_generic_options 
--- 
import_qualification_type: 
LIMIT TO 
EXCEPT 
--- 
import_qualification: 
import_qualification_type '(' relation_expr_list ')' 

--- 
create_user_mapping_stmt: 
CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options 
CREATE USER MAPPING IF_P NOT EXISTS FOR auth_ident SERVER name create_generic_options 
--- 
auth_ident: 
role_spec 
USER 
--- 
drop_user_mapping_stmt: 
DROP USER MAPPING FOR auth_ident SERVER name 
DROP USER MAPPING IF_P EXISTS FOR auth_ident SERVER name 
--- 
alter_user_mapping_stmt: 
ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options 
--- 
create_policy_stmt: 
CREATE POLICY name ON qualified_name row_security_default_permissive row_security_default_for_cmd row_security_default_to_role row_security_optional_expr row_security_optional_with_check 
--- 
alter_policy_stmt: 
ALTER POLICY name ON qualified_name row_security_optional_to_role row_security_optional_expr row_security_optional_with_check 
--- 
row_security_optional_expr: 
USING '(' a_expr ')' 

--- 
row_security_optional_with_check: 
WITH CHECK '(' a_expr ')' 

--- 
row_security_default_to_role: 
TO role_list 

--- 
row_security_optional_to_role: 
TO role_list 

--- 
row_security_default_permissive: 
AS identifier 

--- 
row_security_default_for_cmd: 
FOR row_security_cmd 

--- 
row_security_cmd: 
ALL 
SELECT 
INSERT 
UPDATE 
DELETE_P 
--- 
create_am_stmt: 
CREATE ACCESS METHOD name TYPE_P am_type HANDLER handler_name 
--- 
am_type: 
INDEX 
TABLE 
--- 
create_trig_stmt: 
CREATE TRIGGER name trigger_action_time trigger_events ON qualified_name trigger_referencing trigger_for_spec trigger_when EXECUTE f_un_ct_io_n_or_p_ro_ce_du_re func_name '(' trigger_func_args ')' 
CREATE CONSTRAINT TRIGGER name AFTER trigger_events ON qualified_name opt_constr_from_table constraint_attribute_spec FOR EACH ROW trigger_when EXECUTE f_un_ct_io_n_or_p_ro_ce_du_re func_name '(' trigger_func_args ')' 
--- 
trigger_action_time: 
BEFORE 
AFTER 
INSTEAD OF 
--- 
trigger_events: 
trigger_one_event 
trigger_events OR trigger_one_event 
--- 
trigger_one_event: 
INSERT 
DELETE_P 
UPDATE 
UPDATE OF column_list 
TRUNCATE 
--- 
trigger_referencing: 
REFERENCING trigger_transitions 

--- 
trigger_transitions: 
trigger_transition 
trigger_transitions trigger_transition 
--- 
trigger_transition: 
transition_old_or_new transition_row_or_table opt_as transition_rel_name 
--- 
transition_old_or_new: 
NEW 
OLD 
--- 
transition_row_or_table: 
TABLE 
ROW 
--- 
transition_rel_name: 
col_id 
--- 
trigger_for_spec: 
FOR trigger_for_opt_each trigger_for_type 

--- 
trigger_for_opt_each: 
EACH 

--- 
trigger_for_type: 
ROW 
STATEMENT 
--- 
trigger_when: 
WHEN '(' a_expr ')' 

--- 
f_un_ct_io_n_or_p_ro_ce_du_re: 
FUNCTION 
PROCEDURE 
--- 
trigger_func_args: 
trigger_func_arg 
trigger_func_args ',' trigger_func_arg 

--- 
trigger_func_arg: 
iconst 
fconst 
sconst 
col_label 
--- 
opt_constr_from_table: 
FROM qualified_name 

--- 
constraint_attribute_spec: 

constraint_attribute_spec constraint_attribute_elem 
--- 
constraint_attribute_elem: 
NOT DEFERRABLE 
DEFERRABLE 
INITIALLY IMMEDIATE 
INITIALLY DEFERRED 
NOT VALID 
NO INHERIT 
--- 
create_event_trig_stmt: 
CREATE EVENT TRIGGER name ON col_label EXECUTE f_un_ct_io_n_or_p_ro_ce_du_re func_name '(' ')' 
CREATE EVENT TRIGGER name ON col_label WHEN event_trigger_when_list EXECUTE f_un_ct_io_n_or_p_ro_ce_du_re func_name '(' ')' 
--- 
event_trigger_when_list: 
event_trigger_when_item 
event_trigger_when_list AND event_trigger_when_item 
--- 
event_trigger_when_item: 
col_id IN_P '(' event_trigger_value_list ')' 
--- 
event_trigger_value_list: 
sconst 
event_trigger_value_list ',' sconst 
--- 
alter_event_trig_stmt: 
ALTER EVENT TRIGGER name enable_trigger 
--- 
enable_trigger: 
ENABLE_P 
ENABLE_P REPLICA 
ENABLE_P ALWAYS 
DISABLE_P 
--- 
create_assertion_stmt: 
CREATE ASSERTION any_name CHECK '(' a_expr ')' constraint_attribute_spec 
--- 
define_stmt: 
CREATE opt_or_replace AGGREGATE func_name aggr_args definition 
CREATE opt_or_replace AGGREGATE func_name old_aggr_definition 
CREATE OPERATOR any_operator definition 
CREATE TYPE_P any_name definition 
CREATE TYPE_P any_name 
CREATE TYPE_P any_name AS '(' opt_table_func_element_list ')' 
CREATE TYPE_P any_name AS ENUM_P '(' opt_enum_val_list ')' 
CREATE TYPE_P any_name AS RANGE definition 
CREATE TEXT_P SEARCH PARSER any_name definition 
CREATE TEXT_P SEARCH DICTIONARY any_name definition 
CREATE TEXT_P SEARCH TEMPLATE any_name definition 
CREATE TEXT_P SEARCH CONFIGURATION any_name definition 
CREATE COLLATION any_name definition 
CREATE COLLATION IF_P NOT EXISTS any_name definition 
CREATE COLLATION any_name FROM any_name 
CREATE COLLATION IF_P NOT EXISTS any_name FROM any_name 
--- 
definition: 
'(' def_list ')' 
--- 
def_list: 
def_elem 
def_list ',' def_elem 
--- 
def_elem: 
col_label '=' def_arg 
col_label 
--- 
def_arg: 
func_type 
qual_all_op 
numeric_only 
sconst 
NONE 
--- 
old_aggr_definition: 
'(' old_aggr_list ')' 
--- 
old_aggr_list: 
old_aggr_elem 
old_aggr_list ',' old_aggr_elem 
--- 
old_aggr_elem: 
identifier '=' def_arg 
--- 
opt_enum_val_list: 
enum_val_list 

--- 
enum_val_list: 
sconst 
enum_val_list ',' sconst 
--- 
alter_enum_stmt: 
ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists sconst 
ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists sconst BEFORE sconst 
ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists sconst AFTER sconst 
ALTER TYPE_P any_name RENAME VALUE_P sconst TO sconst 
--- 
opt_if_not_exists: 
IF_P NOT EXISTS 

--- 
create_op_class_stmt: 
CREATE OPERATOR CLASS any_name opt_default FOR TYPE_P typename USING access_method opt_opfamily AS opclass_item_list 
--- 
opclass_item_list: 
opclass_item 
opclass_item_list ',' opclass_item 
--- 
opclass_item: 
OPERATOR iconst any_operator opclass_purpose opt_recheck 
OPERATOR iconst operator_with_argtypes opclass_purpose opt_recheck 
FUNCTION iconst function_with_argtypes 
FUNCTION iconst '(' type_list ')' function_with_argtypes 
STORAGE typename 
--- 
opt_default: 
DEFAULT 

--- 
opt_opfamily: 
FAMILY any_name 

--- 
opclass_purpose: 
FOR SEARCH 
FOR ORDER BY any_name 

--- 
opt_recheck: 
RECHECK 

--- 
create_op_family_stmt: 
CREATE OPERATOR FAMILY any_name USING access_method 
--- 
alter_op_family_stmt: 
ALTER OPERATOR FAMILY any_name USING access_method ADD_P opclass_item_list 
ALTER OPERATOR FAMILY any_name USING access_method DROP opclass_drop_list 
--- 
opclass_drop_list: 
opclass_drop 
opclass_drop_list ',' opclass_drop 
--- 
opclass_drop: 
OPERATOR iconst '(' type_list ')' 
FUNCTION iconst '(' type_list ')' 
--- 
drop_op_class_stmt: 
DROP OPERATOR CLASS any_name USING access_method opt_drop_behavior 
DROP OPERATOR CLASS IF_P EXISTS any_name USING access_method opt_drop_behavior 
--- 
drop_op_family_stmt: 
DROP OPERATOR FAMILY any_name USING access_method opt_drop_behavior 
DROP OPERATOR FAMILY IF_P EXISTS any_name USING access_method opt_drop_behavior 
--- 
drop_owned_stmt: 
DROP OWNED BY role_list opt_drop_behavior 
--- 
reassign_owned_stmt: 
REASSIGN OWNED BY role_list TO role_spec 
--- 
drop_stmt: 
DROP drop_type_any_name IF_P EXISTS any_name_list opt_drop_behavior 
DROP drop_type_any_name any_name_list opt_drop_behavior 
DROP drop_type_name IF_P EXISTS name_list opt_drop_behavior 
DROP drop_type_name name_list opt_drop_behavior 
DROP drop_type_name_on_any_name name ON any_name opt_drop_behavior 
DROP drop_type_name_on_any_name IF_P EXISTS name ON any_name opt_drop_behavior 
DROP TYPE_P type_name_list opt_drop_behavior 
DROP TYPE_P IF_P EXISTS type_name_list opt_drop_behavior 
DROP DOMAIN_P type_name_list opt_drop_behavior 
DROP DOMAIN_P IF_P EXISTS type_name_list opt_drop_behavior 
DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior 
DROP INDEX CONCURRENTLY IF_P EXISTS any_name_list opt_drop_behavior 
--- 
drop_type_any_name: 
TABLE 
SEQUENCE 
VIEW 
MATERIALIZED VIEW 
INDEX 
FOREIGN TABLE 
COLLATION 
CONVERSION_P 
STATISTICS 
TEXT_P SEARCH PARSER 
TEXT_P SEARCH DICTIONARY 
TEXT_P SEARCH TEMPLATE 
TEXT_P SEARCH CONFIGURATION 
--- 
drop_type_name: 
ACCESS METHOD 
EVENT TRIGGER 
EXTENSION 
FOREIGN DATA_P WRAPPER 
PUBLICATION 
SCHEMA 
SERVER 
--- 
drop_type_name_on_any_name: 
POLICY 
RULE 
TRIGGER 
--- 
any_name_list: 
any_name 
any_name_list ',' any_name 
--- 
any_name: 
col_id 
col_id attrs 
--- 
attrs: 
'.' attr_name 
attrs '.' attr_name 
--- 
type_name_list: 
typename 
type_name_list ',' typename 
--- 
truncate_stmt: 
TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior 
--- 
opt_restart_seqs: 
CONTINUE_P IDENTITY_P 
RESTART IDENTITY_P 

--- 
comment_stmt: 
COMMENT ON comment_type_any_name any_name IS comment_text 
COMMENT ON comment_type_name name IS comment_text 
COMMENT ON TYPE_P typename IS comment_text 
COMMENT ON DOMAIN_P typename IS comment_text 
COMMENT ON AGGREGATE aggregate_with_argtypes IS comment_text 
COMMENT ON FUNCTION function_with_argtypes IS comment_text 
COMMENT ON OPERATOR operator_with_argtypes IS comment_text 
COMMENT ON CONSTRAINT name ON any_name IS comment_text 
COMMENT ON CONSTRAINT name ON DOMAIN_P any_name IS comment_text 
COMMENT ON POLICY name ON any_name IS comment_text 
COMMENT ON PROCEDURE function_with_argtypes IS comment_text 
COMMENT ON ROUTINE function_with_argtypes IS comment_text 
COMMENT ON RULE name ON any_name IS comment_text 
COMMENT ON TRANSFORM FOR typename LANGUAGE name IS comment_text 
COMMENT ON TRIGGER name ON any_name IS comment_text 
COMMENT ON OPERATOR CLASS any_name USING access_method IS comment_text 
COMMENT ON OPERATOR FAMILY any_name USING access_method IS comment_text 
COMMENT ON LARGE_P OBJECT_P numeric_only IS comment_text 
COMMENT ON CAST '(' typename AS typename ')' IS comment_text 
--- 
comment_type_any_name: 
COLUMN 
INDEX 
SEQUENCE 
STATISTICS 
TABLE 
VIEW 
MATERIALIZED VIEW 
COLLATION 
CONVERSION_P 
FOREIGN TABLE 
TEXT_P SEARCH CONFIGURATION 
TEXT_P SEARCH DICTIONARY 
TEXT_P SEARCH PARSER 
TEXT_P SEARCH TEMPLATE 
--- 
comment_type_name: 
ACCESS METHOD 
DATABASE 
EVENT TRIGGER 
EXTENSION 
FOREIGN DATA_P WRAPPER 
opt_procedural LANGUAGE 
PUBLICATION 
ROLE 
SCHEMA 
SERVER 
SUBSCRIPTION 
TABLESPACE 
--- 
comment_text: 
sconst 
NULL_P 
--- 
sec_label_stmt: 
SECURITY LABEL opt_provider ON security_label_type_any_name any_name IS security_label 
SECURITY LABEL opt_provider ON security_label_type_name name IS security_label 
SECURITY LABEL opt_provider ON TYPE_P typename IS security_label 
SECURITY LABEL opt_provider ON DOMAIN_P typename IS security_label 
SECURITY LABEL opt_provider ON AGGREGATE aggregate_with_argtypes IS security_label 
SECURITY LABEL opt_provider ON FUNCTION function_with_argtypes IS security_label 
SECURITY LABEL opt_provider ON LARGE_P OBJECT_P numeric_only IS security_label 
SECURITY LABEL opt_provider ON PROCEDURE function_with_argtypes IS security_label 
SECURITY LABEL opt_provider ON ROUTINE function_with_argtypes IS security_label 
--- 
opt_provider: 
FOR non_reserved_word_or_sconst 

--- 
security_label_type_any_name: 
COLUMN 
FOREIGN TABLE 
SEQUENCE 
TABLE 
VIEW 
MATERIALIZED VIEW 
--- 
security_label_type_name: 
DATABASE 
EVENT TRIGGER 
opt_procedural LANGUAGE 
PUBLICATION 
ROLE 
SCHEMA 
SUBSCRIPTION 
TABLESPACE 
--- 
security_label: 
sconst 
NULL_P 
--- 
fetch_stmt: 
FETCH fetch_args 
MOVE fetch_args 
--- 
fetch_args: 
cursor_name 
from_in cursor_name 
NEXT opt_from_in cursor_name 
PRIOR opt_from_in cursor_name 
FIRST_P opt_from_in cursor_name 
LAST_P opt_from_in cursor_name 
ABSOLUTE_P signed_iconst opt_from_in cursor_name 
RELATIVE_P signed_iconst opt_from_in cursor_name 
signed_iconst opt_from_in cursor_name 
ALL opt_from_in cursor_name 
FORWARD opt_from_in cursor_name 
FORWARD signed_iconst opt_from_in cursor_name 
FORWARD ALL opt_from_in cursor_name 
BACKWARD opt_from_in cursor_name 
BACKWARD signed_iconst opt_from_in cursor_name 
BACKWARD ALL opt_from_in cursor_name 
--- 
from_in: 
FROM 
IN_P 
--- 
opt_from_in: 
from_in 

--- 
grant_stmt: 
GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option 
--- 
revoke_stmt: 
REVOKE privileges ON privilege_target FROM grantee_list opt_drop_behavior 
REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_drop_behavior 
--- 
privileges: 
privilege_list 
ALL 
ALL PRIVILEGES 
ALL '(' column_list ')' 
ALL PRIVILEGES '(' column_list ')' 
--- 
privilege_list: 
privilege 
privilege_list ',' privilege 
--- 
privilege: 
SELECT opt_column_list 
REFERENCES opt_column_list 
CREATE opt_column_list 
col_id opt_column_list 
--- 
privilege_target: 
qualified_name_list 
TABLE qualified_name_list 
SEQUENCE qualified_name_list 
FOREIGN DATA_P WRAPPER name_list 
FOREIGN SERVER name_list 
FUNCTION function_with_argtypes_list 
PROCEDURE function_with_argtypes_list 
ROUTINE function_with_argtypes_list 
DATABASE name_list 
DOMAIN_P any_name_list 
LANGUAGE name_list 
LARGE_P OBJECT_P numeric_only_list 
SCHEMA name_list 
TABLESPACE name_list 
TYPE_P any_name_list 
ALL TABLES IN_P SCHEMA name_list 
ALL SEQUENCES IN_P SCHEMA name_list 
ALL FUNCTIONS IN_P SCHEMA name_list 
ALL PROCEDURES IN_P SCHEMA name_list 
ALL ROUTINES IN_P SCHEMA name_list 
--- 
grantee_list: 
grantee 
grantee_list ',' grantee 
--- 
grantee: 
role_spec 
GROUP_P role_spec 
--- 
opt_grant_grant_option: 
WITH GRANT OPTION 

--- 
grant_role_stmt: 
GRANT privilege_list TO role_list opt_grant_admin_option opt_granted_by 
--- 
revoke_role_stmt: 
REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior 
REVOKE ADMIN OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior 
--- 
opt_grant_admin_option: 
WITH ADMIN OPTION 

--- 
opt_granted_by: 
GRANTED BY role_spec 

--- 
alter_default_privileges_stmt: 
ALTER DEFAULT PRIVILEGES def_ac_loption_list def_ac_laction 
--- 
def_ac_loption_list: 
def_ac_loption_list def_ac_loption 

--- 
def_ac_loption: 
IN_P SCHEMA name_list 
FOR ROLE role_list 
FOR USER role_list 
--- 
def_ac_laction: 
GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option 
REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior 
REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior 
--- 
defacl_privilege_target: 
TABLES 
FUNCTIONS 
ROUTINES 
SEQUENCES 
TYPES_P 
SCHEMAS 
--- 
index_stmt: 
CREATE opt_unique INDEX opt_concurrently opt_index_name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_reloptions opt_table_space where_clause 
CREATE opt_unique INDEX opt_concurrently IF_P NOT EXISTS index_name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_reloptions opt_table_space where_clause 
--- 
opt_unique: 
UNIQUE 

--- 
opt_concurrently: 
CONCURRENTLY 

--- 
opt_index_name: 
index_name 

--- 
access_method_clause: 
USING access_method 

--- 
index_params: 
index_elem 
index_params ',' index_elem 
--- 
index_elem: 
col_id opt_collate opt_class opt_asc_desc opt_nulls_order 
func_expr_windowless opt_collate opt_class opt_asc_desc opt_nulls_order 
'(' a_expr ')' opt_collate opt_class opt_asc_desc opt_nulls_order 
--- 
opt_include: 
INCLUDE '(' index_including_params ')' 

--- 
index_including_params: 
index_elem 
index_including_params ',' index_elem 
--- 
opt_collate: 
COLLATE any_name 

--- 
opt_class: 
any_name 

--- 
opt_asc_desc: 
ASC 
DESC 

--- 
opt_nulls_order: 
NULLS FIRST_P 
NULLS LAST_P 

--- 
create_function_stmt: 
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return createfunc_opt_list 
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE '(' table_func_column_list ')' createfunc_opt_list 
CREATE opt_or_replace FUNCTION func_name func_args_with_defaults createfunc_opt_list 
CREATE opt_or_replace PROCEDURE func_name func_args_with_defaults createfunc_opt_list 
--- 
opt_or_replace: 
OR REPLACE 

--- 
func_args: 
'(' func_args_list ')' 
'(' ')' 
--- 
func_args_list: 
func_arg 
func_args_list ',' func_arg 
--- 
function_with_argtypes_list: 
function_with_argtypes 
function_with_argtypes_list ',' function_with_argtypes 
--- 
function_with_argtypes: 
func_name func_args 
col_id 
col_id indirection 
--- 
func_args_with_defaults: 
'(' func_args_with_defaults_list ')' 
'(' ')' 
--- 
func_args_with_defaults_list: 
func_arg_with_default 
func_args_with_defaults_list ',' func_arg_with_default 
--- 
func_arg: 
arg_class param_name func_type 
param_name arg_class func_type 
param_name func_type 
arg_class func_type 
func_type 
--- 
arg_class: 
IN_P 
OUT_P 
INOUT 
IN_P OUT_P 
VARIADIC 
--- 
param_name: 
type_function_name 
--- 
func_return: 
func_type 
--- 
func_type: 
typename 
type_function_name attrs '%' TYPE_P 
SETOF type_function_name attrs '%' TYPE_P 
--- 
func_arg_with_default: 
func_arg 
func_arg DEFAULT a_expr 
func_arg '=' a_expr 
--- 
aggr_arg: 
func_arg 
--- 
aggr_args: 
'(' '*' ')' 
'(' aggr_args_list ')' 
'(' ORDER BY aggr_args_list ')' 
'(' aggr_args_list ORDER BY aggr_args_list ')' 
--- 
aggr_args_list: 
aggr_arg 
aggr_args_list ',' aggr_arg 
--- 
aggregate_with_argtypes: 
func_name aggr_args 
--- 
aggregate_with_argtypes_list: 
aggregate_with_argtypes 
aggregate_with_argtypes_list ',' aggregate_with_argtypes 
--- 
createfunc_opt_list: 
createfunc_opt_item 
createfunc_opt_list createfunc_opt_item 
--- 
common_func_opt_item: 
CALLED ON NULL_P INPUT_P 
RETURNS NULL_P ON NULL_P INPUT_P 
STRICT_P 
IMMUTABLE 
STABLE 
VOLATILE 
EXTERNAL SECURITY DEFINER 
EXTERNAL SECURITY INVOKER 
SECURITY DEFINER 
SECURITY INVOKER 
LEAKPROOF 
NOT LEAKPROOF 
COST numeric_only 
ROWS numeric_only 
SUPPORT any_name 
function_set_reset_clause 
PARALLEL col_id 
--- 
createfunc_opt_item: 
AS func_as 
LANGUAGE non_reserved_word_or_sconst 
TRANSFORM transform_type_list 
WINDOW 
common_func_opt_item 
--- 
func_as: 
sconst 
sconst ',' sconst 
--- 
transform_type_list: 
FOR TYPE_P typename 
transform_type_list ',' FOR TYPE_P typename 
--- 
opt_definition: 
WITH definition 

--- 
table_func_column: 
param_name func_type 
--- 
table_func_column_list: 
table_func_column 
table_func_column_list ',' table_func_column 
--- 
alter_function_stmt: 
ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict 
ALTER PROCEDURE function_with_argtypes alterfunc_opt_list opt_restrict 
ALTER ROUTINE function_with_argtypes alterfunc_opt_list opt_restrict 
--- 
alterfunc_opt_list: 
common_func_opt_item 
alterfunc_opt_list common_func_opt_item 
--- 
opt_restrict: 
RESTRICT 

--- 
remove_func_stmt: 
DROP FUNCTION function_with_argtypes_list opt_drop_behavior 
DROP FUNCTION IF_P EXISTS function_with_argtypes_list opt_drop_behavior 
DROP PROCEDURE function_with_argtypes_list opt_drop_behavior 
DROP PROCEDURE IF_P EXISTS function_with_argtypes_list opt_drop_behavior 
DROP ROUTINE function_with_argtypes_list opt_drop_behavior 
DROP ROUTINE IF_P EXISTS function_with_argtypes_list opt_drop_behavior 
--- 
remove_aggr_stmt: 
DROP AGGREGATE aggregate_with_argtypes_list opt_drop_behavior 
DROP AGGREGATE IF_P EXISTS aggregate_with_argtypes_list opt_drop_behavior 
--- 
remove_oper_stmt: 
DROP OPERATOR operator_with_argtypes_list opt_drop_behavior 
DROP OPERATOR IF_P EXISTS operator_with_argtypes_list opt_drop_behavior 
--- 
oper_argtypes: 
'(' typename ')' 
'(' typename ',' typename ')' 
'(' NONE ',' typename ')' 
'(' typename ',' NONE ')' 
--- 
any_operator: 
all_op 
col_id '.' any_operator 
--- 
operator_with_argtypes_list: 
operator_with_argtypes 
operator_with_argtypes_list ',' operator_with_argtypes 
--- 
operator_with_argtypes: 
any_operator oper_argtypes 
--- 
do_stmt: 
DO dostmt_opt_list 
--- 
dostmt_opt_list: 
dostmt_opt_item 
dostmt_opt_list dostmt_opt_item 
--- 
dostmt_opt_item: 
sconst 
LANGUAGE non_reserved_word_or_sconst 
--- 
create_cast_stmt: 
CREATE CAST '(' typename AS typename ')' WITH FUNCTION function_with_argtypes cast_context 
CREATE CAST '(' typename AS typename ')' WITHOUT FUNCTION cast_context 
CREATE CAST '(' typename AS typename ')' WITH INOUT cast_context 
--- 
cast_context: 
AS IMPLICIT_P 
AS ASSIGNMENT 

--- 
drop_cast_stmt: 
DROP CAST opt_if_exists '(' typename AS typename ')' opt_drop_behavior 
--- 
opt_if_exists: 
IF_P EXISTS 

--- 
create_transform_stmt: 
CREATE opt_or_replace TRANSFORM FOR typename LANGUAGE name '(' transform_element_list ')' 
--- 
transform_element_list: 
FROM SQL_P WITH FUNCTION function_with_argtypes ',' TO SQL_P WITH FUNCTION function_with_argtypes 
TO SQL_P WITH FUNCTION function_with_argtypes ',' FROM SQL_P WITH FUNCTION function_with_argtypes 
FROM SQL_P WITH FUNCTION function_with_argtypes 
TO SQL_P WITH FUNCTION function_with_argtypes 
--- 
drop_transform_stmt: 
DROP TRANSFORM opt_if_exists FOR typename LANGUAGE name opt_drop_behavior 
--- 
reindex_stmt: 
REINDEX reindex_target_type opt_concurrently qualified_name 
REINDEX reindex_target_multitable opt_concurrently name 
REINDEX '(' reindex_option_list ')' reindex_target_type opt_concurrently qualified_name 
REINDEX '(' reindex_option_list ')' reindex_target_multitable opt_concurrently name 
--- 
reindex_target_type: 
INDEX 
TABLE 
--- 
reindex_target_multitable: 
SCHEMA 
SYSTEM_P 
DATABASE 
--- 
reindex_option_list: 
reindex_option_elem 
reindex_option_list ',' reindex_option_elem 
--- 
reindex_option_elem: 
VERBOSE 
--- 
alter_tbl_spc_stmt: 
ALTER TABLESPACE name SET reloptions 
ALTER TABLESPACE name RESET reloptions 
--- 
rename_stmt: 
ALTER AGGREGATE aggregate_with_argtypes RENAME TO name 
ALTER COLLATION any_name RENAME TO name 
ALTER CONVERSION_P any_name RENAME TO name 
ALTER DATABASE database_name RENAME TO database_name 
ALTER DOMAIN_P any_name RENAME TO name 
ALTER DOMAIN_P any_name RENAME CONSTRAINT name TO name 
ALTER FOREIGN DATA_P WRAPPER name RENAME TO name 
ALTER FUNCTION function_with_argtypes RENAME TO name 
ALTER GROUP_P role_id RENAME TO role_id 
ALTER opt_procedural LANGUAGE name RENAME TO name 
ALTER OPERATOR CLASS any_name USING access_method RENAME TO name 
ALTER OPERATOR FAMILY any_name USING access_method RENAME TO name 
ALTER POLICY name ON qualified_name RENAME TO name 
ALTER POLICY IF_P EXISTS name ON qualified_name RENAME TO name 
ALTER PROCEDURE function_with_argtypes RENAME TO name 
ALTER PUBLICATION name RENAME TO name 
ALTER ROUTINE function_with_argtypes RENAME TO name 
ALTER SCHEMA name RENAME TO name 
ALTER SERVER name RENAME TO name 
ALTER SUBSCRIPTION name RENAME TO name 
ALTER TABLE relation_expr RENAME TO name 
ALTER TABLE IF_P EXISTS relation_expr RENAME TO name 
ALTER SEQUENCE qualified_name RENAME TO name 
ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name 
ALTER VIEW qualified_name RENAME TO name 
ALTER VIEW IF_P EXISTS qualified_name RENAME TO name 
ALTER MATERIALIZED VIEW qualified_name RENAME TO name 
ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME TO name 
ALTER INDEX qualified_name RENAME TO name 
ALTER INDEX IF_P EXISTS qualified_name RENAME TO name 
ALTER FOREIGN TABLE relation_expr RENAME TO name 
ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME TO name 
ALTER TABLE relation_expr RENAME opt_column name TO name 
ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name 
ALTER VIEW qualified_name RENAME opt_column name TO name 
ALTER VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name 
ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name 
ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name 
ALTER TABLE relation_expr RENAME CONSTRAINT name TO name 
ALTER TABLE IF_P EXISTS relation_expr RENAME CONSTRAINT name TO name 
ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name 
ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name 
ALTER RULE name ON qualified_name RENAME TO name 
ALTER TRIGGER name ON qualified_name RENAME TO name 
ALTER EVENT TRIGGER name RENAME TO name 
ALTER ROLE role_id RENAME TO role_id 
ALTER USER role_id RENAME TO role_id 
ALTER TABLESPACE name RENAME TO name 
ALTER STATISTICS any_name RENAME TO name 
ALTER TEXT_P SEARCH PARSER any_name RENAME TO name 
ALTER TEXT_P SEARCH DICTIONARY any_name RENAME TO name 
ALTER TEXT_P SEARCH TEMPLATE any_name RENAME TO name 
ALTER TEXT_P SEARCH CONFIGURATION any_name RENAME TO name 
ALTER TYPE_P any_name RENAME TO name 
ALTER TYPE_P any_name RENAME ATTRIBUTE name TO name opt_drop_behavior 
--- 
opt_column: 
COLUMN 

--- 
opt_set_data: 
SET DATA_P 

--- 
alter_object_depends_stmt: 
ALTER FUNCTION function_with_argtypes DEPENDS ON EXTENSION name 
ALTER PROCEDURE function_with_argtypes DEPENDS ON EXTENSION name 
ALTER ROUTINE function_with_argtypes DEPENDS ON EXTENSION name 
ALTER TRIGGER name ON qualified_name DEPENDS ON EXTENSION name 
ALTER MATERIALIZED VIEW qualified_name DEPENDS ON EXTENSION name 
ALTER INDEX qualified_name DEPENDS ON EXTENSION name 
--- 
alter_object_schema_stmt: 
ALTER AGGREGATE aggregate_with_argtypes SET SCHEMA name 
ALTER COLLATION any_name SET SCHEMA name 
ALTER CONVERSION_P any_name SET SCHEMA name 
ALTER DOMAIN_P any_name SET SCHEMA name 
ALTER EXTENSION name SET SCHEMA name 
ALTER FUNCTION function_with_argtypes SET SCHEMA name 
ALTER OPERATOR operator_with_argtypes SET SCHEMA name 
ALTER OPERATOR CLASS any_name USING access_method SET SCHEMA name 
ALTER OPERATOR FAMILY any_name USING access_method SET SCHEMA name 
ALTER PROCEDURE function_with_argtypes SET SCHEMA name 
ALTER ROUTINE function_with_argtypes SET SCHEMA name 
ALTER TABLE relation_expr SET SCHEMA name 
ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name 
ALTER STATISTICS any_name SET SCHEMA name 
ALTER TEXT_P SEARCH PARSER any_name SET SCHEMA name 
ALTER TEXT_P SEARCH DICTIONARY any_name SET SCHEMA name 
ALTER TEXT_P SEARCH TEMPLATE any_name SET SCHEMA name 
ALTER TEXT_P SEARCH CONFIGURATION any_name SET SCHEMA name 
ALTER SEQUENCE qualified_name SET SCHEMA name 
ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name 
ALTER VIEW qualified_name SET SCHEMA name 
ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name 
ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name 
ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name SET SCHEMA name 
ALTER FOREIGN TABLE relation_expr SET SCHEMA name 
ALTER FOREIGN TABLE IF_P EXISTS relation_expr SET SCHEMA name 
ALTER TYPE_P any_name SET SCHEMA name 
--- 
alter_operator_stmt: 
ALTER OPERATOR operator_with_argtypes SET '(' operator_def_list ')' 
--- 
operator_def_list: 
operator_def_elem 
operator_def_list ',' operator_def_elem 
--- 
operator_def_elem: 
col_label '=' NONE 
col_label '=' operator_def_arg 
--- 
operator_def_arg: 
func_type 
qual_all_op 
numeric_only 
sconst 
--- 
alter_owner_stmt: 
ALTER AGGREGATE aggregate_with_argtypes OWNER TO role_spec 
ALTER COLLATION any_name OWNER TO role_spec 
ALTER CONVERSION_P any_name OWNER TO role_spec 
ALTER DATABASE database_name OWNER TO role_spec 
ALTER DOMAIN_P any_name OWNER TO role_spec 
ALTER FUNCTION function_with_argtypes OWNER TO role_spec 
ALTER opt_procedural LANGUAGE name OWNER TO role_spec 
ALTER LARGE_P OBJECT_P numeric_only OWNER TO role_spec 
ALTER OPERATOR operator_with_argtypes OWNER TO role_spec 
ALTER OPERATOR CLASS any_name USING access_method OWNER TO role_spec 
ALTER OPERATOR FAMILY any_name USING access_method OWNER TO role_spec 
ALTER PROCEDURE function_with_argtypes OWNER TO role_spec 
ALTER ROUTINE function_with_argtypes OWNER TO role_spec 
ALTER SCHEMA name OWNER TO role_spec 
ALTER TYPE_P any_name OWNER TO role_spec 
ALTER TABLESPACE name OWNER TO role_spec 
ALTER STATISTICS any_name OWNER TO role_spec 
ALTER TEXT_P SEARCH DICTIONARY any_name OWNER TO role_spec 
ALTER TEXT_P SEARCH CONFIGURATION any_name OWNER TO role_spec 
ALTER FOREIGN DATA_P WRAPPER name OWNER TO role_spec 
ALTER SERVER name OWNER TO role_spec 
ALTER EVENT TRIGGER name OWNER TO role_spec 
ALTER PUBLICATION name OWNER TO role_spec 
ALTER SUBSCRIPTION name OWNER TO role_spec 
--- 
create_publication_stmt: 
CREATE PUBLICATION name opt_publication_for_tables opt_definition 
--- 
opt_publication_for_tables: 
publication_for_tables 

--- 
publication_for_tables: 
FOR TABLE relation_expr_list 
FOR ALL TABLES 
--- 
alter_publication_stmt: 
ALTER PUBLICATION name SET definition 
ALTER PUBLICATION name ADD_P TABLE relation_expr_list 
ALTER PUBLICATION name SET TABLE relation_expr_list 
ALTER PUBLICATION name DROP TABLE relation_expr_list 
--- 
create_subscription_stmt: 
CREATE SUBSCRIPTION name CONNECTION sconst PUBLICATION publication_name_list opt_definition 
--- 
publication_name_list: 
publication_name_item 
publication_name_list ',' publication_name_item 
--- 
publication_name_item: 
col_label 
--- 
alter_subscription_stmt: 
ALTER SUBSCRIPTION name SET definition 
ALTER SUBSCRIPTION name CONNECTION sconst 
ALTER SUBSCRIPTION name REFRESH PUBLICATION opt_definition 
ALTER SUBSCRIPTION name SET PUBLICATION publication_name_list opt_definition 
ALTER SUBSCRIPTION name ENABLE_P 
ALTER SUBSCRIPTION name DISABLE_P 
--- 
drop_subscription_stmt: 
DROP SUBSCRIPTION name opt_drop_behavior 
DROP SUBSCRIPTION IF_P EXISTS name opt_drop_behavior 
--- 
rule_stmt: 
CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead rule_action_list 
--- 
rule_action_list: 
NOTHING 
rule_action_stmt 
'(' rule_action_multi ')' 
--- 
rule_action_multi: 
rule_action_multi ';' rule_action_stmt_or_empty 
rule_action_stmt_or_empty 
--- 
rule_action_stmt: 
select_stmt 
insert_stmt 
update_stmt 
delete_stmt 
notify_stmt 
--- 
rule_action_stmt_or_empty: 
rule_action_stmt 

--- 
event: 
SELECT 
UPDATE 
DELETE_P 
INSERT 
--- 
opt_instead: 
INSTEAD 
ALSO 

--- 
notify_stmt: 
NOTIFY col_id notify_payload 
--- 
notify_payload: 
',' sconst 

--- 
listen_stmt: 
LISTEN col_id 
--- 
unlisten_stmt: 
UNLISTEN col_id 
UNLISTEN '*' 
--- 
transaction_stmt: 
ABORT_P opt_transaction opt_transaction_chain 
BEGIN_P opt_transaction transaction_mode_list_or_empty 
START TRANSACTION transaction_mode_list_or_empty 
COMMIT opt_transaction opt_transaction_chain 
END_P opt_transaction opt_transaction_chain 
ROLLBACK opt_transaction opt_transaction_chain 
SAVEPOINT col_id 
RELEASE SAVEPOINT col_id 
RELEASE col_id 
ROLLBACK opt_transaction TO SAVEPOINT col_id 
ROLLBACK opt_transaction TO col_id 
PREPARE TRANSACTION sconst 
COMMIT PREPARED sconst 
ROLLBACK PREPARED sconst 
--- 
opt_transaction: 
WORK 
TRANSACTION 

--- 
transaction_mode_item: 
ISOLATION LEVEL iso_level 
READ ONLY 
READ WRITE 
DEFERRABLE 
NOT DEFERRABLE 
--- 
transaction_mode_list: 
transaction_mode_item 
transaction_mode_list ',' transaction_mode_item 
transaction_mode_list transaction_mode_item 
--- 
transaction_mode_list_or_empty: 
transaction_mode_list 

--- 
opt_transaction_chain: 
AND CHAIN 
AND NO CHAIN 

--- 
view_stmt: 
CREATE opt_temp VIEW qualified_name opt_column_list opt_reloptions AS select_stmt opt_check_option 
CREATE OR REPLACE opt_temp VIEW qualified_name opt_column_list opt_reloptions AS select_stmt opt_check_option 
CREATE opt_temp RECURSIVE VIEW qualified_name '(' column_list ')' opt_reloptions AS select_stmt opt_check_option 
CREATE OR REPLACE opt_temp RECURSIVE VIEW qualified_name '(' column_list ')' opt_reloptions AS select_stmt opt_check_option 
--- 
opt_check_option: 
WITH CHECK OPTION 
WITH CASCADED CHECK OPTION 
WITH LOCAL CHECK OPTION 

--- 
load_stmt: 
LOAD file_name 
--- 
createdb_stmt: 
CREATE DATABASE database_name opt_with createdb_opt_list 
--- 
createdb_opt_list: 
createdb_opt_items 

--- 
createdb_opt_items: 
createdb_opt_item 
createdb_opt_items createdb_opt_item 
--- 
createdb_opt_item: 
createdb_opt_name opt_equal signed_iconst 
createdb_opt_name opt_equal opt_boolean_or_string 
createdb_opt_name opt_equal DEFAULT 
--- 
createdb_opt_name: 
identifier 
CONNECTION LIMIT 
ENCODING 
LOCATION 
OWNER 
TABLESPACE 
TEMPLATE 
--- 
opt_equal: 
'=' 

--- 
alter_database_stmt: 
ALTER DATABASE database_name WITH createdb_opt_list 
ALTER DATABASE database_name createdb_opt_list 
ALTER DATABASE database_name SET TABLESPACE name 
--- 
alter_database_set_stmt: 
ALTER DATABASE database_name set_reset_clause 
--- 
dropdb_stmt: 
DROP DATABASE database_name 
DROP DATABASE IF_P EXISTS database_name 
DROP DATABASE database_name opt_with '(' drop_option_list ')' 
DROP DATABASE IF_P EXISTS database_name opt_with '(' drop_option_list ')' 
--- 
drop_option_list: 
drop_option 
drop_option_list ',' drop_option 
--- 
drop_option: 
FORCE 
--- 
alter_collation_stmt: 
ALTER COLLATION any_name REFRESH VERSION_P 
--- 
alter_system_stmt: 
ALTER SYSTEM_P SET generic_set 
ALTER SYSTEM_P RESET generic_reset 
--- 
create_domain_stmt: 
CREATE DOMAIN_P any_name opt_as typename col_qual_list 
--- 
alter_domain_stmt: 
ALTER DOMAIN_P any_name alter_column_default 
ALTER DOMAIN_P any_name DROP NOT NULL_P 
ALTER DOMAIN_P any_name SET NOT NULL_P 
ALTER DOMAIN_P any_name ADD_P table_constraint 
ALTER DOMAIN_P any_name DROP CONSTRAINT name opt_drop_behavior 
ALTER DOMAIN_P any_name DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior 
ALTER DOMAIN_P any_name VALIDATE CONSTRAINT name 
--- 
opt_as: 
AS 

--- 
alter_ts_dictionary_stmt: 
ALTER TEXT_P SEARCH DICTIONARY any_name definition 
--- 
alter_ts_configuration_stmt: 
ALTER TEXT_P SEARCH CONFIGURATION any_name ADD_P MAPPING FOR name_list any_with any_name_list 
ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list any_with any_name_list 
ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name any_with any_name 
ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name any_with any_name 
ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list 
ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING IF_P EXISTS FOR name_list 
--- 
any_with: 
WITH 
--- 
create_conversion_stmt: 
CREATE opt_default CONVERSION_P any_name FOR sconst TO sconst FROM any_name 
--- 
cluster_stmt: 
CLUSTER opt_verbose qualified_name cluster_index_specification 
CLUSTER opt_verbose 
CLUSTER opt_verbose index_name ON qualified_name 
--- 
cluster_index_specification: 
USING index_name 

--- 
vacuum_stmt: 
VACUUM opt_full opt_freeze opt_verbose opt_analyze opt_vacuum_relation_list 
VACUUM '(' vac_analyze_option_list ')' opt_vacuum_relation_list 
--- 
analyze_stmt: 
analyze_keyword opt_verbose opt_vacuum_relation_list 
analyze_keyword '(' vac_analyze_option_list ')' opt_vacuum_relation_list 
--- 
vac_analyze_option_list: 
vac_analyze_option_elem 
vac_analyze_option_list ',' vac_analyze_option_elem 
--- 
analyze_keyword: 
ANALYZE 
ANALYSE 
--- 
vac_analyze_option_elem: 
vac_analyze_option_name vac_analyze_option_arg 
--- 
vac_analyze_option_name: 
non_reserved_word 
analyze_keyword 
--- 
vac_analyze_option_arg: 
opt_boolean_or_string 
numeric_only 

--- 
opt_analyze: 
analyze_keyword 

--- 
opt_verbose: 
VERBOSE 

--- 
opt_full: 
FULL 

--- 
opt_freeze: 
FREEZE 

--- 
opt_name_list: 
'(' name_list ')' 

--- 
vacuum_relation: 
qualified_name opt_name_list 
--- 
vacuum_relation_list: 
vacuum_relation 
vacuum_relation_list ',' vacuum_relation 
--- 
opt_vacuum_relation_list: 
vacuum_relation_list 

--- 
explain_stmt: 
EXPLAIN explainable_stmt 
EXPLAIN analyze_keyword opt_verbose explainable_stmt 
EXPLAIN VERBOSE explainable_stmt 
EXPLAIN '(' explain_option_list ')' explainable_stmt 
--- 
explainable_stmt: 
select_stmt 
insert_stmt 
update_stmt 
delete_stmt 
declare_cursor_stmt 
create_as_stmt 
create_mat_view_stmt 
refresh_mat_view_stmt 
execute_stmt 
--- 
explain_option_list: 
explain_option_elem 
explain_option_list ',' explain_option_elem 
--- 
explain_option_elem: 
explain_option_name explain_option_arg 
--- 
explain_option_name: 
non_reserved_word 
analyze_keyword 
--- 
explain_option_arg: 
opt_boolean_or_string 
numeric_only 

--- 
prepare_stmt: 
PREPARE name prep_type_clause AS preparable_stmt 
--- 
prep_type_clause: 
'(' type_list ')' 

--- 
preparable_stmt: 
select_stmt 
insert_stmt 
update_stmt 
delete_stmt 
--- 
execute_stmt: 
EXECUTE name execute_param_clause 
CREATE opt_temp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data 
CREATE opt_temp TABLE IF_P NOT EXISTS create_as_target AS EXECUTE name execute_param_clause opt_with_data 
--- 
execute_param_clause: 
'(' expr_list ')' 

--- 
deallocate_stmt: 
DEALLOCATE name 
DEALLOCATE PREPARE name 
DEALLOCATE ALL 
DEALLOCATE PREPARE ALL 
--- 
insert_stmt: 
opt_with_clause INSERT INTO insert_target insert_rest opt_on_conflict returning_clause 
--- 
insert_target: 
qualified_name 
qualified_name AS col_id 
--- 
insert_rest: 
select_stmt 
OVERRIDING override_kind VALUE_P select_stmt 
'(' insert_column_list ')' select_stmt 
'(' insert_column_list ')' OVERRIDING override_kind VALUE_P select_stmt 
DEFAULT VALUES 
--- 
override_kind: 
USER 
SYSTEM_P 
--- 
insert_column_list: 
insert_column_item 
insert_column_list ',' insert_column_item 
--- 
insert_column_item: 
col_id opt_indirection 
--- 
opt_on_conflict: 
ON CONFLICT opt_conf_expr DO UPDATE SET set_clause_list where_clause 
ON CONFLICT opt_conf_expr DO NOTHING 

--- 
opt_conf_expr: 
'(' index_params ')' where_clause 
ON CONSTRAINT name 

--- 
returning_clause: 
RETURNING target_list 

--- 
delete_stmt: 
opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause 
--- 
using_clause: 
USING from_list 

--- 
lock_stmt: 
LOCK_P opt_table relation_expr_list opt_lock opt_nowait 
--- 
opt_lock: 
IN_P lock_type MODE 

--- 
lock_type: 
ACCESS SHARE 
ROW SHARE 
ROW EXCLUSIVE 
SHARE UPDATE EXCLUSIVE 
SHARE 
SHARE ROW EXCLUSIVE 
EXCLUSIVE 
ACCESS EXCLUSIVE 
--- 
opt_nowait: 
NOWAIT 

--- 
opt_nowait_or_skip: 
NOWAIT 
SKIP LOCKED 

--- 
update_stmt: 
opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause 
--- 
set_clause_list: 
set_clause 
set_clause_list ',' set_clause 
--- 
set_clause: 
set_target '=' a_expr 
'(' set_target_list ')' '=' a_expr 
--- 
set_target: 
col_id opt_indirection 
--- 
set_target_list: 
set_target 
set_target_list ',' set_target 
--- 
declare_cursor_stmt: 
DECLARE cursor_name cursor_options CURSOR opt_hold FOR select_stmt 
--- 
cursor_name: 
name 
--- 
cursor_options: 

cursor_options NO SCROLL 
cursor_options SCROLL 
cursor_options BINARY 
cursor_options INSENSITIVE 
--- 
opt_hold: 

WITH HOLD 
WITHOUT HOLD 
--- 
select_stmt: 
select_no_parens %prec UMINUS 
select_with_parens %prec UMINUS 
--- 
select_with_parens: 
'(' select_no_parens ')' 
'(' select_with_parens ')' 
--- 
select_no_parens: 
simple_select 
select_clause sort_clause 
select_clause opt_sort_clause for_locking_clause opt_select_limit 
select_clause opt_sort_clause select_limit opt_for_locking_clause 
with_clause select_clause 
with_clause select_clause sort_clause 
with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit 
with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause 
--- 
select_clause: 
simple_select 
select_with_parens 
--- 
simple_select: 
SELECT opt_all_clause opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause 
SELECT distinct_clause target_list into_clause from_clause where_clause group_clause having_clause window_clause 
values_clause 
TABLE relation_expr 
select_clause UNION all_or_distinct select_clause 
select_clause INTERSECT all_or_distinct select_clause 
select_clause EXCEPT all_or_distinct select_clause 
--- 
with_clause: 
WITH cte_list 
WITH RECURSIVE cte_list 
--- 
cte_list: 
common_table_expr 
cte_list ',' common_table_expr 
--- 
common_table_expr: 
name opt_name_list AS opt_materialized '(' preparable_stmt ')' 
--- 
opt_materialized: 
MATERIALIZED 
NOT MATERIALIZED 

--- 
opt_with_clause: 
with_clause 

--- 
into_clause: 
INTO opt_temp_table_name 

--- 
opt_temp_table_name: 
TEMPORARY opt_table qualified_name 
TEMP opt_table qualified_name 
LOCAL TEMPORARY opt_table qualified_name 
LOCAL TEMP opt_table qualified_name 
GLOBAL TEMPORARY opt_table qualified_name 
GLOBAL TEMP opt_table qualified_name 
UNLOGGED opt_table qualified_name 
TABLE qualified_name 
qualified_name 
--- 
opt_table: 
TABLE 

--- 
all_or_distinct: 
ALL 
DISTINCT 

--- 
distinct_clause: 
DISTINCT 
DISTINCT ON '(' expr_list ')' 
--- 
opt_all_clause: 
ALL 

--- 
opt_sort_clause: 
sort_clause 

--- 
sort_clause: 
ORDER BY sortby_list 
--- 
sortby_list: 
sortby 
sortby_list ',' sortby 
--- 
sortby: 
a_expr USING qual_all_op opt_nulls_order 
a_expr opt_asc_desc opt_nulls_order 
--- 
select_limit: 
limit_clause offset_clause 
offset_clause limit_clause 
limit_clause 
offset_clause 
--- 
opt_select_limit: 
select_limit 

--- 
limit_clause: 
LIMIT select_limit_value 
LIMIT select_limit_value ',' select_offset_value 
FETCH first_or_next select_fetch_first_value row_or_rows ONLY 
FETCH first_or_next row_or_rows ONLY 
--- 
offset_clause: 
OFFSET select_offset_value 
OFFSET select_fetch_first_value row_or_rows 
--- 
select_limit_value: 
a_expr 
ALL 
--- 
select_offset_value: 
a_expr 
--- 
select_fetch_first_value: 
c_expr 
'+' i_or_f_const 
'-' i_or_f_const 
--- 
i_or_f_const: 
iconst 
fconst 
--- 
row_or_rows: 
ROW 
ROWS 
--- 
first_or_next: 
FIRST_P 
NEXT 
--- 
group_clause: 
GROUP_P BY group_by_list 

--- 
group_by_list: 
group_by_item 
group_by_list ',' group_by_item 
--- 
group_by_item: 
a_expr 
empty_grouping_set 
cube_clause 
rollup_clause 
grouping_sets_clause 
--- 
empty_grouping_set: 
'(' ')' 
--- 
rollup_clause: 
ROLLUP '(' expr_list ')' 
--- 
cube_clause: 
CUBE '(' expr_list ')' 
--- 
grouping_sets_clause: 
GROUPING SETS '(' group_by_list ')' 
--- 
having_clause: 
HAVING a_expr 

--- 
for_locking_clause: 
for_locking_items 
FOR READ ONLY 
--- 
opt_for_locking_clause: 
for_locking_clause 

--- 
for_locking_items: 
for_locking_item 
for_locking_items for_locking_item 
--- 
for_locking_item: 
for_locking_strength locked_rels_list opt_nowait_or_skip 
--- 
for_locking_strength: 
FOR UPDATE 
FOR NO KEY UPDATE 
FOR SHARE 
FOR KEY SHARE 
--- 
locked_rels_list: 
OF qualified_name_list 

--- 
values_clause: 
VALUES '(' expr_list ')' 
values_clause ',' '(' expr_list ')' 
--- 
from_clause: 
FROM from_list 

--- 
from_list: 
table_ref 
from_list ',' table_ref 
--- 
table_ref: 
relation_expr opt_alias_clause 
relation_expr opt_alias_clause tablesample_clause 
func_table func_alias_clause 
LATERAL_P func_table func_alias_clause 
xmltable opt_alias_clause 
LATERAL_P xmltable opt_alias_clause 
select_with_parens opt_alias_clause 
LATERAL_P select_with_parens opt_alias_clause 
joined_table 
'(' joined_table ')' alias_clause 
--- 
joined_table: 
'(' joined_table ')' 
table_ref CROSS JOIN table_ref 
table_ref join_type JOIN table_ref join_qual 
table_ref JOIN table_ref join_qual 
table_ref NATURAL join_type JOIN table_ref 
table_ref NATURAL JOIN table_ref 
--- 
alias_clause: 
AS col_id '(' name_list ')' 
AS col_id 
col_id '(' name_list ')' 
col_id 
--- 
opt_alias_clause: 
alias_clause 

--- 
func_alias_clause: 
alias_clause 
AS '(' table_func_element_list ')' 
AS col_id '(' table_func_element_list ')' 
col_id '(' table_func_element_list ')' 

--- 
join_type: 
FULL join_outer 
LEFT join_outer 
RIGHT join_outer 
INNER_P 
--- 
join_outer: 
OUTER_P 

--- 
join_qual: 
USING '(' name_list ')' 
ON a_expr 
--- 
relation_expr: 
qualified_name 
qualified_name '*' 
ONLY qualified_name 
ONLY '(' qualified_name ')' 
--- 
relation_expr_list: 
relation_expr 
relation_expr_list ',' relation_expr 
--- 
relation_expr_opt_alias: 
relation_expr %prec UMINUS 
relation_expr col_id 
relation_expr AS col_id 
--- 
tablesample_clause: 
TABLESAMPLE func_name '(' expr_list ')' opt_repeatable_clause 
--- 
opt_repeatable_clause: 
REPEATABLE '(' a_expr ')' 

--- 
func_table: 
func_expr_windowless opt_ordinality 
ROWS FROM '(' rowsfrom_list ')' opt_ordinality 
--- 
rowsfrom_item: 
func_expr_windowless opt_col_def_list 
--- 
rowsfrom_list: 
rowsfrom_item 
rowsfrom_list ',' rowsfrom_item 
--- 
opt_col_def_list: 
AS '(' table_func_element_list ')' 

--- 
opt_ordinality: 
WITH ORDINALITY 

--- 
where_clause: 
WHERE a_expr 

--- 
where_or_current_clause: 
WHERE a_expr 
WHERE CURRENT_P OF cursor_name 

--- 
opt_table_func_element_list: 
table_func_element_list 

--- 
table_func_element_list: 
table_func_element 
table_func_element_list ',' table_func_element 
--- 
table_func_element: 
col_id typename opt_collate_clause 
--- 
xmltable: 
XMLTABLE '(' c_expr xmlexists_argument COLUMNS xmltable_column_list ')' 
XMLTABLE '(' XMLNAMESPACES '(' xml_namespace_list ')' ',' c_expr xmlexists_argument COLUMNS xmltable_column_list ')' 
--- 
xmltable_column_list: 
xmltable_column_el 
xmltable_column_list ',' xmltable_column_el 
--- 
xmltable_column_el: 
col_id typename 
col_id typename xmltable_column_option_list 
col_id FOR ORDINALITY 
--- 
xmltable_column_option_list: 
xmltable_column_option_el 
xmltable_column_option_list xmltable_column_option_el 
--- 
xmltable_column_option_el: 
identifier b_expr 
DEFAULT b_expr 
NOT NULL_P 
NULL_P 
--- 
xml_namespace_list: 
xml_namespace_el 
xml_namespace_list ',' xml_namespace_el 
--- 
xml_namespace_el: 
b_expr AS col_label 
DEFAULT b_expr 
--- 
typename: 
simple_typename opt_array_bounds 
SETOF simple_typename opt_array_bounds 
simple_typename ARRAY '[' iconst ']' 
SETOF simple_typename ARRAY '[' iconst ']' 
simple_typename ARRAY 
SETOF simple_typename ARRAY 
--- 
opt_array_bounds: 
opt_array_bounds '[' ']' 
opt_array_bounds '[' iconst ']' 

--- 
simple_typename: 
generic_type 
numeric 
bit 
character 
const_datetime 
const_interval opt_interval 
const_interval '(' iconst ')' 
--- 
const_typename: 
numeric 
const_bit 
const_character 
const_datetime 
--- 
generic_type: 
type_function_name opt_type_modifiers 
type_function_name attrs opt_type_modifiers 
--- 
opt_type_modifiers: 
'(' expr_list ')' 

--- 
numeric: 
INT_P 
INTEGER 
SMALLINT 
BIGINT 
REAL 
FLOAT_P opt_float 
DOUBLE_P PRECISION 
DECIMAL_P opt_type_modifiers 
DEC opt_type_modifiers 
NUMERIC opt_type_modifiers 
BOOLEAN_P 
--- 
opt_float: 
'(' iconst ')' 

--- 
bit: 
bit_with_length 
bit_without_length 
--- 
const_bit: 
bit_with_length 
bit_without_length 
--- 
bit_with_length: 
BIT opt_varying '(' expr_list ')' 
--- 
bit_without_length: 
BIT opt_varying 
--- 
character: 
character_with_length 
character_without_length 
--- 
const_character: 
character_with_length 
character_without_length 
--- 
character_with_length: 
character_conflicta '(' iconst ')' 
--- 
character_without_length: 
character_conflicta 
--- 
character_conflicta: 
CHARACTER opt_varying 
CHAR_P opt_varying 
VARCHAR 
NATIONAL CHARACTER opt_varying 
NATIONAL CHAR_P opt_varying 
NCHAR opt_varying 
--- 
opt_varying: 
VARYING 

--- 
const_datetime: 
TIMESTAMP '(' iconst ')' opt_timezone 
TIMESTAMP opt_timezone 
TIME '(' iconst ')' opt_timezone 
TIME opt_timezone 
--- 
const_interval: 
INTERVAL 
--- 
opt_timezone: 
WITH TIME ZONE 
WITHOUT TIME ZONE 

--- 
opt_interval: 
YEAR_P 
MONTH_P 
DAY_P 
HOUR_P 
MINUTE_P 
interval_second 
YEAR_P TO MONTH_P 
DAY_P TO HOUR_P 
DAY_P TO MINUTE_P 
DAY_P TO interval_second 
HOUR_P TO MINUTE_P 
HOUR_P TO interval_second 
MINUTE_P TO interval_second 

--- 
interval_second: 
SECOND_P 
SECOND_P '(' iconst ')' 
--- 
a_expr: 
c_expr 
a_expr TYPECAST typename 
a_expr COLLATE any_name 
a_expr AT TIME ZONE a_expr %prec AT 
'+' a_expr %prec UMINUS 
'-' a_expr %prec UMINUS 
a_expr '+' a_expr 
a_expr '-' a_expr 
a_expr '*' a_expr 
a_expr '/' a_expr 
a_expr '%' a_expr 
a_expr '^' a_expr 
a_expr '<' a_expr 
a_expr '>' a_expr 
a_expr '=' a_expr 
a_expr LESS_EQUALS a_expr 
a_expr GREATER_EQUALS a_expr 
a_expr NOT_EQUALS a_expr 
a_expr qual_op a_expr %prec OP 
qual_op a_expr %prec OP 
a_expr qual_op %prec POSTFIXOP 
a_expr AND a_expr 
a_expr OR a_expr 
NOT a_expr %prec NOT 
a_expr LIKE a_expr 
a_expr LIKE a_expr ESCAPE a_expr %prec LIKE 
a_expr NOT LIKE a_expr %prec NOT 
a_expr NOT LIKE a_expr ESCAPE a_expr %prec NOT 
a_expr ILIKE a_expr 
a_expr ILIKE a_expr ESCAPE a_expr %prec ILIKE 
a_expr NOT ILIKE a_expr %prec NOT 
a_expr NOT ILIKE a_expr ESCAPE a_expr %prec NOT 
a_expr SIMILAR TO a_expr %prec SIMILAR 
a_expr SIMILAR TO a_expr ESCAPE a_expr %prec SIMILAR 
a_expr NOT SIMILAR TO a_expr %prec NOT 
a_expr NOT SIMILAR TO a_expr ESCAPE a_expr %prec NOT 
a_expr IS NULL_P %prec IS 
a_expr ISNULL 
a_expr IS NOT NULL_P %prec IS 
a_expr NOTNULL 
row OVERLAPS row 
a_expr IS TRUE_P %prec IS 
a_expr IS NOT TRUE_P %prec IS 
a_expr IS FALSE_P %prec IS 
a_expr IS NOT FALSE_P %prec IS 
a_expr IS UNKNOWN %prec IS 
a_expr IS NOT UNKNOWN %prec IS 
a_expr IS DISTINCT FROM a_expr %prec IS 
a_expr IS NOT DISTINCT FROM a_expr %prec IS 
a_expr IS OF '(' type_list ')' %prec IS 
a_expr IS NOT OF '(' type_list ')' %prec IS 
a_expr BETWEEN opt_asymmetric b_expr AND a_expr %prec BETWEEN 
a_expr NOT BETWEEN opt_asymmetric b_expr AND a_expr %prec NOT 
a_expr BETWEEN SYMMETRIC b_expr AND a_expr %prec BETWEEN 
a_expr NOT BETWEEN SYMMETRIC b_expr AND a_expr %prec NOT 
a_expr IN_P in_expr 
a_expr NOT IN_P in_expr %prec NOT 
a_expr subquery_op sub_type select_with_parens %prec OP 
a_expr subquery_op sub_type '(' a_expr ')' %prec OP 
UNIQUE select_with_parens 
a_expr IS DOCUMENT_P %prec IS 
a_expr IS NOT DOCUMENT_P %prec IS 
DEFAULT 
--- 
b_expr: 
c_expr 
b_expr TYPECAST typename 
'+' b_expr %prec UMINUS 
'-' b_expr %prec UMINUS 
b_expr '+' b_expr 
b_expr '-' b_expr 
b_expr '*' b_expr 
b_expr '/' b_expr 
b_expr '%' b_expr 
b_expr '^' b_expr 
b_expr '<' b_expr 
b_expr '>' b_expr 
b_expr '=' b_expr 
b_expr LESS_EQUALS b_expr 
b_expr GREATER_EQUALS b_expr 
b_expr NOT_EQUALS b_expr 
b_expr qual_op b_expr %prec OP 
qual_op b_expr %prec OP 
b_expr qual_op %prec POSTFIXOP 
b_expr IS DISTINCT FROM b_expr %prec IS 
b_expr IS NOT DISTINCT FROM b_expr %prec IS 
b_expr IS OF '(' type_list ')' %prec IS 
b_expr IS NOT OF '(' type_list ')' %prec IS 
b_expr IS DOCUMENT_P %prec IS 
b_expr IS NOT DOCUMENT_P %prec IS 
--- 
c_expr: 
columnref 
aexpr_const 
PARAM opt_indirection 
'(' a_expr ')' opt_indirection 
case_expr 
func_expr 
select_with_parens %prec UMINUS 
select_with_parens indirection 
EXISTS select_with_parens 
ARRAY select_with_parens 
ARRAY array_expr 
explicit_row 
implicit_row 
GROUPING '(' expr_list ')' 
--- 
func_application: 
func_name '(' ')' 
func_name '(' func_arg_list opt_sort_clause ')' 
func_name '(' VARIADIC func_arg_expr opt_sort_clause ')' 
func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause ')' 
func_name '(' ALL func_arg_list opt_sort_clause ')' 
func_name '(' DISTINCT func_arg_list opt_sort_clause ')' 
func_name '(' '*' ')' 
--- 
func_expr: 
func_application within_group_clause filter_clause over_clause 
func_expr_common_subexpr 
--- 
func_expr_windowless: 
func_application 
func_expr_common_subexpr 
--- 
func_expr_common_subexpr: 
COLLATION FOR '(' a_expr ')' 
CURRENT_DATE 
CURRENT_TIME 
CURRENT_TIME '(' iconst ')' 
CURRENT_TIMESTAMP 
CURRENT_TIMESTAMP '(' iconst ')' 
LOCALTIME 
LOCALTIME '(' iconst ')' 
LOCALTIMESTAMP 
LOCALTIMESTAMP '(' iconst ')' 
CURRENT_ROLE 
CURRENT_USER 
SESSION_USER 
USER 
CURRENT_CATALOG 
CURRENT_SCHEMA 
CAST '(' a_expr AS typename ')' 
EXTRACT '(' extract_list ')' 
OVERLAY '(' overlay_list ')' 
POSITION '(' position_list ')' 
SUBSTRING '(' substr_list ')' 
TREAT '(' a_expr AS typename ')' 
TRIM '(' BOTH trim_list ')' 
TRIM '(' LEADING trim_list ')' 
TRIM '(' TRAILING trim_list ')' 
TRIM '(' trim_list ')' 
NULLIF '(' a_expr ',' a_expr ')' 
COALESCE '(' expr_list ')' 
GREATEST '(' expr_list ')' 
LEAST '(' expr_list ')' 
XMLCONCAT '(' expr_list ')' 
XMLELEMENT '(' NAME_P col_label ')' 
XMLELEMENT '(' NAME_P col_label ',' xml_attributes ')' 
XMLELEMENT '(' NAME_P col_label ',' expr_list ')' 
XMLELEMENT '(' NAME_P col_label ',' xml_attributes ',' expr_list ')' 
XMLEXISTS '(' c_expr xmlexists_argument ')' 
XMLFOREST '(' xml_attribute_list ')' 
XMLPARSE '(' document_or_content a_expr xml_whitespace_option ')' 
XMLPI '(' NAME_P col_label ')' 
XMLPI '(' NAME_P col_label ',' a_expr ')' 
XMLROOT '(' a_expr ',' xml_root_version opt_xml_root_standalone ')' 
XMLSERIALIZE '(' document_or_content a_expr AS simple_typename ')' 
--- 
xml_root_version: 
VERSION_P a_expr 
VERSION_P NO VALUE_P 
--- 
opt_xml_root_standalone: 
',' STANDALONE_P YES_P 
',' STANDALONE_P NO 
',' STANDALONE_P NO VALUE_P 

--- 
xml_attributes: 
XMLATTRIBUTES '(' xml_attribute_list ')' 
--- 
xml_attribute_list: 
xml_attribute_el 
xml_attribute_list ',' xml_attribute_el 
--- 
xml_attribute_el: 
a_expr AS col_label 
a_expr 
--- 
document_or_content: 
DOCUMENT_P 
CONTENT_P 
--- 
xml_whitespace_option: 
PRESERVE WHITESPACE_P 
STRIP_P WHITESPACE_P 

--- 
xmlexists_argument: 
PASSING c_expr 
PASSING c_expr xml_passing_mech 
PASSING xml_passing_mech c_expr 
PASSING xml_passing_mech c_expr xml_passing_mech 
--- 
xml_passing_mech: 
BY REF 
BY VALUE_P 
--- 
within_group_clause: 
WITHIN GROUP_P '(' sort_clause ')' 

--- 
filter_clause: 
FILTER '(' WHERE a_expr ')' 

--- 
window_clause: 
WINDOW window_definition_list 

--- 
window_definition_list: 
window_definition 
window_definition_list ',' window_definition 
--- 
window_definition: 
col_id AS window_specification 
--- 
over_clause: 
OVER window_specification 
OVER col_id 

--- 
window_specification: 
'(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')' 
--- 
opt_existing_window_name: 
col_id 
%prec OP 
--- 
opt_partition_clause: 
PARTITION BY expr_list 

--- 
opt_frame_clause: 
RANGE frame_extent opt_window_exclusion_clause 
ROWS frame_extent opt_window_exclusion_clause 
GROUPS frame_extent opt_window_exclusion_clause 

--- 
frame_extent: 
frame_bound 
BETWEEN frame_bound AND frame_bound 
--- 
frame_bound: 
UNBOUNDED PRECEDING 
UNBOUNDED FOLLOWING 
CURRENT_P ROW 
a_expr PRECEDING 
a_expr FOLLOWING 
--- 
opt_window_exclusion_clause: 
EXCLUDE CURRENT_P ROW 
EXCLUDE GROUP_P 
EXCLUDE TIES 
EXCLUDE NO OTHERS 

--- 
row: 
ROW '(' expr_list ')' 
ROW '(' ')' 
'(' expr_list ',' a_expr ')' 
--- 
explicit_row: 
ROW '(' expr_list ')' 
ROW '(' ')' 
--- 
implicit_row: 
'(' expr_list ',' a_expr ')' 
--- 
sub_type: 
ANY 
SOME 
ALL 
--- 
all_op: 
guess_op 
math_op 
--- 
math_op: 
'+' 
'-' 
'*' 
'/' 
'%' 
'^' 
'<' 
'>' 
'=' 
LESS_EQUALS 
GREATER_EQUALS 
NOT_EQUALS 
--- 
qual_op: 
guess_op 
OPERATOR '(' any_operator ')' 
--- 
qual_all_op: 
all_op 
OPERATOR '(' any_operator ')' 
--- 
subquery_op: 
all_op 
OPERATOR '(' any_operator ')' 
LIKE 
NOT LIKE 
ILIKE 
NOT ILIKE 
--- 
expr_list: 
a_expr 
expr_list ',' a_expr 
--- 
func_arg_list: 
func_arg_expr 
func_arg_list ',' func_arg_expr 
--- 
func_arg_expr: 
a_expr 
param_name COLON_EQUALS a_expr 
param_name EQUALS_GREATER a_expr 
--- 
type_list: 
typename 
type_list ',' typename 
--- 
array_expr: 
'[' expr_list ']' 
'[' array_expr_list ']' 
'[' ']' 
--- 
array_expr_list: 
array_expr 
array_expr_list ',' array_expr 
--- 
extract_list: 
extract_arg FROM a_expr 

--- 
extract_arg: 
identifier 
YEAR_P 
MONTH_P 
DAY_P 
HOUR_P 
MINUTE_P 
SECOND_P 
sconst 
--- 
overlay_list: 
a_expr overlay_placing substr_from substr_for 
a_expr overlay_placing substr_from 
--- 
overlay_placing: 
PLACING a_expr 
--- 
position_list: 
b_expr IN_P b_expr 

--- 
substr_list: 
a_expr substr_from substr_for 
a_expr substr_for substr_from 
a_expr substr_from 
a_expr substr_for 
expr_list 

--- 
substr_from: 
FROM a_expr 
--- 
substr_for: 
FOR a_expr 
--- 
trim_list: 
a_expr FROM expr_list 
FROM expr_list 
expr_list 
--- 
in_expr: 
select_with_parens 
'(' expr_list ')' 
--- 
case_expr: 
CASE case_arg when_clause_list case_default END_P 
--- 
when_clause_list: 
when_clause 
when_clause_list when_clause 
--- 
when_clause: 
WHEN a_expr THEN a_expr 
--- 
case_default: 
ELSE a_expr 

--- 
case_arg: 
a_expr 

--- 
columnref: 
col_id 
col_id indirection 
--- 
indirection_el: 
'.' attr_name 
'.' '*' 
'[' a_expr ']' 
'[' opt_slice_bound ':' opt_slice_bound ']' 
--- 
opt_slice_bound: 
a_expr 

--- 
indirection: 
indirection_el 
indirection indirection_el 
--- 
opt_indirection: 

opt_indirection indirection_el 
--- 
opt_asymmetric: 
ASYMMETRIC 

--- 
opt_target_list: 
target_list 

--- 
target_list: 
target_el 
target_list ',' target_el 
--- 
target_el: 
a_expr AS col_label 
a_expr identifier 
a_expr 
'*' 
--- 
qualified_name_list: 
qualified_name 
qualified_name_list ',' qualified_name 
--- 
qualified_name: 
col_id 
col_id indirection 
--- 
name_list: 
name 
name_list ',' name 
--- 
name: 
col_id 
--- 
database_name: 
col_id 
--- 
access_method: 
col_id 
--- 
attr_name: 
col_label 
--- 
index_name: 
col_id 
--- 
file_name: 
sconst 
--- 
func_name: 
type_function_name 
col_id indirection 
--- 
aexpr_const: 
iconst 
fconst 
sconst 
BCONST 
XCONST 
func_name sconst 
func_name '(' func_arg_list opt_sort_clause ')' sconst 
const_typename sconst 
const_interval sconst opt_interval 
const_interval '(' iconst ')' sconst 
TRUE_P 
FALSE_P 
NULL_P 
--- 
iconst: 
INTLITERAL 
--- 
sconst: 
STRINGLITERAL 
--- 
signed_iconst: 
iconst 
UMINUS iconst 
UPLUS iconst 
--- 
role_id: 
role_spec 
--- 
role_spec: 
non_reserved_word 
CURRENT_USER 
SESSION_USER 
--- 
role_list: 
role_spec 
role_list ',' role_spec 
--- 
col_id: 
identifier 
--- 
type_function_name: 
identifier 
--- 
non_reserved_word: 
identifier 
--- 
col_label: 
identifier 
--- 
guess_op: 
OP 
--- 
identifier: 
IDENTIFIER 
--- 
fconst: 
FLOATLITERAL 
--- 

