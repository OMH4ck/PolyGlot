	class Number {
	EPSILON;
	MAX_SAFE_INTEGER;
	MAX_VALUE;
	MIN_SAFE_INTEGER;
	MIN_VALUE;
	NEGATIVE_INFINITY;
	NaN;
	POSITIVE_INFINITY;
	isFinite(value){}
	isInteger(value){}
	isNaN(value){}
	isSafeInteger(testValue){}
	parseFloat(string){}
	parseInt(string){}
	arguments;
	caller;
	displayName;
	length;
	name;
	__proto__;
	constructor;
	setPrototypeOf(obj, prototype){}
	toExponential(fractionDigits){}
	toFixed(digits){}
	toLocaleString(){}
	toPrecision(precision){}
	toSource(){}
	toString(){}
	valueOf(){}
	}
	
