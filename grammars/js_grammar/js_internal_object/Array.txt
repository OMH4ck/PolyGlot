	class Array {
	length;
	from(arrayLike){}
	isArray(obj){}
	of(element0){}
	arguments;
	caller;
	displayName;
	name;
	__proto__;
	constructor;
	setPrototypeOf(obj, prototype){}
	concat(value1){}
	copyWithin(target){}
	entries(){}
	every(callback){}
	fill(value){}
	filter(f){}
	find(callback){}
	findIndex(callback){}
	flat(){}
	flatMap(){}
	includes(valueToFind){}
	indexOf(searchElement){}
	join(){}
	keys(){}
	lastIndexOf(searchElement){}
	map(a) {}
	pop(){}
	push(element1, elementN){}
	reduce(f){}
	reduceRight(f){}
	reverse(){}
	shift(){}
	slice(){}
	some(f){}
	sort(){}
	splice(start){}
	toLocaleString(){}
	toSource(){}
	toString(){}
	unshift(element1, elementN){}
	values(){}
	}

