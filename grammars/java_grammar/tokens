IDENTIFIERduck0duck0duckIDENTIFIERducksval
OP_DOTduck18duckleftduck"."duck0
OP_COMMAduck0duck0duck","duck0
PACKAGEduck0duck0duck"package"duck0
OP_SEMIduck0duck0duck";"duck0
IMPORTduck3duckleftduck"import"duck0
OP_STARduck14duckleftduck"*"duck0
STATICduck0duck0duck"static"duck0
EXTENDSduck0duck0duck"extends"duck0
IMPLEMENTSduck0duck0duck"implements"duck0
CLASSduck0duck0duck"class"duck0
ENUMduck0duck0duck"enum"duck0
INTERFACEduck0duck0duck"interface"duck0
OP_LBRACKETduck5duckleftduck"["duck0
OP_RBRACKETduck0duck0duck"]"duck0
BYTEduck0duck0duck"byte"duck0
SHORTduck0duck0duck"short"duck0
CHARduck0duck0duck"char"duck0
INTduck0duck0duck"int"duck0
LONGduck0duck0duck"long"duck0
FLOATduck0duck0duck"float"duck0
DOUBLEduck0duck0duck"double"duck0
BOOLEANduck0duck0duck"boolean"duck0
OP_LESSTHANduck10duckleftduck"<"duck0
OP_GTEATERTHANduck10duckleftduck">"duck0
OP_QUESTIONduck6duckrightduck"?"duck0
SUPERduck0duck0duck"super"duck0
OP_BITANDduck17duckleftduck"&"duck0
PUBLICduck0duck0duck"public"duck0
PROTECTEDduck0duck0duck"protected"duck0
PRIVATEduck0duck0duck"private"duck0
ABSTRACTduck0duck0duck"abstract"duck0
FINALduck0duck0duck"final"duck0
NATIVEduck0duck0duck"native"duck0
SYNCHRONIZEDduck0duck0duck"synchronized"duck0
TRANSIENTduck0duck0duck"transient"duck0
VOLATILEduck0duck0duck"volatile"duck0
STRICTFPduck0duck0duck"strictfp"duck0
OP_LBRACEduck0duck0duck"{"duck0
OP_RBRACEduck0duck0duck"}"duck0
VOIDduck3duckleftduck"void"duck0
THROWSduck0duck0duck"throws"duck0
OP_EQUALduck2duckrightduck"="duck0
OP_LPduck5duckleftduck"("duck0
OP_RPduck0duck0duck")"duck0
ELLIPSISduck0duck0duck"..."duck0
OP_COLONduck0duck0duck":"duck0
IFduck4duckrightduck"if"duck0
ELSEduck18duckleftduck"else"duck0
ASSERTduck0duck0duck"assert"duck0
SWITCHduck4duckrightduck"switch"duck0
WHILEduck4duckrightduck"while"duck0
DOduck4duckrightduck"do"duck0
FORduck4duckrightduck"for"duck0
BREAKduck0duck0duck"break"duck0
CONTINUEduck0duck0duck"continue"duck0
RETURNduck0duck0duck"return"duck0
THROWduck4duckrightduck"throw"duck0
TRYduck0duck0duck"try"duck0
CATCHduck0duck0duck"catch"duck0
OP_BITORduck11duckleftduck"|"duck0
FINALLYduck0duck0duck"finally"duck0
CASEduck0duck0duck"case"duck0
DEFAULTduck0duck0duck"default"duck0
ADD_ASSIGNduck2duckrightduck"+="duck0
SUB_ASSIGNduck2duckrightduck"-="duck0
MUL_ASSIGNduck2duckrightduck"*="duck0
DIV_ASSIGNduck2duckrightduck"/="duck0
AND_ASSIGNduck2duckrightduck"&="duck0
OR_ASSIGNduck2duckrightduck"|="duck0
XOR_ASSIGNduck2duckrightduck"^="duck0
MOD_ASSIGNduck2duckrightduck"%="duck0
LEFT_ASSIGNduck2duckrightduck"<<="duck0
RIGHT_ASSIGNduck2duckrightduck">>="duck0
GGGE_OPduck10duckleftduck">>>="duck0
INSTANCEOFduck5duckleftduck"instanceof"duck0
OR_OPduck7duckleftduck"||"duck0
AND_OPduck8duckleftduck"&&"duck0
OP_XORduck11duckleftduck"^"duck0
EQ_OPduck9ducknonassocduck"=="duck0
NE_OPduck9ducknonassocduck"!="duck0
LE_OPduck10duckleftduck"<="duck0
GE_OPduck10duckleftduck">="duck0
LEFT_OPduck12duckleftduck"<<"duck0
RIGHT_OPduck12duckleftduck">>"duck0
OP_TGduck12duckleftduck">>>"duck0
OP_ADDduck13duckleftduck"+"duck0
OP_SUBduck13duckleftduck"-"duck0
OP_DIVIDEduck14duckleftduck"/"duck0
OP_MODduck14duckleftduck"%"duck0
INC_OPduck18duckleftduck"++"duck0
DEC_OPduck18duckleftduck"--"duck0
OP_NOTduck17duckleftduck"!"duck0
OP_BITNOTduck17duckleftduck"~"duck0
THISduck0duck0duck"this"duck0
NEWduck3duckleftduck"new"duck0
TRUEduck0duck0duck"true"duck0
FALSEduck0duck0duck"false"duck0
STRINGLITERALduck0duck0duckSTRINGLITERALducksval
NULLduck0duck0duck"null"duck0
INTLITERALduck0duck0duckINTLITERALduckival
FLOATLITERALduck0duck0duckFLOATLITERALduckfval
CHARLITERALduck0duck0duckCHARLITERALducksval

